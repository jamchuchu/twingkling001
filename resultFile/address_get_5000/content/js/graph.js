/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 15.0, "minX": 0.0, "maxY": 5127.0, "series": [{"data": [[0.0, 15.0], [0.1, 20.0], [0.2, 23.0], [0.3, 38.0], [0.4, 51.0], [0.5, 60.0], [0.6, 62.0], [0.7, 65.0], [0.8, 76.0], [0.9, 853.0], [1.0, 878.0], [1.1, 889.0], [1.2, 905.0], [1.3, 910.0], [1.4, 913.0], [1.5, 922.0], [1.6, 927.0], [1.7, 928.0], [1.8, 931.0], [1.9, 933.0], [2.0, 936.0], [2.1, 938.0], [2.2, 941.0], [2.3, 943.0], [2.4, 946.0], [2.5, 952.0], [2.6, 956.0], [2.7, 961.0], [2.8, 963.0], [2.9, 966.0], [3.0, 969.0], [3.1, 974.0], [3.2, 978.0], [3.3, 980.0], [3.4, 981.0], [3.5, 986.0], [3.6, 988.0], [3.7, 995.0], [3.8, 998.0], [3.9, 1005.0], [4.0, 1006.0], [4.1, 1008.0], [4.2, 1012.0], [4.3, 1017.0], [4.4, 1024.0], [4.5, 1029.0], [4.6, 1035.0], [4.7, 1040.0], [4.8, 1044.0], [4.9, 1048.0], [5.0, 1052.0], [5.1, 1054.0], [5.2, 1057.0], [5.3, 1060.0], [5.4, 1063.0], [5.5, 1068.0], [5.6, 1069.0], [5.7, 1072.0], [5.8, 1075.0], [5.9, 1079.0], [6.0, 1081.0], [6.1, 1083.0], [6.2, 1089.0], [6.3, 1092.0], [6.4, 1094.0], [6.5, 1096.0], [6.6, 1098.0], [6.7, 1102.0], [6.8, 1104.0], [6.9, 1107.0], [7.0, 1109.0], [7.1, 1111.0], [7.2, 1114.0], [7.3, 1118.0], [7.4, 1122.0], [7.5, 1125.0], [7.6, 1128.0], [7.7, 1132.0], [7.8, 1135.0], [7.9, 1136.0], [8.0, 1141.0], [8.1, 1145.0], [8.2, 1151.0], [8.3, 1154.0], [8.4, 1156.0], [8.5, 1157.0], [8.6, 1159.0], [8.7, 1161.0], [8.8, 1164.0], [8.9, 1166.0], [9.0, 1169.0], [9.1, 1170.0], [9.2, 1174.0], [9.3, 1176.0], [9.4, 1178.0], [9.5, 1180.0], [9.6, 1184.0], [9.7, 1192.0], [9.8, 1195.0], [9.9, 1201.0], [10.0, 1204.0], [10.1, 1206.0], [10.2, 1212.0], [10.3, 1216.0], [10.4, 1218.0], [10.5, 1225.0], [10.6, 1228.0], [10.7, 1231.0], [10.8, 1233.0], [10.9, 1236.0], [11.0, 1238.0], [11.1, 1242.0], [11.2, 1245.0], [11.3, 1248.0], [11.4, 1250.0], [11.5, 1254.0], [11.6, 1255.0], [11.7, 1256.0], [11.8, 1258.0], [11.9, 1262.0], [12.0, 1263.0], [12.1, 1265.0], [12.2, 1266.0], [12.3, 1267.0], [12.4, 1268.0], [12.5, 1270.0], [12.6, 1272.0], [12.7, 1275.0], [12.8, 1276.0], [12.9, 1279.0], [13.0, 1281.0], [13.1, 1282.0], [13.2, 1283.0], [13.3, 1287.0], [13.4, 1290.0], [13.5, 1292.0], [13.6, 1293.0], [13.7, 1296.0], [13.8, 1298.0], [13.9, 1300.0], [14.0, 1301.0], [14.1, 1304.0], [14.2, 1307.0], [14.3, 1311.0], [14.4, 1313.0], [14.5, 1314.0], [14.6, 1315.0], [14.7, 1316.0], [14.8, 1318.0], [14.9, 1320.0], [15.0, 1323.0], [15.1, 1326.0], [15.2, 1329.0], [15.3, 1330.0], [15.4, 1332.0], [15.5, 1333.0], [15.6, 1335.0], [15.7, 1338.0], [15.8, 1340.0], [15.9, 1343.0], [16.0, 1344.0], [16.1, 1344.0], [16.2, 1346.0], [16.3, 1349.0], [16.4, 1351.0], [16.5, 1354.0], [16.6, 1355.0], [16.7, 1355.0], [16.8, 1358.0], [16.9, 1361.0], [17.0, 1361.0], [17.1, 1363.0], [17.2, 1366.0], [17.3, 1369.0], [17.4, 1370.0], [17.5, 1374.0], [17.6, 1375.0], [17.7, 1377.0], [17.8, 1379.0], [17.9, 1380.0], [18.0, 1381.0], [18.1, 1382.0], [18.2, 1383.0], [18.3, 1383.0], [18.4, 1385.0], [18.5, 1386.0], [18.6, 1388.0], [18.7, 1389.0], [18.8, 1391.0], [18.9, 1393.0], [19.0, 1394.0], [19.1, 1396.0], [19.2, 1398.0], [19.3, 1400.0], [19.4, 1403.0], [19.5, 1407.0], [19.6, 1409.0], [19.7, 1412.0], [19.8, 1413.0], [19.9, 1416.0], [20.0, 1418.0], [20.1, 1422.0], [20.2, 1423.0], [20.3, 1425.0], [20.4, 1430.0], [20.5, 1432.0], [20.6, 1433.0], [20.7, 1435.0], [20.8, 1437.0], [20.9, 1439.0], [21.0, 1441.0], [21.1, 1443.0], [21.2, 1445.0], [21.3, 1446.0], [21.4, 1447.0], [21.5, 1449.0], [21.6, 1450.0], [21.7, 1451.0], [21.8, 1452.0], [21.9, 1452.0], [22.0, 1454.0], [22.1, 1456.0], [22.2, 1458.0], [22.3, 1461.0], [22.4, 1464.0], [22.5, 1468.0], [22.6, 1471.0], [22.7, 1475.0], [22.8, 1477.0], [22.9, 1478.0], [23.0, 1481.0], [23.1, 1484.0], [23.2, 1486.0], [23.3, 1488.0], [23.4, 1492.0], [23.5, 1494.0], [23.6, 1497.0], [23.7, 1503.0], [23.8, 1504.0], [23.9, 1507.0], [24.0, 1509.0], [24.1, 1511.0], [24.2, 1512.0], [24.3, 1513.0], [24.4, 1516.0], [24.5, 1517.0], [24.6, 1518.0], [24.7, 1519.0], [24.8, 1522.0], [24.9, 1524.0], [25.0, 1527.0], [25.1, 1528.0], [25.2, 1530.0], [25.3, 1534.0], [25.4, 1537.0], [25.5, 1539.0], [25.6, 1545.0], [25.7, 1549.0], [25.8, 1552.0], [25.9, 1554.0], [26.0, 1555.0], [26.1, 1558.0], [26.2, 1562.0], [26.3, 1565.0], [26.4, 1568.0], [26.5, 1573.0], [26.6, 1575.0], [26.7, 1577.0], [26.8, 1581.0], [26.9, 1587.0], [27.0, 1589.0], [27.1, 1592.0], [27.2, 1595.0], [27.3, 1597.0], [27.4, 1599.0], [27.5, 1601.0], [27.6, 1603.0], [27.7, 1606.0], [27.8, 1608.0], [27.9, 1609.0], [28.0, 1610.0], [28.1, 1613.0], [28.2, 1615.0], [28.3, 1618.0], [28.4, 1621.0], [28.5, 1624.0], [28.6, 1626.0], [28.7, 1629.0], [28.8, 1633.0], [28.9, 1635.0], [29.0, 1639.0], [29.1, 1642.0], [29.2, 1644.0], [29.3, 1646.0], [29.4, 1648.0], [29.5, 1650.0], [29.6, 1652.0], [29.7, 1654.0], [29.8, 1657.0], [29.9, 1662.0], [30.0, 1664.0], [30.1, 1666.0], [30.2, 1671.0], [30.3, 1673.0], [30.4, 1675.0], [30.5, 1683.0], [30.6, 1687.0], [30.7, 1693.0], [30.8, 1699.0], [30.9, 1701.0], [31.0, 1703.0], [31.1, 1707.0], [31.2, 1708.0], [31.3, 1709.0], [31.4, 1712.0], [31.5, 1716.0], [31.6, 1719.0], [31.7, 1722.0], [31.8, 1725.0], [31.9, 1729.0], [32.0, 1732.0], [32.1, 1735.0], [32.2, 1739.0], [32.3, 1742.0], [32.4, 1751.0], [32.5, 1755.0], [32.6, 1757.0], [32.7, 1759.0], [32.8, 1760.0], [32.9, 1763.0], [33.0, 1765.0], [33.1, 1769.0], [33.2, 1769.0], [33.3, 1770.0], [33.4, 1772.0], [33.5, 1773.0], [33.6, 1773.0], [33.7, 1775.0], [33.8, 1778.0], [33.9, 1779.0], [34.0, 1779.0], [34.1, 1783.0], [34.2, 1787.0], [34.3, 1790.0], [34.4, 1798.0], [34.5, 1801.0], [34.6, 1804.0], [34.7, 1814.0], [34.8, 1821.0], [34.9, 1825.0], [35.0, 1828.0], [35.1, 1830.0], [35.2, 1835.0], [35.3, 1840.0], [35.4, 1843.0], [35.5, 1852.0], [35.6, 1862.0], [35.7, 1870.0], [35.8, 1883.0], [35.9, 1886.0], [36.0, 1899.0], [36.1, 1907.0], [36.2, 1910.0], [36.3, 1918.0], [36.4, 1924.0], [36.5, 1936.0], [36.6, 1948.0], [36.7, 1965.0], [36.8, 1970.0], [36.9, 1973.0], [37.0, 1976.0], [37.1, 1979.0], [37.2, 1983.0], [37.3, 1988.0], [37.4, 1993.0], [37.5, 1997.0], [37.6, 2002.0], [37.7, 2006.0], [37.8, 2019.0], [37.9, 2027.0], [38.0, 2036.0], [38.1, 2042.0], [38.2, 2047.0], [38.3, 2053.0], [38.4, 2063.0], [38.5, 2082.0], [38.6, 2087.0], [38.7, 2102.0], [38.8, 2125.0], [38.9, 2136.0], [39.0, 2146.0], [39.1, 2155.0], [39.2, 2165.0], [39.3, 2166.0], [39.4, 2172.0], [39.5, 2178.0], [39.6, 2180.0], [39.7, 2182.0], [39.8, 2186.0], [39.9, 2192.0], [40.0, 2193.0], [40.1, 2201.0], [40.2, 2205.0], [40.3, 2207.0], [40.4, 2210.0], [40.5, 2214.0], [40.6, 2218.0], [40.7, 2223.0], [40.8, 2229.0], [40.9, 2234.0], [41.0, 2237.0], [41.1, 2242.0], [41.2, 2255.0], [41.3, 2263.0], [41.4, 2271.0], [41.5, 2278.0], [41.6, 2285.0], [41.7, 2288.0], [41.8, 2292.0], [41.9, 2296.0], [42.0, 2308.0], [42.1, 2313.0], [42.2, 2316.0], [42.3, 2321.0], [42.4, 2327.0], [42.5, 2336.0], [42.6, 2341.0], [42.7, 2343.0], [42.8, 2348.0], [42.9, 2352.0], [43.0, 2354.0], [43.1, 2358.0], [43.2, 2361.0], [43.3, 2364.0], [43.4, 2368.0], [43.5, 2373.0], [43.6, 2375.0], [43.7, 2376.0], [43.8, 2384.0], [43.9, 2386.0], [44.0, 2389.0], [44.1, 2392.0], [44.2, 2398.0], [44.3, 2402.0], [44.4, 2406.0], [44.5, 2414.0], [44.6, 2416.0], [44.7, 2422.0], [44.8, 2425.0], [44.9, 2429.0], [45.0, 2431.0], [45.1, 2435.0], [45.2, 2438.0], [45.3, 2440.0], [45.4, 2444.0], [45.5, 2452.0], [45.6, 2454.0], [45.7, 2459.0], [45.8, 2467.0], [45.9, 2472.0], [46.0, 2482.0], [46.1, 2488.0], [46.2, 2492.0], [46.3, 2495.0], [46.4, 2498.0], [46.5, 2499.0], [46.6, 2509.0], [46.7, 2515.0], [46.8, 2518.0], [46.9, 2520.0], [47.0, 2526.0], [47.1, 2530.0], [47.2, 2534.0], [47.3, 2536.0], [47.4, 2538.0], [47.5, 2541.0], [47.6, 2545.0], [47.7, 2547.0], [47.8, 2550.0], [47.9, 2553.0], [48.0, 2556.0], [48.1, 2560.0], [48.2, 2563.0], [48.3, 2572.0], [48.4, 2584.0], [48.5, 2589.0], [48.6, 2591.0], [48.7, 2597.0], [48.8, 2605.0], [48.9, 2608.0], [49.0, 2611.0], [49.1, 2613.0], [49.2, 2615.0], [49.3, 2620.0], [49.4, 2620.0], [49.5, 2623.0], [49.6, 2628.0], [49.7, 2631.0], [49.8, 2634.0], [49.9, 2638.0], [50.0, 2643.0], [50.1, 2647.0], [50.2, 2649.0], [50.3, 2654.0], [50.4, 2657.0], [50.5, 2661.0], [50.6, 2663.0], [50.7, 2667.0], [50.8, 2670.0], [50.9, 2673.0], [51.0, 2677.0], [51.1, 2678.0], [51.2, 2680.0], [51.3, 2681.0], [51.4, 2683.0], [51.5, 2685.0], [51.6, 2692.0], [51.7, 2693.0], [51.8, 2696.0], [51.9, 2699.0], [52.0, 2701.0], [52.1, 2703.0], [52.2, 2706.0], [52.3, 2711.0], [52.4, 2717.0], [52.5, 2719.0], [52.6, 2723.0], [52.7, 2725.0], [52.8, 2729.0], [52.9, 2735.0], [53.0, 2738.0], [53.1, 2740.0], [53.2, 2744.0], [53.3, 2745.0], [53.4, 2749.0], [53.5, 2749.0], [53.6, 2752.0], [53.7, 2755.0], [53.8, 2758.0], [53.9, 2760.0], [54.0, 2761.0], [54.1, 2764.0], [54.2, 2766.0], [54.3, 2768.0], [54.4, 2769.0], [54.5, 2772.0], [54.6, 2774.0], [54.7, 2776.0], [54.8, 2777.0], [54.9, 2779.0], [55.0, 2782.0], [55.1, 2784.0], [55.2, 2787.0], [55.3, 2790.0], [55.4, 2793.0], [55.5, 2795.0], [55.6, 2796.0], [55.7, 2798.0], [55.8, 2801.0], [55.9, 2807.0], [56.0, 2809.0], [56.1, 2812.0], [56.2, 2815.0], [56.3, 2818.0], [56.4, 2821.0], [56.5, 2825.0], [56.6, 2829.0], [56.7, 2832.0], [56.8, 2839.0], [56.9, 2843.0], [57.0, 2846.0], [57.1, 2849.0], [57.2, 2852.0], [57.3, 2854.0], [57.4, 2859.0], [57.5, 2864.0], [57.6, 2865.0], [57.7, 2868.0], [57.8, 2871.0], [57.9, 2874.0], [58.0, 2879.0], [58.1, 2882.0], [58.2, 2887.0], [58.3, 2890.0], [58.4, 2893.0], [58.5, 2897.0], [58.6, 2899.0], [58.7, 2902.0], [58.8, 2905.0], [58.9, 2907.0], [59.0, 2912.0], [59.1, 2914.0], [59.2, 2917.0], [59.3, 2919.0], [59.4, 2922.0], [59.5, 2925.0], [59.6, 2932.0], [59.7, 2937.0], [59.8, 2943.0], [59.9, 2947.0], [60.0, 2952.0], [60.1, 2955.0], [60.2, 2960.0], [60.3, 2963.0], [60.4, 2965.0], [60.5, 2969.0], [60.6, 2973.0], [60.7, 2977.0], [60.8, 2980.0], [60.9, 2983.0], [61.0, 2988.0], [61.1, 2992.0], [61.2, 2996.0], [61.3, 2998.0], [61.4, 3003.0], [61.5, 3009.0], [61.6, 3013.0], [61.7, 3017.0], [61.8, 3020.0], [61.9, 3026.0], [62.0, 3031.0], [62.1, 3036.0], [62.2, 3042.0], [62.3, 3046.0], [62.4, 3048.0], [62.5, 3051.0], [62.6, 3052.0], [62.7, 3056.0], [62.8, 3059.0], [62.9, 3061.0], [63.0, 3064.0], [63.1, 3069.0], [63.2, 3074.0], [63.3, 3078.0], [63.4, 3084.0], [63.5, 3089.0], [63.6, 3094.0], [63.7, 3098.0], [63.8, 3101.0], [63.9, 3103.0], [64.0, 3107.0], [64.1, 3112.0], [64.2, 3117.0], [64.3, 3121.0], [64.4, 3123.0], [64.5, 3126.0], [64.6, 3127.0], [64.7, 3130.0], [64.8, 3131.0], [64.9, 3133.0], [65.0, 3135.0], [65.1, 3138.0], [65.2, 3144.0], [65.3, 3149.0], [65.4, 3150.0], [65.5, 3154.0], [65.6, 3157.0], [65.7, 3159.0], [65.8, 3163.0], [65.9, 3166.0], [66.0, 3169.0], [66.1, 3172.0], [66.2, 3173.0], [66.3, 3176.0], [66.4, 3176.0], [66.5, 3178.0], [66.6, 3179.0], [66.7, 3181.0], [66.8, 3182.0], [66.9, 3183.0], [67.0, 3185.0], [67.1, 3187.0], [67.2, 3188.0], [67.3, 3189.0], [67.4, 3190.0], [67.5, 3192.0], [67.6, 3192.0], [67.7, 3196.0], [67.8, 3197.0], [67.9, 3200.0], [68.0, 3203.0], [68.1, 3206.0], [68.2, 3208.0], [68.3, 3210.0], [68.4, 3213.0], [68.5, 3216.0], [68.6, 3217.0], [68.7, 3218.0], [68.8, 3219.0], [68.9, 3221.0], [69.0, 3223.0], [69.1, 3223.0], [69.2, 3225.0], [69.3, 3227.0], [69.4, 3232.0], [69.5, 3234.0], [69.6, 3236.0], [69.7, 3238.0], [69.8, 3240.0], [69.9, 3243.0], [70.0, 3244.0], [70.1, 3246.0], [70.2, 3249.0], [70.3, 3252.0], [70.4, 3254.0], [70.5, 3258.0], [70.6, 3264.0], [70.7, 3269.0], [70.8, 3273.0], [70.9, 3281.0], [71.0, 3282.0], [71.1, 3286.0], [71.2, 3293.0], [71.3, 3298.0], [71.4, 3302.0], [71.5, 3305.0], [71.6, 3309.0], [71.7, 3316.0], [71.8, 3318.0], [71.9, 3321.0], [72.0, 3325.0], [72.1, 3327.0], [72.2, 3329.0], [72.3, 3331.0], [72.4, 3332.0], [72.5, 3334.0], [72.6, 3337.0], [72.7, 3337.0], [72.8, 3340.0], [72.9, 3341.0], [73.0, 3344.0], [73.1, 3347.0], [73.2, 3350.0], [73.3, 3353.0], [73.4, 3358.0], [73.5, 3362.0], [73.6, 3368.0], [73.7, 3371.0], [73.8, 3375.0], [73.9, 3382.0], [74.0, 3388.0], [74.1, 3392.0], [74.2, 3404.0], [74.3, 3410.0], [74.4, 3417.0], [74.5, 3425.0], [74.6, 3429.0], [74.7, 3435.0], [74.8, 3440.0], [74.9, 3443.0], [75.0, 3448.0], [75.1, 3454.0], [75.2, 3466.0], [75.3, 3473.0], [75.4, 3477.0], [75.5, 3484.0], [75.6, 3488.0], [75.7, 3492.0], [75.8, 3496.0], [75.9, 3499.0], [76.0, 3502.0], [76.1, 3509.0], [76.2, 3515.0], [76.3, 3521.0], [76.4, 3529.0], [76.5, 3540.0], [76.6, 3545.0], [76.7, 3552.0], [76.8, 3562.0], [76.9, 3575.0], [77.0, 3582.0], [77.1, 3597.0], [77.2, 3611.0], [77.3, 3620.0], [77.4, 3634.0], [77.5, 3661.0], [77.6, 3672.0], [77.7, 3678.0], [77.8, 3680.0], [77.9, 3683.0], [78.0, 3687.0], [78.1, 3690.0], [78.2, 3693.0], [78.3, 3698.0], [78.4, 3700.0], [78.5, 3708.0], [78.6, 3710.0], [78.7, 3720.0], [78.8, 3724.0], [78.9, 3727.0], [79.0, 3732.0], [79.1, 3737.0], [79.2, 3742.0], [79.3, 3749.0], [79.4, 3755.0], [79.5, 3761.0], [79.6, 3800.0], [79.7, 3810.0], [79.8, 3819.0], [79.9, 3824.0], [80.0, 3828.0], [80.1, 3832.0], [80.2, 3834.0], [80.3, 3835.0], [80.4, 3838.0], [80.5, 3841.0], [80.6, 3843.0], [80.7, 3847.0], [80.8, 3851.0], [80.9, 3852.0], [81.0, 3855.0], [81.1, 3858.0], [81.2, 3860.0], [81.3, 3863.0], [81.4, 3867.0], [81.5, 3870.0], [81.6, 3874.0], [81.7, 3878.0], [81.8, 3881.0], [81.9, 3883.0], [82.0, 3885.0], [82.1, 3894.0], [82.2, 3897.0], [82.3, 3901.0], [82.4, 3904.0], [82.5, 3905.0], [82.6, 3909.0], [82.7, 3911.0], [82.8, 3912.0], [82.9, 3918.0], [83.0, 3931.0], [83.1, 3934.0], [83.2, 3940.0], [83.3, 3947.0], [83.4, 3949.0], [83.5, 3951.0], [83.6, 3954.0], [83.7, 3957.0], [83.8, 3960.0], [83.9, 3967.0], [84.0, 3974.0], [84.1, 3980.0], [84.2, 3985.0], [84.3, 4001.0], [84.4, 4010.0], [84.5, 4015.0], [84.6, 4017.0], [84.7, 4028.0], [84.8, 4033.0], [84.9, 4039.0], [85.0, 4043.0], [85.1, 4046.0], [85.2, 4058.0], [85.3, 4069.0], [85.4, 4074.0], [85.5, 4082.0], [85.6, 4093.0], [85.7, 4097.0], [85.8, 4102.0], [85.9, 4115.0], [86.0, 4124.0], [86.1, 4125.0], [86.2, 4129.0], [86.3, 4136.0], [86.4, 4141.0], [86.5, 4145.0], [86.6, 4151.0], [86.7, 4157.0], [86.8, 4159.0], [86.9, 4166.0], [87.0, 4170.0], [87.1, 4173.0], [87.2, 4179.0], [87.3, 4183.0], [87.4, 4186.0], [87.5, 4190.0], [87.6, 4192.0], [87.7, 4198.0], [87.8, 4206.0], [87.9, 4213.0], [88.0, 4219.0], [88.1, 4227.0], [88.2, 4229.0], [88.3, 4233.0], [88.4, 4238.0], [88.5, 4242.0], [88.6, 4249.0], [88.7, 4254.0], [88.8, 4255.0], [88.9, 4257.0], [89.0, 4259.0], [89.1, 4261.0], [89.2, 4264.0], [89.3, 4268.0], [89.4, 4271.0], [89.5, 4276.0], [89.6, 4279.0], [89.7, 4282.0], [89.8, 4288.0], [89.9, 4292.0], [90.0, 4298.0], [90.1, 4307.0], [90.2, 4312.0], [90.3, 4316.0], [90.4, 4322.0], [90.5, 4330.0], [90.6, 4336.0], [90.7, 4338.0], [90.8, 4349.0], [90.9, 4357.0], [91.0, 4360.0], [91.1, 4365.0], [91.2, 4372.0], [91.3, 4376.0], [91.4, 4381.0], [91.5, 4387.0], [91.6, 4389.0], [91.7, 4394.0], [91.8, 4397.0], [91.9, 4398.0], [92.0, 4408.0], [92.1, 4412.0], [92.2, 4417.0], [92.3, 4422.0], [92.4, 4427.0], [92.5, 4431.0], [92.6, 4437.0], [92.7, 4441.0], [92.8, 4444.0], [92.9, 4449.0], [93.0, 4453.0], [93.1, 4456.0], [93.2, 4461.0], [93.3, 4465.0], [93.4, 4468.0], [93.5, 4469.0], [93.6, 4471.0], [93.7, 4473.0], [93.8, 4474.0], [93.9, 4477.0], [94.0, 4480.0], [94.1, 4485.0], [94.2, 4489.0], [94.3, 4496.0], [94.4, 4500.0], [94.5, 4504.0], [94.6, 4507.0], [94.7, 4515.0], [94.8, 4526.0], [94.9, 4537.0], [95.0, 4543.0], [95.1, 4548.0], [95.2, 4555.0], [95.3, 4558.0], [95.4, 4559.0], [95.5, 4567.0], [95.6, 4573.0], [95.7, 4582.0], [95.8, 4592.0], [95.9, 4599.0], [96.0, 4610.0], [96.1, 4615.0], [96.2, 4645.0], [96.3, 4655.0], [96.4, 4668.0], [96.5, 4676.0], [96.6, 4685.0], [96.7, 4691.0], [96.8, 4696.0], [96.9, 4700.0], [97.0, 4702.0], [97.1, 4714.0], [97.2, 4724.0], [97.3, 4726.0], [97.4, 4735.0], [97.5, 4740.0], [97.6, 4753.0], [97.7, 4757.0], [97.8, 4764.0], [97.9, 4767.0], [98.0, 4772.0], [98.1, 4776.0], [98.2, 4782.0], [98.3, 4803.0], [98.4, 4837.0], [98.5, 4874.0], [98.6, 4891.0], [98.7, 4893.0], [98.8, 4899.0], [98.9, 4908.0], [99.0, 4915.0], [99.1, 4944.0], [99.2, 4959.0], [99.3, 4964.0], [99.4, 4975.0], [99.5, 4982.0], [99.6, 4995.0], [99.7, 5011.0], [99.8, 5034.0], [99.9, 5058.0], [100.0, 5127.0]], "isOverall": false, "label": "HTTP 요청", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 268.0, "series": [{"data": [[0.0, 43.0], [800.0, 14.0], [900.0, 134.0], [1000.0, 142.0], [1100.0, 161.0], [1200.0, 201.0], [1300.0, 268.0], [1400.0, 219.0], [1500.0, 190.0], [1600.0, 169.0], [1700.0, 182.0], [1800.0, 78.0], [1900.0, 77.0], [2000.0, 55.0], [2100.0, 69.0], [2200.0, 95.0], [2300.0, 115.0], [2400.0, 113.0], [2500.0, 111.0], [2600.0, 159.0], [2700.0, 192.0], [2800.0, 144.0], [2900.0, 135.0], [3000.0, 120.0], [3100.0, 208.0], [3200.0, 173.0], [3300.0, 141.0], [3400.0, 87.0], [3500.0, 62.0], [3600.0, 62.0], [3700.0, 60.0], [3800.0, 134.0], [3900.0, 101.0], [4000.0, 73.0], [4100.0, 99.0], [4200.0, 115.0], [4300.0, 95.0], [4400.0, 123.0], [4500.0, 76.0], [4600.0, 49.0], [4700.0, 70.0], [4800.0, 26.0], [5000.0, 12.0], [4900.0, 43.0], [5100.0, 5.0]], "isOverall": false, "label": "HTTP 요청", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 5100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 43.0, "minX": 0.0, "ticks": [[0, "요청 수 \n(응답시간 <= 500ms)"], [1, "요청 수 \n(응답시간 > 500ms 및 <= 1,500ms)"], [2, "요청 수 \n(응답시간 > 1,500ms)"], [3, "오류 발생 요청"]], "maxY": 3816.0, "series": [{"data": [[0.0, 43.0]], "color": "#9ACD32", "isOverall": false, "label": "요청 수 \n(응답시간 <= 500ms)", "isController": false}, {"data": [[1.0, 1141.0]], "color": "yellow", "isOverall": false, "label": "요청 수 \n(응답시간 > 500ms 및 <= 1,500ms)", "isController": false}, {"data": [[2.0, 3816.0]], "color": "orange", "isOverall": false, "label": "요청 수 \n(응답시간 > 1,500ms)", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "오류 발생 요청", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2471.493399999997, "minX": 1.72049286E12, "maxY": 2471.493399999997, "series": [{"data": [[1.72049286E12, 2471.493399999997]], "isOverall": false, "label": "쓰레드 그룹", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72049286E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 15.666666666666666, "minX": 1.0, "maxY": 5127.0, "series": [{"data": [[2.0, 4978.0], [4.0, 4725.0], [5.0, 4493.0], [6.0, 4982.0], [8.0, 4723.0], [12.0, 4990.25], [13.0, 4465.0], [15.0, 4459.0], [16.0, 4549.0], [17.0, 4494.0], [19.0, 4469.0], [20.0, 4456.0], [21.0, 4974.0], [23.0, 4474.666666666667], [27.0, 4707.0], [28.0, 4964.0], [29.0, 4963.0], [30.0, 4465.0], [33.0, 4479.0], [32.0, 4966.5], [34.0, 4473.0], [37.0, 4477.0], [36.0, 4716.5], [39.0, 4992.0], [38.0, 5028.0], [40.0, 4984.0], [43.0, 4994.0], [42.0, 4997.0], [44.0, 4996.0], [47.0, 4953.0], [46.0, 4714.0], [49.0, 4958.0], [48.0, 4629.0], [51.0, 4956.0], [52.0, 4944.0], [55.0, 4781.5], [54.0, 4439.0], [57.0, 4462.0], [56.0, 4953.0], [59.0, 4462.5], [61.0, 5127.0], [60.0, 5055.0], [63.0, 4609.0], [62.0, 4968.0], [67.0, 5117.0], [66.0, 4612.0], [65.0, 5058.0], [64.0, 4647.0], [71.0, 4610.0], [70.0, 4927.666666666667], [75.0, 4424.0], [74.0, 5123.0], [73.0, 4796.0], [79.0, 4730.5], [77.0, 4413.0], [76.0, 4420.0], [82.0, 4673.0], [80.0, 4919.0], [87.0, 4912.0], [86.0, 4915.0], [85.0, 4916.0], [84.0, 4668.5], [91.0, 4714.0], [89.0, 4909.0], [88.0, 4915.0], [92.0, 4908.0], [98.0, 4904.0], [97.0, 4903.0], [96.0, 4523.5], [103.0, 4892.0], [102.0, 4892.0], [101.0, 4390.0], [100.0, 4648.5], [107.0, 4896.5], [105.0, 4893.0], [104.0, 4903.0], [111.0, 4895.0], [110.0, 4890.0], [109.0, 4956.5], [115.0, 4886.0], [114.0, 4892.0], [113.0, 4891.5], [118.0, 4721.666666666667], [123.0, 4369.0], [122.0, 4694.0], [120.0, 4375.5], [127.0, 4367.0], [126.0, 4693.5], [124.0, 4872.0], [135.0, 4540.5], [133.0, 4726.0], [132.0, 4285.0], [131.0, 4794.0], [130.0, 4352.0], [129.0, 4944.0], [143.0, 4782.0], [142.0, 4427.0], [141.0, 4283.0], [140.0, 4275.0], [139.0, 4280.0], [138.0, 4287.5], [136.0, 4277.0], [151.0, 4264.5], [149.0, 4524.5], [147.0, 4274.0], [146.0, 4273.0], [145.0, 4776.0], [144.0, 4780.0], [158.0, 4772.0], [157.0, 4773.0], [156.0, 4415.0], [155.0, 4767.0], [153.0, 4776.5], [163.0, 4764.0], [162.0, 4403.0], [161.0, 4412.0], [160.0, 4765.0], [204.0, 15.666666666666666], [205.0, 20.285714285714285], [214.0, 29.0], [215.0, 23.0], [244.0, 38.0], [246.0, 80.0], [245.0, 80.0], [253.0, 61.333333333333336], [252.0, 70.0], [251.0, 74.0], [249.0, 69.0], [248.0, 74.0], [264.0, 51.0], [268.0, 37.0], [267.0, 3162.3333333333335], [266.0, 45.0], [265.0, 3165.0], [263.0, 763.0], [262.0, 4725.0], [261.0, 4797.0], [260.0, 4725.0], [259.0, 1406.3333333333333], [257.0, 4458.747368421052], [258.0, 4730.0], [256.0, 62.666666666666664], [270.0, 4345.5], [269.0, 4597.0], [275.0, 4718.5], [286.0, 4073.0], [285.0, 4713.5], [283.0, 4290.333333333333], [280.0, 4073.0], [279.0, 4688.0], [277.0, 4085.5], [273.0, 4082.0], [272.0, 4655.0], [300.0, 4581.0], [302.0, 4190.0], [303.0, 4696.0], [301.0, 4698.0], [299.0, 4699.0], [298.0, 4661.0], [295.0, 4641.333333333333], [292.0, 4072.0], [291.0, 4070.5], [289.0, 4714.0], [288.0, 4648.0], [318.0, 4568.0], [317.0, 4309.0], [306.0, 4249.0], [305.0, 4635.0], [315.0, 4372.5], [313.0, 4558.0], [312.0, 4691.0], [311.0, 4693.0], [310.0, 4054.0], [309.0, 4564.0], [308.0, 4634.5], [334.0, 4555.0], [335.0, 4542.0], [333.0, 4558.0], [332.0, 4045.0], [331.0, 4173.0], [330.0, 4684.5], [328.0, 4043.0], [327.0, 4555.0], [320.0, 4441.5], [322.0, 4563.0], [321.0, 4047.0], [326.0, 4372.0], [324.0, 4555.5], [349.0, 4536.0], [348.0, 4506.5], [346.0, 4511.0], [345.0, 4537.0], [344.0, 4103.5], [342.0, 4506.0], [341.0, 4676.0], [340.0, 4596.0], [337.0, 4043.0], [354.0, 4188.0], [367.0, 4623.333333333333], [364.0, 4558.0], [353.0, 4155.0], [352.0, 4329.0], [363.0, 4499.0], [362.0, 4702.0], [361.0, 4371.0], [359.0, 4167.0], [358.0, 4559.0], [357.0, 4701.0], [356.0, 4443.0], [371.0, 4041.0], [382.0, 4492.0], [380.0, 4035.5], [378.0, 4687.0], [377.0, 4030.0], [376.0, 4543.0], [375.0, 4033.0], [374.0, 4556.0], [373.0, 4040.5], [370.0, 4035.0], [369.0, 4047.0], [387.0, 4356.5], [397.0, 4470.0], [399.0, 4016.0], [396.0, 4186.0], [393.0, 4644.0], [392.0, 4661.5], [390.0, 4474.0], [389.0, 4337.0], [385.0, 4281.0], [384.0, 4020.0], [403.0, 4515.0], [413.0, 4164.0], [412.0, 4510.0], [411.0, 4509.0], [410.0, 4016.0], [409.0, 4450.5], [405.0, 4011.0], [404.0, 4469.0], [402.0, 4468.0], [401.0, 4088.0], [429.0, 4503.0], [431.0, 4581.0], [428.0, 3997.0], [417.0, 4456.0], [416.0, 4235.333333333333], [427.0, 4500.0], [426.0, 3999.0], [425.0, 4666.0], [424.0, 4662.0], [422.0, 4506.0], [421.0, 4459.75], [446.0, 4127.0], [447.0, 4126.0], [445.0, 4309.0], [443.0, 4485.0], [441.0, 4134.0], [439.0, 4654.0], [438.0, 3933.0], [437.0, 4542.666666666667], [434.0, 4317.5], [432.0, 3985.0], [460.0, 4125.0], [462.0, 4125.0], [463.0, 3967.0], [461.0, 4473.0], [459.0, 4479.0], [457.0, 4480.0], [455.0, 4124.0], [451.0, 4488.0], [450.0, 4414.333333333333], [454.0, 4476.0], [453.0, 4479.0], [452.0, 4481.0], [478.0, 4468.0], [479.0, 4610.0], [477.0, 4611.0], [476.0, 4467.0], [475.0, 4286.0], [473.0, 4473.0], [472.0, 4516.5], [470.0, 4474.0], [464.0, 4115.0], [466.0, 4472.0], [465.0, 4471.0], [469.0, 4473.0], [468.0, 4293.0], [483.0, 4100.0], [493.0, 4599.0], [492.0, 4449.5], [490.0, 4272.5], [489.0, 3931.0], [487.0, 4094.0], [486.0, 3951.0], [485.0, 4603.0], [484.0, 4103.0], [482.0, 4461.0], [481.0, 4098.0], [480.0, 3953.0], [510.0, 3976.0], [511.0, 3974.0], [509.0, 4282.0], [497.0, 4448.0], [496.0, 4442.666666666667], [507.0, 3975.0], [506.0, 4589.0], [505.0, 3982.0], [504.0, 3984.0], [503.0, 4587.0], [502.0, 4337.5], [500.0, 4325.666666666667], [540.0, 4481.5], [542.0, 4453.0], [538.0, 4146.333333333333], [516.0, 4268.0], [514.0, 3976.0], [512.0, 3970.0], [534.0, 3952.0], [532.0, 3949.0], [530.0, 3954.0], [528.0, 3957.0], [526.0, 3956.0], [524.0, 4556.0], [520.0, 3975.0], [572.0, 4187.0], [574.0, 4474.5], [570.0, 3934.0], [568.0, 3946.0], [564.0, 3949.0], [562.0, 4485.0], [560.0, 3952.0], [558.0, 3953.5], [546.0, 3958.0], [544.0, 3948.0], [556.0, 4488.5], [554.0, 3821.0], [600.0, 3904.0], [604.0, 3904.0], [606.0, 3897.0], [602.0, 3898.0], [596.0, 4415.0], [594.0, 3913.0], [590.0, 4417.0], [580.0, 4427.0], [578.0, 4292.333333333333], [588.0, 3912.0], [586.0, 4172.5], [584.0, 4424.0], [636.0, 3737.0], [638.0, 4319.0], [632.0, 3885.0], [614.0, 4471.0], [610.0, 3955.3333333333335], [628.0, 4255.0], [626.0, 4427.0], [624.0, 4143.0], [622.0, 4471.0], [618.0, 4473.0], [616.0, 4436.5], [646.0, 4389.0], [670.0, 4426.0], [666.0, 4231.0], [660.0, 4363.0], [658.0, 4389.666666666667], [652.0, 4372.0], [650.0, 4378.0], [648.0, 4314.0], [644.0, 4193.0], [640.0, 4453.0], [686.0, 3910.0], [684.0, 4360.0], [680.0, 4136.0], [678.0, 4357.0], [676.0, 4359.0], [674.0, 3918.0], [672.0, 4111.0], [732.0, 3839.0], [826.0, 4337.0], [892.0, 4240.0], [894.0, 4236.0], [890.0, 4249.0], [888.0, 4038.0], [886.0, 4254.0], [884.0, 4253.0], [880.0, 4057.0], [878.0, 4267.0], [870.0, 4085.726256983239], [876.0, 4269.5], [874.0, 3917.5], [872.0, 4278.5], [924.0, 4060.0], [922.0, 3690.0], [918.0, 3783.5], [916.0, 4106.0], [912.0, 3964.0], [904.0, 4120.0], [902.0, 4017.0], [954.0, 3429.0], [958.0, 3471.0], [952.0, 3496.0], [950.0, 3912.0], [946.0, 3448.0], [944.0, 4029.0], [940.0, 4073.5], [938.0, 3541.0], [934.0, 4115.5], [932.0, 3542.5], [930.0, 3838.3333333333335], [986.0, 3863.0], [990.0, 3878.0], [984.0, 3885.0], [980.0, 3873.0], [978.0, 3880.0], [974.0, 3881.0], [970.0, 3915.5], [968.0, 3903.5], [966.0, 3911.0], [962.0, 3411.0], [1020.0, 3844.0], [1022.0, 3318.5], [1018.0, 3321.0], [1016.0, 3835.0], [1014.0, 3334.0], [1012.0, 3634.0], [1010.0, 3591.5], [1008.0, 3335.0], [1006.0, 3841.0], [998.0, 3846.0], [992.0, 3863.0], [1002.0, 3854.0], [1080.0, 3851.0], [1072.0, 3855.3333333333335], [1056.0, 3859.0], [1044.0, 3874.0], [1040.0, 3885.0], [1032.0, 3832.0], [1028.0, 3320.0], [1024.0, 3832.0], [1144.0, 3390.6666666666665], [1140.0, 3214.0], [1136.0, 3732.0], [1132.0, 3829.0], [1124.0, 3751.0], [1116.0, 3756.0], [1112.0, 3781.0], [1104.0, 3591.5], [1188.0, 3194.0], [1184.0, 3458.0], [1180.0, 3711.0], [1176.0, 3464.5], [1168.0, 3720.0], [1164.0, 3219.0], [1152.0, 3477.0], [1340.0, 3492.0], [1328.0, 3515.0], [1324.0, 3512.0], [1320.0, 3524.0], [1316.0, 3574.0], [1312.0, 3549.0], [1308.0, 3554.0], [1296.0, 3603.0], [1292.0, 3613.0], [1288.0, 3386.5408163265315], [1400.0, 2909.0], [1396.0, 3187.5], [1356.0, 3521.5], [1344.0, 3498.0], [1388.0, 3206.5], [1384.0, 3229.5], [1380.0, 2932.0], [1376.0, 3233.0], [1372.0, 3444.0], [1364.0, 3477.0], [1360.0, 3483.5], [1464.0, 3373.0], [1468.0, 3400.0], [1456.0, 3150.5], [1448.0, 2873.0], [1436.0, 2905.0], [1432.0, 3411.0], [1424.0, 2887.0], [1412.0, 3489.0], [1408.0, 3436.0], [1528.0, 3370.0], [1520.0, 3338.0], [1480.0, 3401.0], [1472.0, 3142.5], [1516.0, 3332.0], [1512.0, 3334.0], [1504.0, 3346.0], [1500.0, 3349.6666666666665], [1496.0, 3392.0], [1492.0, 3375.0], [1488.0, 3102.5], [1548.0, 3346.75], [1592.0, 3319.0], [1596.0, 2784.0], [1584.0, 3138.0], [1576.0, 2801.0], [1568.0, 3327.0], [1564.0, 2836.0], [1560.0, 3083.0], [1556.0, 3316.0], [1544.0, 2821.5], [1536.0, 2812.0], [1652.0, 2783.5], [1660.0, 3317.0], [1648.0, 2763.0], [1644.0, 2999.5], [1640.0, 2768.0], [1628.0, 3289.0], [1624.0, 3294.0], [1616.0, 3303.0], [1604.0, 3286.0], [1600.0, 2777.0], [1668.0, 3234.0], [1664.0, 3265.0], [1844.0, 3191.0], [1840.0, 2651.0], [1832.0, 2958.0], [1828.0, 2694.0], [1820.0, 3252.0], [1816.0, 3139.875862068966], [1864.0, 3223.0], [1908.0, 2621.0], [1904.0, 3128.0], [1900.0, 3166.0], [1892.0, 2914.0], [1888.0, 2661.0], [1884.0, 2630.0], [1876.0, 2692.5], [1860.0, 2681.0], [1856.0, 2933.0], [1932.0, 3150.0], [1980.0, 2945.3333333333335], [1972.0, 3091.0], [1968.0, 3176.0], [1960.0, 3127.0], [1948.0, 2867.5], [1944.0, 2657.0], [1924.0, 2678.0], [1920.0, 3149.5], [2044.0, 3044.0], [2040.0, 2748.6666666666665], [2036.0, 3078.0], [2016.0, 3158.0], [2012.0, 3072.0], [1996.0, 2614.0], [1992.0, 2770.3333333333335], [1984.0, 2597.0], [2152.0, 2998.0], [2160.0, 3016.0], [2144.0, 2996.0], [2064.0, 2947.5], [2048.0, 3068.5], [2136.0, 3018.5], [2128.0, 3039.0], [2120.0, 3037.0], [2104.0, 2773.5], [2096.0, 2525.0], [2088.0, 2534.0], [2080.0, 2545.5], [2288.0, 2411.0], [2296.0, 2899.0], [2280.0, 2965.0], [2272.0, 2918.0], [2264.0, 2938.0], [2256.0, 2430.0], [2248.0, 2437.0], [2240.0, 2435.0], [2216.0, 2800.0], [2184.0, 2979.0], [2176.0, 2498.0], [2400.0, 2320.0], [2408.0, 2521.6666666666665], [2424.0, 2291.0], [2416.0, 2853.0], [2368.0, 2858.0], [2360.0, 2870.0], [2320.0, 2723.6666666666665], [2328.0, 2880.0], [2352.0, 2859.0], [2344.0, 2919.0], [2432.0, 2295.0], [2672.0, 2319.5], [2680.0, 2422.0], [2640.0, 2521.6666666666665], [2624.0, 2186.0], [2656.0, 2447.5], [2584.0, 2724.6666666666665], [2576.0, 2728.0], [2560.0, 2770.0], [2600.0, 2499.0], [2592.0, 2488.0], [2800.0, 2086.0], [2808.0, 2082.0], [2752.0, 2628.0], [2760.0, 2643.0], [2792.0, 2597.0], [2704.0, 2330.3333333333335], [2744.0, 2653.5], [2736.0, 2212.0], [2720.0, 2663.0], [2776.0, 2630.0], [2768.0, 2613.0], [2928.0, 2141.3333333333335], [2936.0, 2005.0], [2880.0, 2033.0], [2888.0, 2008.0], [2896.0, 1980.0], [2920.0, 2477.0], [2912.0, 2492.0], [2832.0, 2545.0], [2864.0, 2554.0], [2856.0, 2036.0], [2848.0, 2042.0], [2904.0, 1972.0], [3040.0, 2389.6666666666665], [3056.0, 1983.0], [2968.0, 2440.0], [2960.0, 2429.0], [2944.0, 2264.0], [3000.0, 2005.0], [2992.0, 2421.5], [3032.0, 1891.0], [3008.0, 2409.3333333333335], [3176.0, 1786.0], [3192.0, 1825.0], [3168.0, 1796.0], [3088.0, 2102.0], [3080.0, 2093.5], [3072.0, 2375.0], [3304.0, 2193.0], [3272.0, 2209.0], [3296.0, 1733.0], [3200.0, 1771.0], [3224.0, 2061.0], [3256.0, 2000.25], [3248.0, 1752.0], [3280.0, 1732.0], [3448.0, 1603.0], [3424.0, 1617.0], [3408.0, 1943.0], [3384.0, 1976.5], [3376.0, 1649.5], [3360.0, 1702.5], [3480.0, 1645.0], [3576.0, 1560.5], [3528.0, 1634.5], [3552.0, 1596.0], [3472.0, 1600.0], [3464.0, 1646.5], [3456.0, 1695.5], [3512.0, 1626.0], [3504.0, 1905.0], [3488.0, 1597.0], [3544.0, 1556.0], [3680.0, 1524.5], [3648.0, 1477.0], [3672.0, 1516.0], [3688.0, 1743.5], [3608.0, 1512.0], [3640.0, 1487.0], [3632.0, 2049.0], [3624.0, 1503.0], [3720.0, 1977.5], [3752.0, 1483.5], [3712.0, 1527.0], [3744.0, 1433.5], [3728.0, 1441.0], [3872.0, 1392.0], [3984.0, 1419.9611650485442], [4040.0, 1332.0], [4056.0, 1537.5], [3992.0, 1369.0], [4024.0, 1303.0], [4016.0, 1369.0], [4008.0, 1384.0], [4000.0, 1378.0], [4288.0, 1167.0], [4336.0, 1309.0], [4240.0, 1250.0], [4224.0, 1264.0], [4256.0, 1364.0], [4272.0, 1436.6666666666667], [4096.0, 1341.0], [4208.0, 1262.0], [4192.0, 1594.0], [4176.0, 1239.0], [4160.0, 1254.5], [4592.0, 1255.0], [4480.0, 1396.0], [4496.0, 1376.0], [4512.0, 1333.5], [4528.0, 1343.0], [4576.0, 1335.0], [4352.0, 1118.0], [4384.0, 1530.0], [4368.0, 1450.0], [4400.0, 1078.0], [4448.0, 1422.0], [4416.0, 1053.0], [4832.0, 946.0], [4848.0, 937.0], [4736.0, 1059.0], [4752.0, 1044.0], [4784.0, 1100.0], [4800.0, 986.0], [4720.0, 1120.0], [4704.0, 1111.0], [4688.0, 1142.5], [4672.0, 1169.0], [4880.0, 1002.0], [4896.0, 978.0], [4912.0, 943.0], [4321.0, 1177.3333333333333], [4225.0, 1570.0], [4241.0, 1552.0], [4257.0, 1531.0], [4273.0, 1522.0], [4305.0, 1599.0], [4289.0, 1215.0], [4129.0, 1276.5], [4113.0, 1414.0], [4177.0, 1643.0], [4161.0, 1266.0], [4577.0, 1226.0], [4513.0, 1343.0], [4529.0, 1337.0], [4593.0, 1238.0], [4545.0, 1145.5], [4353.0, 1155.0], [4369.0, 1098.0], [4385.0, 1531.0], [4465.0, 1224.0], [4449.0, 1409.0], [4433.0, 1248.0], [4833.0, 947.0], [4849.0, 925.0], [4737.0, 1078.0], [4753.0, 1145.0], [4769.0, 1009.0], [4817.0, 1018.5], [4801.0, 973.0], [4609.0, 1243.0], [4721.0, 1103.0], [4705.0, 1111.0], [4689.0, 1141.0], [4673.0, 1266.0], [4897.0, 986.0], [4881.0, 974.0], [4913.0, 889.0], [4945.0, 927.3333333333334], [4929.0, 939.5], [2073.0, 3055.5], [2169.0, 2997.0], [2161.0, 2530.6666666666665], [2129.0, 3032.0], [2105.0, 3026.0], [2089.0, 3053.0], [2081.0, 3063.0], [2057.0, 2801.5], [2049.0, 3103.0], [2289.0, 2910.0], [2297.0, 2922.0], [2281.0, 2412.0], [2201.0, 2973.5], [2193.0, 2740.0], [2185.0, 2996.0], [2265.0, 2973.0], [2257.0, 2930.0], [2249.0, 2941.0], [2241.0, 2996.0], [2225.0, 2453.5], [2209.0, 2975.3333333333335], [2321.0, 2890.0], [2409.0, 2821.0], [2425.0, 2290.0], [2401.0, 2880.0], [2393.0, 2872.6666666666665], [2369.0, 2865.0], [2305.0, 2908.0], [2329.0, 2901.0], [2361.0, 2848.0], [2353.0, 2882.0], [2337.0, 2875.5], [2553.0, 2744.5], [2505.0, 2315.0], [2433.0, 2825.0], [2657.0, 2187.0], [2633.0, 2448.5], [2673.0, 2696.0], [2665.0, 2701.0], [2577.0, 2742.0], [2569.0, 2750.5], [2561.0, 2789.0], [2617.0, 2700.0], [2601.0, 2740.0], [2801.0, 2574.0], [2809.0, 2566.0], [2761.0, 2622.0], [2769.0, 2615.0], [2793.0, 2134.0], [2785.0, 2588.5], [2713.0, 2501.6666666666665], [2697.0, 2201.0], [2689.0, 2678.0], [2745.0, 2631.0], [2729.0, 2408.5], [2721.0, 2647.0], [2777.0, 2620.0], [2913.0, 1990.0], [2937.0, 2471.0], [2929.0, 2459.0], [2921.0, 2005.0], [2825.0, 2551.5], [2833.0, 2545.0], [2841.0, 2549.5], [2857.0, 2524.0], [2905.0, 1965.0], [3041.0, 1869.0], [3065.0, 2368.5], [2961.0, 1919.0], [2953.0, 2436.5], [3033.0, 2373.0], [3001.0, 1948.0], [2993.0, 2429.0], [2985.0, 2169.0], [3193.0, 2256.0], [3185.0, 1937.0], [3177.0, 1759.0], [3169.0, 1772.0], [3089.0, 2342.0], [3081.0, 1860.0], [3217.0, 1748.3333333333333], [3313.0, 1956.5], [3305.0, 1778.0], [3289.0, 1735.5], [3257.0, 2215.0], [3249.0, 2227.0], [3241.0, 2003.0], [3233.0, 1997.0], [3433.0, 1688.0], [3441.0, 1659.0], [3337.0, 1733.5], [3329.0, 1829.25], [3385.0, 2251.0], [3377.0, 2148.0], [3361.0, 1746.0], [3417.0, 1675.5], [3409.0, 1630.0], [3393.0, 1884.5], [3569.0, 1602.5], [3521.0, 1602.5], [3537.0, 1610.0], [3529.0, 1655.0], [3577.0, 1529.0], [3561.0, 1622.5], [3553.0, 1593.0], [3481.0, 1650.0], [3513.0, 1579.0], [3505.0, 1668.0], [3497.0, 1637.3333333333333], [3489.0, 1592.0], [3697.0, 1473.0], [3649.0, 1479.0], [3673.0, 1492.0], [3705.0, 1718.0], [3681.0, 1508.0], [3609.0, 1508.0], [3601.0, 1795.5], [3641.0, 1574.0], [3633.0, 2043.0], [3625.0, 1587.0], [3721.0, 1517.0], [3753.0, 1458.0], [3745.0, 1431.0], [3737.0, 1471.5], [3729.0, 1972.0], [3713.0, 1983.0], [3881.0, 1409.5], [3873.0, 1413.0], [4073.0, 1302.0], [4081.0, 1545.0], [4033.0, 1347.0], [4041.0, 1365.0], [4049.0, 1494.5], [4057.0, 1717.0], [4065.0, 1287.5], [3993.0, 1355.0], [3985.0, 1369.0], [4009.0, 1354.0], [4306.0, 1588.0], [4322.0, 1473.0], [4242.0, 1249.0], [4226.0, 1201.0], [4258.0, 1231.0], [4290.0, 1161.0], [4146.0, 1283.0], [4130.0, 1316.0], [4114.0, 1265.0], [4098.0, 1330.0], [4194.0, 1288.5], [4178.0, 1233.0], [4162.0, 1601.0], [4562.0, 1301.6666666666667], [4578.0, 1229.0], [4482.0, 1197.0], [4498.0, 1355.0], [4514.0, 1345.0], [4530.0, 1315.0], [4546.0, 1283.0], [4386.0, 1435.0], [4370.0, 1116.0], [4354.0, 1566.0], [4466.0, 1383.0], [4450.0, 1072.0], [4434.0, 1396.0], [4834.0, 956.0], [4818.0, 966.0], [4738.0, 1054.0], [4770.0, 1035.0], [4786.0, 1002.0], [4850.0, 937.0], [4802.0, 977.0], [4610.0, 1298.0], [4658.0, 1203.4864864864862], [4722.0, 1109.0], [4706.0, 1125.0], [4882.0, 910.0], [4323.0, 1177.0], [4243.0, 1573.0], [4259.0, 1518.0], [4275.0, 1524.0], [4307.0, 1535.0], [4099.0, 1532.0], [4115.0, 1300.0], [4131.0, 1308.0], [4147.0, 1302.0], [4211.0, 1243.3333333333333], [4195.0, 1237.0], [4179.0, 1279.0], [4563.0, 1351.0], [4483.0, 1370.0], [4499.0, 1345.0], [4531.0, 1293.0], [4579.0, 1257.0], [4547.0, 978.0], [4403.0, 1084.0], [4371.0, 1108.0], [4355.0, 1104.0], [4467.0, 1400.0], [4435.0, 1391.0], [4419.0, 1359.0], [4819.0, 1054.0], [4835.0, 967.0], [4739.0, 1052.0], [4851.0, 934.0], [4755.0, 1024.5], [4771.0, 1093.0], [4803.0, 988.0], [4611.0, 1207.0], [4723.0, 1170.0], [4707.0, 1135.0], [4691.0, 1181.0], [4675.0, 1157.0], [4883.0, 995.0], [4899.0, 980.5], [4915.0, 968.0], [4931.0, 942.0], [1037.0, 3647.5], [1077.0, 3342.0], [1073.0, 3898.0], [1069.0, 3877.3333333333335], [1065.0, 3685.6666666666665], [1057.0, 3868.0], [1053.0, 3882.3333333333335], [1049.0, 3892.6666666666665], [1041.0, 3901.0], [1033.0, 3900.0], [1029.0, 3915.0], [1025.0, 3833.0], [1149.0, 3227.5], [1141.0, 3332.0], [1101.0, 3848.5], [1097.0, 3841.6666666666665], [1089.0, 3857.0], [1133.0, 3325.0], [1129.0, 3533.5], [1125.0, 3750.0], [1121.0, 3492.0], [1117.0, 3747.0], [1113.0, 3793.0], [1109.0, 3338.5], [1105.0, 3337.0], [1189.0, 3192.0], [1181.0, 3212.0], [1173.0, 3215.0], [1165.0, 3223.0], [1161.0, 3225.0], [1157.0, 3478.0], [1153.0, 3734.0], [1265.0, 3192.0], [1337.0, 3499.0], [1341.0, 3504.0], [1333.0, 3506.5], [1329.0, 3514.0], [1321.0, 3556.0], [1317.0, 3534.0], [1313.0, 3575.0], [1309.0, 3585.0], [1293.0, 3617.0], [1289.0, 3621.0], [1305.0, 3579.5], [1301.0, 3564.5], [1297.0, 3605.0], [1393.0, 3442.0], [1401.0, 2917.0], [1405.0, 3162.0], [1397.0, 2964.0], [1389.0, 3485.0], [1381.0, 3466.0], [1361.0, 3484.0], [1345.0, 3497.0], [1353.0, 3282.0], [1349.0, 3492.0], [1465.0, 3366.0], [1469.0, 3359.0], [1461.0, 3215.0], [1457.0, 2867.0], [1453.0, 2882.5], [1445.0, 2869.0], [1441.0, 3054.0], [1429.0, 3430.6666666666665], [1417.0, 3461.0], [1409.0, 3413.0], [1529.0, 3331.0], [1533.0, 3153.0], [1521.0, 3332.0], [1481.0, 2844.0], [1517.0, 3337.0], [1513.0, 3391.0], [1501.0, 2862.0], [1497.0, 3371.0], [1493.0, 3349.0], [1489.0, 2843.0], [1597.0, 3294.0], [1589.0, 3140.0], [1537.0, 2853.0], [1581.0, 3046.5], [1577.0, 3337.0], [1573.0, 3300.5], [1569.0, 3307.0], [1561.0, 3337.0], [1557.0, 3331.0], [1553.0, 3338.5], [1645.0, 2767.0], [1637.0, 3128.3333333333335], [1633.0, 3018.0], [1629.0, 2774.0], [1625.0, 2767.0], [1613.0, 3304.25], [1609.0, 2775.0], [1601.0, 2781.0], [1665.0, 3237.0], [1849.0, 2669.5], [1841.0, 2646.0], [1837.0, 2663.0], [1833.0, 3218.0], [1821.0, 2678.0], [1817.0, 3176.0], [1913.0, 3160.0], [1917.0, 3142.0], [1909.0, 2707.0], [1905.0, 3126.0], [1901.0, 2620.0], [1893.0, 3138.0], [1869.0, 3051.25], [1865.0, 2674.0], [1861.0, 2643.0], [1933.0, 3114.0], [1977.0, 2869.5], [1973.0, 3177.0], [1965.0, 3115.0], [1961.0, 3133.0], [1953.0, 3156.5], [1941.0, 2971.6666666666665], [1921.0, 3150.0], [1929.0, 3131.0], [1925.0, 2677.0], [2037.0, 3056.0], [2041.0, 3089.0], [2033.0, 3072.3333333333335], [2025.0, 3082.5], [2017.0, 3068.0], [2009.0, 2868.5], [2005.0, 2641.5], [1989.0, 2750.5], [1985.0, 3084.0], [2154.0, 3016.5], [2170.0, 2988.0], [2146.0, 3020.0], [2074.0, 2545.0], [2066.0, 3072.0], [2138.0, 3006.5], [2130.0, 2556.0], [2122.0, 3014.5], [2114.0, 3043.3333333333335], [2098.0, 3047.5], [2090.0, 3058.0], [2082.0, 3056.0], [2282.0, 2938.0], [2274.0, 2934.0], [2226.0, 2949.0], [2218.0, 2705.5], [2210.0, 2958.0], [2202.0, 2986.0], [2186.0, 3030.0], [2178.0, 2497.5], [2418.0, 2577.0], [2322.0, 2905.0], [2354.0, 2913.0], [2346.0, 2901.5], [2338.0, 2897.0], [2554.0, 2749.0], [2434.0, 2290.0], [2674.0, 2182.0], [2682.0, 2190.5], [2634.0, 2229.0], [2626.0, 2224.0], [2666.0, 2721.0], [2658.0, 2199.0], [2578.0, 2727.0], [2586.0, 2724.0], [2618.0, 2242.0], [2610.0, 2727.3333333333335], [2602.0, 2712.0], [2650.0, 2546.3333333333335], [2642.0, 2229.5], [2786.0, 2620.0], [2770.0, 2613.0], [2810.0, 2100.0], [2762.0, 2626.0], [2714.0, 2670.0], [2706.0, 2692.5], [2698.0, 2665.0], [2690.0, 2165.0], [2738.0, 2390.0], [2778.0, 2621.0], [2826.0, 2572.0], [2882.0, 2008.0], [2922.0, 2492.0], [2818.0, 2558.0], [2842.0, 2537.0], [2874.0, 2367.3333333333335], [2866.0, 2517.0], [2858.0, 2039.0], [2850.0, 2284.0], [2906.0, 2504.0], [2898.0, 2244.0], [2890.0, 2239.0], [3050.0, 2375.6666666666665], [3066.0, 2353.0], [3010.0, 1923.5], [3018.0, 2266.0], [3026.0, 2385.0], [3058.0, 2375.0], [3042.0, 1868.0], [2970.0, 2202.0], [2962.0, 1926.0], [2954.0, 2438.0], [2946.0, 2203.0], [2986.0, 2428.0], [2978.0, 2444.0], [3034.0, 2401.0], [3194.0, 1828.0], [3186.0, 1789.0], [3178.0, 1758.0], [3090.0, 1912.0], [3074.0, 2353.0], [3162.0, 1772.6666666666667], [3306.0, 1715.0], [3322.0, 1735.6666666666667], [3266.0, 1762.0], [3314.0, 1769.0], [3226.0, 1831.5], [3218.0, 2238.0], [3210.0, 1800.6666666666667], [3258.0, 1758.0], [3250.0, 1803.0], [3242.0, 1757.0], [3234.0, 1760.0], [3290.0, 2202.0], [3282.0, 2201.0], [3354.0, 1709.0], [3402.0, 1697.6666666666667], [3450.0, 1609.0], [3426.0, 1644.0], [3346.0, 1717.2], [3330.0, 2284.0], [3386.0, 2140.0], [3378.0, 1698.0], [3370.0, 1692.0], [3410.0, 2121.0], [3578.0, 1524.0], [3522.0, 1574.0], [3562.0, 2105.0], [3466.0, 1672.5], [3474.0, 1648.0], [3506.0, 1636.0], [3546.0, 1565.0], [3538.0, 1562.0], [3530.0, 1554.0], [3690.0, 1460.5], [3706.0, 1486.0], [3650.0, 1480.0], [3666.0, 1684.6666666666667], [3674.0, 1538.3333333333333], [3586.0, 1766.0], [3602.0, 1515.0], [3626.0, 1506.0], [3618.0, 1654.5], [3722.0, 1976.0], [3746.0, 1434.0], [3874.0, 1467.0], [4074.0, 1279.0], [4042.0, 1326.0], [4066.0, 1352.0], [4026.0, 1352.5], [4018.0, 1380.5], [4010.0, 1375.0], [4324.0, 1586.0], [4340.0, 1341.75], [4228.0, 1396.5], [4244.0, 1202.0], [4260.0, 1200.0], [4308.0, 1148.0], [4292.0, 1165.5], [4100.0, 1313.0], [4212.0, 1232.0], [4196.0, 1576.0], [4164.0, 1276.5], [4580.0, 1216.0], [4596.0, 1229.3333333333333], [4484.0, 1363.0], [4516.0, 1352.5], [4532.0, 990.0], [4548.0, 1302.0], [4356.0, 1132.0], [4388.0, 1255.0], [4468.0, 1062.0], [4452.0, 1242.5], [4436.0, 1096.0], [4420.0, 1445.0], [4836.0, 965.0], [4740.0, 1070.0], [4756.0, 1036.0], [4772.0, 1094.0], [4804.0, 992.0], [4612.0, 1172.0], [4660.0, 1175.5], [4724.0, 1108.0], [4708.0, 1124.0], [4692.0, 1147.0], [4676.0, 1161.0], [4916.0, 911.0], [4932.0, 869.0], [4293.0, 1180.0], [4245.0, 1643.0], [4261.0, 1204.0], [4341.0, 1135.0], [4149.0, 1469.5], [4133.0, 1311.0], [4117.0, 1475.0], [4213.0, 1560.0], [4181.0, 1230.0], [4165.0, 1309.0], [4565.0, 1266.0], [4501.0, 1359.5], [4597.0, 1196.0], [4485.0, 1339.0], [4517.0, 1349.0], [4533.0, 1329.0], [4549.0, 1379.0], [4373.0, 1309.5], [4405.0, 1248.0], [4469.0, 1069.0], [4453.0, 1079.0], [4421.0, 1508.0], [4837.0, 967.0], [4757.0, 1024.0], [4773.0, 1097.0], [4789.0, 1028.3333333333333], [4661.0, 1178.0], [4613.0, 1215.0], [4725.0, 1079.0], [4709.0, 1127.0], [4693.0, 1140.0], [4677.0, 1179.0], [4885.0, 955.5], [4917.0, 937.0], [4949.0, 885.75], [4933.0, 952.0], [2171.0, 3011.0], [2163.0, 3001.5], [2139.0, 3023.0], [2123.0, 3058.0], [2107.0, 2787.5], [2091.0, 2524.0], [2067.0, 3051.0], [2051.0, 2534.0], [2291.0, 2952.0], [2299.0, 2902.0], [2283.0, 2963.0], [2275.0, 2951.0], [2267.0, 2667.5], [2251.0, 2461.5], [2243.0, 2962.5], [2219.0, 2953.0], [2179.0, 2499.0], [2211.0, 2960.0], [2315.0, 2910.0], [2363.0, 2871.0], [2427.0, 2839.0], [2331.0, 2938.0], [2323.0, 2906.0], [2307.0, 2646.5], [2355.0, 2854.0], [2347.0, 2374.0], [2339.0, 2893.0], [2555.0, 2746.0], [2435.0, 2292.0], [2675.0, 2696.0], [2683.0, 2181.0], [2667.0, 2194.0], [2659.0, 2684.0], [2587.0, 2719.0], [2603.0, 2738.0], [2595.0, 2737.3333333333335], [2651.0, 2213.0], [2643.0, 2681.0], [2635.0, 2719.0], [2803.0, 2593.0], [2755.0, 2644.3333333333335], [2763.0, 2620.0], [2771.0, 2626.0], [2811.0, 2562.0], [2795.0, 2591.0], [2787.0, 2591.0], [2691.0, 2686.0], [2715.0, 2164.0], [2739.0, 2633.0], [2731.0, 2401.0], [2723.0, 2420.5], [2779.0, 2605.0], [2939.0, 2467.5], [2899.0, 1979.0], [2923.0, 2462.0], [2843.0, 2538.0], [2827.0, 2550.0], [2867.0, 2026.0], [2907.0, 2002.0], [2891.0, 2011.0], [2883.0, 1996.0], [2971.0, 2440.0], [3051.0, 2362.0], [3067.0, 2355.0], [3059.0, 2375.0], [2963.0, 2427.0], [2947.0, 1936.0], [3003.0, 1883.5], [2995.0, 2156.5], [2987.0, 2432.0], [2979.0, 2422.3333333333335], [3027.0, 2406.0], [3155.0, 1945.6101694915255], [3195.0, 1829.0], [3171.0, 2030.0], [3083.0, 2139.0], [3163.0, 1775.0], [3315.0, 1770.0], [3275.0, 2207.3333333333335], [3307.0, 1729.0], [3299.0, 1778.6666666666667], [3211.0, 1773.0], [3235.0, 2230.0], [3291.0, 1735.0], [3283.0, 1778.0], [3443.0, 1661.0], [3451.0, 1610.0], [3395.0, 1685.0], [3403.0, 1634.0], [3435.0, 1612.5], [3331.0, 1795.0], [3339.0, 1665.5], [3347.0, 1658.0], [3379.0, 1706.0], [3371.0, 1708.0], [3363.0, 1711.5], [3419.0, 1627.5], [3411.0, 1761.0], [3555.0, 1572.5], [3531.0, 1621.0], [3571.0, 1586.0], [3523.0, 1570.0], [3483.0, 1666.0], [3467.0, 1694.0], [3459.0, 1657.3333333333333], [3515.0, 2165.5], [3491.0, 1644.0], [3547.0, 1600.0], [3539.0, 1558.0], [3683.0, 1533.5], [3611.0, 1538.5], [3699.0, 1765.5], [3667.0, 1525.1818181818182], [3675.0, 1543.0], [3691.0, 1461.0], [3603.0, 1558.0], [3595.0, 1553.25], [3587.0, 1526.0], [3643.0, 2033.5], [3635.0, 1786.5], [3619.0, 1512.0], [3827.0, 1427.0], [3747.0, 1428.0], [3739.0, 1699.0], [3723.0, 1439.0], [3715.0, 1440.5], [4083.0, 1278.0], [4091.0, 1469.5], [4043.0, 1361.0], [4051.0, 1309.5], [4059.0, 1288.0], [3995.0, 1344.0], [3987.0, 1371.5], [4011.0, 1701.0], [4003.0, 1480.3333333333333], [4326.0, 1314.5], [4230.0, 1254.5], [4262.0, 1628.0], [4342.0, 1130.0], [4310.0, 1342.0], [4118.0, 1307.0], [4102.0, 1315.0], [4182.0, 1231.0], [4582.0, 1238.0], [4566.0, 1255.0], [4486.0, 1358.0], [4502.0, 1042.0], [4518.0, 1029.0], [4598.0, 905.0], [4550.0, 1274.0], [4390.0, 1102.5], [4374.0, 1117.0], [4358.0, 1129.0], [4454.0, 1391.0], [4438.0, 1412.0], [4422.0, 1500.0], [4838.0, 1054.0], [4742.0, 1063.0], [4758.0, 1038.0], [4774.0, 1088.0], [4790.0, 1006.0], [4822.0, 1024.0], [4806.0, 1028.0], [4614.0, 1199.0], [4662.0, 1174.0], [4726.0, 1092.0], [4710.0, 1135.0], [4694.0, 1136.0], [4950.0, 931.0], [4886.0, 913.0], [4902.0, 980.3333333333334], [4343.0, 1177.0], [4247.0, 1363.5], [4231.0, 1558.0], [4279.0, 1553.5], [4311.0, 1169.0], [4151.0, 1499.0], [4215.0, 1255.5], [4199.0, 1381.3333333333333], [4183.0, 1254.0], [4167.0, 1300.5], [4551.0, 1292.0], [4583.0, 1219.0], [4487.0, 1046.0], [4503.0, 1328.0], [4519.0, 1017.0], [4567.0, 953.0], [4407.0, 1264.5], [4391.0, 1082.0], [4375.0, 1443.0], [4359.0, 1118.0], [4471.0, 1217.5], [4439.0, 1089.0], [4423.0, 1101.0], [4823.0, 1051.0], [4743.0, 1048.5], [4759.0, 1044.0], [4775.0, 1114.0], [4663.0, 1156.0], [4727.0, 1098.0], [4711.0, 1106.0], [4695.0, 1125.0], [4679.0, 1166.5], [4887.0, 977.0], [4903.0, 980.0], [4951.0, 932.0], [529.0, 4554.0], [541.0, 3948.0], [519.0, 4567.0], [517.0, 3965.0], [513.0, 4478.0], [535.0, 4543.0], [533.0, 4548.0], [531.0, 3954.0], [527.0, 4557.0], [525.0, 4558.0], [523.0, 4213.0], [521.0, 3960.0], [551.0, 4204.0], [575.0, 3933.0], [569.0, 4435.0], [567.0, 4186.5], [565.0, 4523.0], [563.0, 4444.0], [559.0, 3951.0], [553.0, 3957.0], [549.0, 3951.5], [547.0, 3944.0], [545.0, 4532.0], [583.0, 4175.0], [605.0, 4408.0], [607.0, 3905.0], [603.0, 4414.0], [599.0, 4054.6666666666665], [593.0, 4166.5], [591.0, 3908.0], [589.0, 4427.0], [587.0, 4496.0], [581.0, 3932.0], [579.0, 4505.0], [635.0, 4392.5], [639.0, 4322.0], [633.0, 4387.0], [631.0, 4371.0], [627.0, 4463.0], [621.0, 4398.0], [619.0, 3750.0], [617.0, 4472.0], [613.0, 4155.0], [611.0, 4475.0], [647.0, 3730.0], [669.0, 4360.666666666667], [665.0, 4368.0], [661.0, 4432.0], [659.0, 4228.0], [655.0, 4335.0], [653.0, 4376.0], [651.0, 4445.0], [649.0, 4381.0], [645.0, 4449.0], [641.0, 3878.0], [691.0, 4347.0], [687.0, 4349.0], [685.0, 4350.0], [683.0, 4281.666666666667], [677.0, 3782.0], [675.0, 3855.0], [673.0, 4358.0], [857.0, 4192.0], [893.0, 4031.0], [895.0, 4115.0], [891.0, 4244.0], [889.0, 4120.0], [887.0, 3542.0], [885.0, 4254.0], [883.0, 4257.5], [881.0, 4264.0], [879.0, 3546.0], [877.0, 4259.0], [901.0, 4167.0], [923.0, 3477.0], [927.0, 4149.0], [921.0, 3809.0], [919.0, 3571.0], [915.0, 4045.0], [909.0, 3751.0], [907.0, 4011.5], [905.0, 4012.0], [899.0, 3912.5], [897.0, 3917.0], [957.0, 3906.3333333333335], [953.0, 3991.0], [951.0, 3911.0], [949.0, 3994.5], [947.0, 3950.0], [945.0, 3522.0], [943.0, 4001.3333333333335], [937.0, 3857.5], [935.0, 4185.0], [989.0, 3861.5], [991.0, 3932.0], [987.0, 3884.0], [985.0, 3870.0], [983.0, 3910.0], [981.0, 3875.0], [979.0, 3904.0], [977.0, 3875.5], [975.0, 3954.0], [965.0, 3923.6666666666665], [961.0, 3904.6666666666665], [973.0, 3881.0], [971.0, 3974.0], [997.0, 3850.0], [1023.0, 3823.0], [1017.0, 3327.0], [1015.0, 3836.0], [1013.0, 3329.0], [1007.0, 3428.0], [1005.0, 3838.5], [1003.0, 3443.0], [995.0, 3648.5], [993.0, 3862.0], [1038.0, 3918.0], [1086.0, 3679.6666666666665], [1078.0, 3853.5], [1066.0, 3882.0], [1062.0, 3693.6666666666665], [1058.0, 3888.0], [1054.0, 3342.0], [1050.0, 3888.0], [1046.0, 3623.0], [1034.0, 3316.0], [1030.0, 3305.0], [1026.0, 3314.0], [1150.0, 3720.0], [1138.0, 3477.0], [1134.0, 3741.0], [1130.0, 3748.0], [1122.0, 3834.0], [1118.0, 3749.0], [1110.0, 3756.0], [1102.0, 3879.0], [1094.0, 3834.0], [1186.0, 3458.5], [1182.0, 3709.0], [1170.0, 3220.0], [1166.0, 3723.0], [1162.0, 3224.0], [1158.0, 3724.0], [1154.0, 3221.0], [1334.0, 3505.0], [1338.0, 3529.0], [1330.0, 3502.0], [1294.0, 3611.0], [1326.0, 3544.0], [1322.0, 3518.0], [1318.0, 3524.0], [1314.0, 3578.0], [1310.0, 3552.0], [1306.0, 3051.0], [1302.0, 3597.0], [1298.0, 3580.0], [1358.0, 3504.0], [1398.0, 2920.0], [1394.0, 3428.0], [1386.0, 3238.5], [1382.0, 2927.0], [1374.0, 3202.0], [1370.0, 3459.3333333333335], [1366.0, 3492.5], [1362.0, 3512.0], [1354.0, 3492.0], [1350.0, 3500.0], [1346.0, 3496.0], [1466.0, 3393.0], [1470.0, 2850.0], [1462.0, 3369.0], [1458.0, 3381.0], [1454.0, 3423.0], [1450.0, 2902.0], [1446.0, 3143.0], [1438.0, 3413.0], [1410.0, 3435.0], [1422.0, 3109.3333333333335], [1418.0, 3454.0], [1430.0, 3483.0], [1426.0, 3442.0], [1486.0, 3362.3333333333335], [1530.0, 3329.0], [1526.0, 3331.0], [1518.0, 3357.0], [1514.0, 3329.0], [1510.0, 3016.6666666666665], [1502.0, 3368.0], [1494.0, 3384.0], [1482.0, 2877.0], [1474.0, 3114.0], [1586.0, 3320.0], [1598.0, 2778.0], [1594.0, 3291.0], [1590.0, 3312.0], [1570.0, 3348.0], [1566.0, 3319.0], [1562.0, 3301.0], [1550.0, 2809.0], [1542.0, 3352.3333333333335], [1538.0, 3349.0], [1654.0, 3249.0], [1662.0, 3027.5], [1650.0, 3013.0], [1602.0, 3326.0], [1642.0, 3013.0], [1638.0, 3258.0], [1634.0, 3283.0], [1626.0, 3293.0], [1622.0, 2936.6666666666665], [1618.0, 3281.0], [1670.0, 3008.0], [1666.0, 3239.0], [1854.0, 3048.25], [1850.0, 2653.0], [1846.0, 2927.0], [1842.0, 2682.0], [1838.0, 3164.0], [1830.0, 2693.5], [1826.0, 3174.6666666666665], [1822.0, 2701.0], [1918.0, 3122.0], [1906.0, 3131.0], [1902.0, 3183.0], [1898.0, 3156.6666666666665], [1890.0, 2889.0], [1882.0, 3001.3333333333335], [1878.0, 3192.0], [1874.0, 3006.0], [1862.0, 3181.0], [1858.0, 2916.0], [1982.0, 3108.5], [1970.0, 3113.5], [1966.0, 3132.0], [1958.0, 3101.0], [1946.0, 2901.5], [1938.0, 3140.6666666666665], [1930.0, 3120.0], [2042.0, 2584.0], [2046.0, 2813.5], [2034.0, 3093.0], [1998.0, 3077.0], [1994.0, 2845.5], [2030.0, 3095.0], [2026.0, 3101.0], [2014.0, 3071.5], [2010.0, 3112.0], [2006.0, 3065.0], [2002.0, 2784.3333333333335], [2172.0, 3008.0], [2164.0, 3048.0], [2140.0, 2494.0], [2116.0, 2518.0], [2100.0, 2790.0], [2084.0, 3052.0], [2060.0, 2552.3333333333335], [2052.0, 2635.0], [2292.0, 2907.0], [2300.0, 2922.5], [2284.0, 2926.0], [2276.0, 2430.0], [2268.0, 2992.0], [2260.0, 2945.3333333333335], [2252.0, 2952.0], [2244.0, 2454.0], [2236.0, 2975.4], [2180.0, 2977.0], [2204.0, 2971.0], [2196.0, 2819.0], [2220.0, 2973.0], [2212.0, 2978.0], [2404.0, 2674.3333333333335], [2412.0, 2832.0], [2308.0, 2922.0], [2324.0, 2376.0], [2332.0, 2376.0], [2348.0, 2885.0], [2340.0, 2866.0], [2436.0, 2321.0], [2660.0, 2706.0], [2684.0, 2689.0], [2676.0, 2677.0], [2668.0, 2242.0], [2588.0, 2751.0], [2580.0, 2727.0], [2564.0, 2737.0], [2620.0, 2474.0], [2612.0, 2449.5], [2604.0, 2739.0], [2652.0, 2203.0], [2644.0, 2683.0], [2788.0, 2611.0], [2812.0, 2563.0], [2756.0, 2638.0], [2804.0, 2590.0], [2748.0, 2642.0], [2692.0, 2181.0], [2700.0, 2202.5], [2716.0, 2162.0], [2708.0, 2656.0], [2732.0, 2653.0], [2780.0, 2617.0], [2764.0, 2644.0], [2916.0, 2169.0], [2940.0, 2472.0], [2892.0, 2495.0], [2900.0, 1973.0], [2932.0, 2135.3333333333335], [2844.0, 2539.0], [2836.0, 2392.6666666666665], [2820.0, 2064.0], [2876.0, 2510.0], [2868.0, 2514.0], [2860.0, 2037.5], [2852.0, 2531.0], [2908.0, 1970.0], [2956.0, 2437.0], [3068.0, 2358.0], [3052.0, 1976.0], [3044.0, 2148.5], [2948.0, 2442.0], [3004.0, 2002.0], [2996.0, 2424.0], [2988.0, 1903.0], [3020.0, 2383.0], [3012.0, 2389.5], [3180.0, 2081.0], [3188.0, 1796.0], [3172.0, 1771.0], [3164.0, 1862.0], [3092.0, 2111.0], [3084.0, 1910.0], [3076.0, 2356.5], [3308.0, 1679.0], [3316.0, 1719.0], [3324.0, 2030.0], [3268.0, 1981.0], [3300.0, 1780.0], [3260.0, 1987.0], [3220.0, 1771.0], [3204.0, 1891.5], [3228.0, 1763.5], [3252.0, 1777.5], [3292.0, 1725.0], [3284.0, 2205.0], [3276.0, 2205.0], [3428.0, 1667.5], [3404.0, 1726.0], [3356.0, 1710.5], [3348.0, 2271.0], [3340.0, 1762.0], [3332.0, 1671.0], [3420.0, 1642.0], [3412.0, 1671.0], [3396.0, 1686.0], [3388.0, 1888.5], [3380.0, 1734.0], [3364.0, 1707.0], [3556.0, 1628.0], [3532.0, 1557.0], [3580.0, 1530.5], [3564.0, 1858.0], [3484.0, 1648.0], [3476.0, 1647.5], [3468.0, 1650.0], [3460.0, 1605.0], [3516.0, 1589.0], [3508.0, 1641.0], [3500.0, 1811.0], [3492.0, 1597.0], [3548.0, 1599.0], [3540.0, 1552.0], [3604.0, 1509.0], [3700.0, 1456.0], [3708.0, 1449.5], [3684.0, 1544.0], [3596.0, 1519.0], [3588.0, 1528.0], [3644.0, 1519.0], [3636.0, 1525.0], [3628.0, 1796.5], [3620.0, 1503.0], [3732.0, 1458.3333333333333], [3716.0, 1979.0], [3740.0, 1475.0], [3724.0, 1974.0], [3876.0, 1440.0], [4068.0, 1341.5], [4076.0, 1305.0], [4084.0, 1299.0], [4036.0, 1358.6666666666667], [4044.0, 1371.0], [3996.0, 1393.0], [3988.0, 1316.0], [4028.0, 1545.0], [4020.0, 1329.5], [4060.0, 1285.0], [4344.0, 1458.0], [4232.0, 1577.0], [4248.0, 1192.0], [4264.0, 1370.5], [4328.0, 1501.5], [4312.0, 1166.0], [4104.0, 1273.0], [4120.0, 1264.5], [4152.0, 1255.0], [4136.0, 1312.6666666666667], [4216.0, 1555.0], [4200.0, 1249.0], [4168.0, 1254.0], [4584.0, 927.0], [4488.0, 1369.0], [4520.0, 1007.0], [4536.0, 1309.3333333333333], [4600.0, 1233.5], [4360.0, 1140.0], [4392.0, 1082.0], [4472.0, 1361.0], [4456.0, 1219.5], [4440.0, 1380.0], [4744.0, 1043.0], [4840.0, 1007.5], [4760.0, 1128.0], [4776.0, 1011.0], [4792.0, 1032.5], [4808.0, 1023.0], [4664.0, 1247.0], [4728.0, 1163.0], [4680.0, 1153.0], [4888.0, 910.0], [4904.0, 976.0], [4920.0, 924.0], [4952.0, 928.0], [4936.0, 913.0], [4313.0, 1490.0], [4249.0, 1216.0], [4281.0, 1536.0], [4345.0, 1112.0], [4297.0, 1508.25], [4137.0, 1333.0], [4121.0, 1639.0], [4105.0, 1306.0], [4185.0, 1233.0], [4585.0, 1215.0], [4489.0, 1393.0], [4505.0, 1337.5], [4537.0, 1326.0], [4601.0, 1207.0], [4569.0, 1300.0], [4553.0, 1138.5], [4361.0, 1454.0], [4377.0, 1115.0], [4393.0, 1106.0], [4409.0, 1063.5], [4457.0, 1398.0], [4441.0, 1381.0], [4825.0, 1061.0], [4841.0, 934.0], [4745.0, 1063.0], [4761.0, 1111.0], [4777.0, 1114.0], [4793.0, 1074.0], [4809.0, 969.0], [4665.0, 1180.0], [4617.0, 1214.0], [4729.0, 1069.0], [4713.0, 1145.0], [4697.0, 1170.5], [4905.0, 957.0], [4921.0, 963.0], [4953.0, 931.0], [4937.0, 944.0], [2117.0, 2545.0], [2157.0, 3016.0], [2141.0, 2548.0], [2133.0, 3022.6666666666665], [2125.0, 3033.5], [2101.0, 3055.0], [2093.0, 2793.0], [2077.0, 2889.0], [2069.0, 3059.0], [2053.0, 3134.0], [2293.0, 2903.0], [2301.0, 2395.0], [2277.0, 2935.0], [2205.0, 2489.0], [2197.0, 2989.0], [2189.0, 2680.0], [2181.0, 2494.0], [2261.0, 2421.0], [2253.0, 2424.0], [2245.0, 2432.0], [2237.0, 2969.0], [2229.0, 2781.6666666666665], [2221.0, 3000.0], [2213.0, 3024.0], [2381.0, 2843.0], [2405.0, 2351.0], [2397.0, 2611.5], [2365.0, 2870.5], [2317.0, 2902.5], [2325.0, 2882.0], [2333.0, 2877.0], [2357.0, 2877.0], [2341.0, 2865.0], [2549.0, 2671.2000000000007], [2437.0, 2825.0], [2581.0, 2751.0], [2677.0, 2696.0], [2685.0, 2675.0], [2629.0, 2192.0], [2573.0, 2652.25], [2565.0, 2760.0], [2613.0, 2192.0], [2597.0, 2478.5], [2653.0, 2711.0], [2645.0, 2683.0], [2637.0, 2678.0], [2789.0, 2098.0], [2813.0, 2582.0], [2757.0, 2206.0], [2765.0, 2640.0], [2773.0, 2608.0], [2805.0, 2570.0], [2717.0, 2147.0], [2701.0, 2161.0], [2693.0, 2712.0], [2741.0, 2643.5], [2725.0, 2670.0], [2781.0, 2595.0], [2925.0, 2487.5], [2933.0, 2455.0], [2877.0, 1997.5], [2829.0, 2318.5], [2845.0, 2070.0], [2869.0, 2536.0], [2861.0, 2520.0], [2909.0, 2475.0], [2901.0, 2485.0], [2893.0, 2517.0], [2965.0, 2447.0], [3069.0, 2364.0], [3061.0, 2365.0], [3045.0, 1938.0], [3037.0, 2206.6666666666665], [3029.0, 2149.0], [3005.0, 2392.0], [2997.0, 1919.0], [2989.0, 2423.0], [2981.0, 2191.0], [3181.0, 1790.0], [3189.0, 1779.0], [3157.0, 2300.0], [3093.0, 1824.0], [3085.0, 2341.0], [3325.0, 2168.0], [3309.0, 1773.0], [3293.0, 1778.0], [3269.0, 2209.0], [3213.0, 1771.0], [3245.0, 1785.6666666666667], [3437.0, 1637.5], [3453.0, 1634.5], [3429.0, 1626.0], [3349.0, 1708.0], [3341.0, 1707.0], [3381.0, 1640.0], [3373.0, 1652.5], [3397.0, 1701.0], [3565.0, 1624.0], [3581.0, 1580.0], [3525.0, 1594.0], [3573.0, 1557.5], [3557.0, 1546.0], [3517.0, 1622.0], [3477.0, 1604.0], [3469.0, 1653.0], [3485.0, 1645.0], [3501.0, 1593.0], [3549.0, 1548.0], [3541.0, 1555.0], [3701.0, 1533.0], [3709.0, 1987.0], [3653.0, 1489.0], [3677.0, 1493.0], [3693.0, 1455.5], [3597.0, 1618.0], [3589.0, 1608.0], [3645.0, 1519.0], [3637.0, 1567.0], [3629.0, 2049.0], [3733.0, 1438.0], [3717.0, 1471.0], [3877.0, 1407.0], [4045.0, 1290.0], [4053.0, 1327.5], [4061.0, 1290.0], [4077.0, 1763.0], [4005.0, 1354.0], [4314.0, 1478.0], [4234.0, 1404.0], [4250.0, 1565.0], [4266.0, 1421.0], [4282.0, 1502.0], [4346.0, 1472.0], [4298.0, 1176.0], [4154.0, 1466.5], [4122.0, 1310.0], [4106.0, 1271.0], [4218.0, 1566.0], [4202.0, 1430.0], [4186.0, 1431.5], [4170.0, 1285.5], [4602.0, 1307.0], [4506.0, 1347.0], [4586.0, 1321.0], [4490.0, 1354.0], [4522.0, 1006.0], [4538.0, 982.0], [4570.0, 1257.0], [4554.0, 1307.0], [4394.0, 1464.0], [4474.0, 1208.5], [4458.0, 1477.0], [4426.0, 1192.6666666666667], [4826.0, 1043.0], [4746.0, 1040.0], [4778.0, 1089.0], [4842.0, 937.0], [4810.0, 981.0], [4618.0, 1170.0], [4666.0, 1182.0], [4730.0, 1070.0], [4714.0, 1175.0], [4698.0, 1129.0], [4682.0, 1144.0], [4890.0, 950.5], [4954.0, 931.0], [4906.0, 953.0], [4922.0, 946.0], [4938.0, 942.0], [4331.0, 1158.6666666666667], [4235.0, 1275.0], [4251.0, 1228.0], [4267.0, 1523.0], [4283.0, 1174.0], [4347.0, 1463.0], [4315.0, 1132.0], [4299.0, 1180.0], [4123.0, 1277.0], [4219.0, 1258.0], [4203.0, 1227.0], [4187.0, 1254.0], [4571.0, 1247.0], [4587.0, 1240.0], [4491.0, 1036.0], [4523.0, 1318.0], [4411.0, 1460.0], [4395.0, 1107.0], [4379.0, 1252.0], [4475.0, 1384.0], [4443.0, 1240.0], [4427.0, 1097.0], [4843.0, 1017.0], [4747.0, 1152.0], [4763.0, 1025.0], [4795.0, 996.5], [4827.0, 1059.0], [4811.0, 965.0], [4667.0, 1181.0], [4635.0, 1166.0], [4699.0, 1142.0], [4683.0, 1225.0], [4891.0, 908.0], [4907.0, 981.0], [4923.0, 962.0], [4955.0, 928.0], [4939.0, 922.0], [1083.0, 3525.0], [1075.0, 3344.0], [1059.0, 3869.0], [1055.0, 3353.0], [1043.0, 3875.0], [1035.0, 3855.0], [1027.0, 3814.0], [1147.0, 3727.6666666666665], [1139.0, 3226.0], [1091.0, 3855.0], [1135.0, 3249.0], [1131.0, 3829.0], [1127.0, 3754.0], [1123.0, 3856.0], [1119.0, 3755.0], [1115.0, 3802.5], [1107.0, 3594.0], [1187.0, 3709.0], [1179.0, 3380.3333333333335], [1175.0, 3213.0], [1171.0, 3213.0], [1167.0, 3721.0], [1163.0, 3223.0], [1159.0, 3225.0], [1155.0, 3227.0], [1339.0, 3501.0], [1343.0, 3502.0], [1335.0, 3540.0], [1331.0, 3509.0], [1327.0, 3515.0], [1323.0, 3521.0], [1319.0, 3107.0], [1315.0, 3540.0], [1311.0, 3078.0], [1295.0, 3611.0], [1291.0, 3116.0], [1307.0, 3047.0], [1303.0, 3559.0], [1299.0, 3575.0], [1403.0, 3179.5], [1407.0, 3438.5], [1399.0, 2911.0], [1391.0, 3481.5], [1379.0, 3450.0], [1371.0, 3449.0], [1367.0, 3447.0], [1351.0, 3494.0], [1347.0, 3495.0], [1463.0, 3364.0], [1451.0, 3410.0], [1447.0, 2895.0], [1443.0, 2886.0], [1435.0, 3255.3333333333335], [1431.0, 2914.0], [1423.0, 3424.0], [1419.0, 3453.0], [1415.0, 3441.3333333333335], [1411.0, 2954.0], [1527.0, 3163.3333333333335], [1535.0, 3346.0], [1523.0, 3366.0], [1483.0, 2874.0], [1479.0, 3364.75], [1475.0, 3404.0], [1519.0, 3337.0], [1515.0, 3340.0], [1511.0, 3372.0], [1507.0, 3202.6666666666665], [1503.0, 3371.0], [1495.0, 3429.0], [1491.0, 3361.5], [1595.0, 2793.0], [1599.0, 3287.0], [1591.0, 3336.0], [1551.0, 3338.0], [1539.0, 2844.0], [1579.0, 3331.0], [1575.0, 3314.0], [1571.0, 2795.0], [1563.0, 3334.0], [1559.0, 3338.0], [1555.0, 3058.0], [1659.0, 3254.75], [1663.0, 2764.0], [1655.0, 2773.0], [1615.0, 3038.0], [1607.0, 2955.3333333333335], [1647.0, 3253.0], [1639.0, 2768.0], [1631.0, 3022.0], [1627.0, 3270.0], [1623.0, 2762.0], [1619.0, 2804.0], [1671.0, 2754.0], [1667.0, 2761.0], [1847.0, 2681.0], [1843.0, 3192.0], [1839.0, 3197.0], [1835.0, 2674.5], [1827.0, 2718.0], [1823.0, 2699.0], [1819.0, 2957.5], [1871.0, 2950.5], [1911.0, 3140.5], [1915.0, 3152.5], [1907.0, 3128.0], [1895.0, 3179.0], [1887.0, 3162.0], [1883.0, 3144.0], [1879.0, 3202.0], [1863.0, 2644.0], [1859.0, 3208.0], [1935.0, 3151.5], [1975.0, 2871.5], [1971.0, 3127.0], [1967.0, 3150.0], [1959.0, 3131.0], [1955.0, 3116.0], [1951.0, 2944.0], [1943.0, 3125.5], [1931.0, 3148.0], [1927.0, 3118.0], [1923.0, 3163.0], [2043.0, 3053.0], [2023.0, 3106.0], [2019.0, 3103.5], [2015.0, 2599.0], [2007.0, 3111.0], [2003.0, 2605.0], [1999.0, 2612.0], [2174.0, 2739.0], [2150.0, 2878.5], [2134.0, 3004.0], [2126.0, 3036.0], [2110.0, 2887.0], [2102.0, 3048.0], [2094.0, 3051.0], [2086.0, 3060.5], [2078.0, 3062.0], [2286.0, 2668.5], [2302.0, 2922.0], [2278.0, 2414.0], [2270.0, 2416.5], [2254.0, 2983.0], [2238.0, 2965.0], [2230.0, 2969.0], [2206.0, 2981.0], [2198.0, 2967.0], [2422.0, 2346.25], [2366.0, 2849.0], [2430.0, 2656.3333333333335], [2334.0, 2873.0], [2326.0, 2904.0], [2310.0, 2901.0], [2398.0, 2369.0], [2390.0, 2709.714285714286], [2350.0, 2893.0], [2558.0, 2768.3333333333335], [2550.0, 2779.0], [2438.0, 2325.0], [2662.0, 2432.5], [2678.0, 2172.0], [2622.0, 2187.0], [2574.0, 2726.0], [2590.0, 2734.0], [2606.0, 2737.0], [2598.0, 2713.0], [2654.0, 2706.0], [2646.0, 2711.0], [2718.0, 2651.0], [2806.0, 2593.0], [2798.0, 2428.6666666666665], [2790.0, 2115.0], [2710.0, 2327.6666666666665], [2750.0, 2639.0], [2742.0, 2648.0], [2734.0, 2658.5], [2782.0, 2588.0], [2774.0, 2634.0], [2918.0, 2479.0], [2934.0, 1966.0], [2894.0, 2037.0], [2942.0, 2460.0], [2878.0, 2507.0], [2822.0, 2553.5], [2838.0, 2562.5], [2846.0, 2537.0], [2854.0, 2297.0], [2910.0, 1970.0], [2886.0, 2018.0], [3062.0, 1979.0], [3070.0, 1921.0], [3014.0, 1906.0], [3022.0, 2215.3333333333335], [3054.0, 2145.5], [2974.0, 2266.6666666666665], [2958.0, 2452.0], [2950.0, 2445.5], [2998.0, 1958.0], [2990.0, 2403.0], [2982.0, 2416.0], [3030.0, 2402.0], [3182.0, 1763.0], [3198.0, 1925.6666666666667], [3174.0, 1766.0], [3086.0, 2343.0], [3078.0, 2356.5], [3166.0, 2296.5], [3158.0, 1785.0], [3230.0, 1760.0], [3310.0, 1674.0], [3278.0, 1738.5], [3318.0, 1724.5], [3270.0, 1790.0], [3222.0, 1750.0], [3214.0, 1773.0], [3262.0, 2214.0], [3246.0, 1798.0], [3238.0, 2231.0], [3286.0, 1737.5], [3438.0, 1701.0], [3454.0, 1608.0], [3398.0, 1631.0], [3446.0, 1670.6666666666667], [3358.0, 1773.0], [3334.0, 1719.0], [3390.0, 1663.5], [3382.0, 1735.0], [3374.0, 1742.0], [3366.0, 1655.5], [3414.0, 1675.0], [3406.0, 2126.5], [3574.0, 1615.0], [3534.0, 1625.5], [3566.0, 1537.0], [3518.0, 1624.0], [3462.0, 1649.5], [3470.0, 1735.0], [3478.0, 1656.0], [3502.0, 2178.0], [3494.0, 1888.5], [3542.0, 1554.0], [3526.0, 1568.0], [3590.0, 2083.0], [3710.0, 1441.0], [3678.0, 1541.0], [3686.0, 1730.5], [3646.0, 1553.0], [3614.0, 1521.6666666666667], [3606.0, 1531.5], [3638.0, 1489.0], [3630.0, 1495.0], [3622.0, 1519.0], [3718.0, 1447.0], [3750.0, 1465.0], [3742.0, 1430.5], [3734.0, 1967.0], [3878.0, 1379.0], [3870.0, 1474.6465517241377], [4070.0, 1309.0], [4086.0, 1300.3333333333333], [4046.0, 1299.0], [4054.0, 1323.0], [3998.0, 1362.5], [4030.0, 1332.0], [4022.0, 1359.0], [4014.0, 1343.6666666666667], [4006.0, 1299.0], [4062.0, 1316.0], [4300.0, 1507.0], [4348.0, 1136.0], [4268.0, 1549.0], [4332.0, 1169.0], [4220.0, 1596.0], [4108.0, 1290.5], [4204.0, 1281.0], [4188.0, 1595.0], [4572.0, 1238.0], [4492.0, 1379.0], [4508.0, 1025.5], [4524.0, 1317.0], [4588.0, 1232.0], [4556.0, 1265.5], [4476.0, 1386.0], [4364.0, 1303.5], [4396.0, 1104.0], [4460.0, 1216.0], [4444.0, 1484.0], [4428.0, 1386.0], [4748.0, 1048.0], [4844.0, 1026.0], [4764.0, 1011.0], [4796.0, 1069.0], [4828.0, 962.0], [4620.0, 1028.5], [4732.0, 1113.0], [4716.0, 1114.5], [4924.0, 956.0], [4956.0, 927.0], [4940.0, 939.0], [4301.0, 1165.0], [4333.0, 1481.0], [4349.0, 1106.0], [4237.0, 1403.5], [4253.0, 1226.0], [4269.0, 1522.0], [4157.0, 1262.3333333333333], [4141.0, 1280.0], [4109.0, 1633.0], [4173.0, 1392.6666666666667], [4589.0, 907.0], [4605.0, 1269.0], [4493.0, 1442.0], [4509.0, 1341.0], [4525.0, 1330.0], [4541.0, 1186.6666666666667], [4573.0, 1270.0], [4557.0, 1292.0], [4477.0, 1382.0], [4365.0, 1290.5], [4381.0, 1104.5], [4397.0, 1452.0], [4413.0, 1078.0], [4461.0, 1382.0], [4445.0, 1413.0], [4813.0, 984.0], [4749.0, 1043.0], [4765.0, 1094.0], [4781.0, 1061.3333333333333], [4845.0, 953.0], [4669.0, 1160.0], [4717.0, 1119.0], [4701.0, 1126.0], [4685.0, 1190.5], [4893.0, 990.0], [4957.0, 922.0], [4909.0, 889.0], [2175.0, 2503.0], [2167.0, 2849.0], [2143.0, 2750.0], [2119.0, 3017.0], [2111.0, 2513.0], [2071.0, 3081.0], [2295.0, 2651.0], [2303.0, 2921.0], [2287.0, 2962.0], [2279.0, 2405.0], [2271.0, 2937.0], [2263.0, 2943.0], [2255.0, 2431.0], [2247.0, 2959.0], [2239.0, 2439.0], [2183.0, 2739.5], [2199.0, 3022.0], [2191.0, 2501.0], [2231.0, 2459.0], [2223.0, 2963.0], [2327.0, 2882.0], [2423.0, 2295.0], [2415.0, 2523.0], [2335.0, 2896.0], [2311.0, 2389.0], [2399.0, 2830.0], [2383.0, 2635.4615384615386], [2359.0, 2855.0], [2351.0, 2886.0], [2343.0, 2902.5], [2559.0, 2768.0], [2551.0, 2798.0], [2687.0, 2209.5], [2631.0, 2461.5], [2663.0, 2180.0], [2623.0, 2170.0], [2567.0, 2750.0], [2615.0, 2192.0], [2607.0, 2222.0], [2647.0, 2205.0], [2807.0, 2588.0], [2815.0, 2557.5], [2767.0, 2621.5], [2775.0, 2611.0], [2799.0, 2602.0], [2791.0, 2608.0], [2751.0, 2146.0], [2695.0, 2696.0], [2719.0, 2693.0], [2735.0, 2681.0], [2727.0, 2409.0], [2783.0, 2590.0], [2839.0, 2539.0], [2847.0, 2530.0], [2831.0, 2301.5], [2823.0, 2060.0], [2871.0, 2280.0], [2863.0, 2272.0], [2855.0, 2524.0], [2911.0, 2474.0], [2903.0, 1973.0], [2895.0, 1983.0], [2887.0, 1990.0], [3055.0, 1875.0], [3071.0, 1912.0], [3023.0, 2406.0], [3063.0, 2361.0], [3047.0, 2390.0], [2975.0, 2425.0], [2967.0, 2214.5], [2959.0, 2454.0], [2951.0, 1933.0], [2999.0, 2400.0], [2983.0, 2431.0], [3031.0, 1947.0], [3199.0, 1779.0], [3175.0, 1790.0], [3095.0, 2335.0], [3167.0, 1778.0], [3159.0, 1853.0], [3143.0, 1845.0], [3303.0, 1910.0], [3319.0, 1788.0], [3279.0, 2201.0], [3311.0, 1722.0], [3263.0, 2211.0], [3207.0, 1774.6666666666667], [3231.0, 1997.0], [3239.0, 1759.0], [3295.0, 1726.0], [3287.0, 1772.0], [3431.0, 1645.5], [3447.0, 1706.0], [3399.0, 1773.0], [3439.0, 1618.0], [3391.0, 1635.0], [3335.0, 1722.0], [3351.0, 1683.5], [3367.0, 1701.0], [3423.0, 1672.0], [3415.0, 1674.0], [3567.0, 1622.0], [3583.0, 1803.0], [3559.0, 1850.5], [3487.0, 1604.5], [3519.0, 1626.0], [3511.0, 1629.3333333333333], [3535.0, 1644.0], [3695.0, 1995.0], [3703.0, 1739.0], [3711.0, 1528.0], [3671.0, 1512.0], [3607.0, 1512.0], [3599.0, 1617.5], [3591.0, 2082.0], [3647.0, 1481.0], [3639.0, 1608.0], [3631.0, 1492.0], [3623.0, 1504.0], [3735.0, 1430.0], [3727.0, 1626.6666666666667], [3879.0, 1885.0], [3871.0, 1424.0], [4087.0, 1331.0], [4039.0, 1348.6666666666667], [4047.0, 1343.0], [4063.0, 1367.0], [4079.0, 1516.5], [4071.0, 1666.0], [3999.0, 1698.0], [3991.0, 1336.0], [4031.0, 1352.0], [4023.0, 1366.0], [4334.0, 1169.0], [4318.0, 1250.3333333333333], [4350.0, 1467.0], [4238.0, 1654.0], [4254.0, 1226.0], [4286.0, 1313.3333333333333], [4302.0, 1485.0], [4158.0, 1604.0], [4126.0, 1264.3333333333333], [4110.0, 1636.0], [4222.0, 1406.5], [4206.0, 1412.5], [4190.0, 1475.5], [4574.0, 1281.0], [4510.0, 1343.0], [4542.0, 1384.0], [4590.0, 1236.0], [4558.0, 1293.0], [4414.0, 1398.0], [4398.0, 1108.0], [4366.0, 1093.0], [4430.0, 1091.0], [4830.0, 971.0], [4750.0, 1057.0], [4766.0, 1016.0], [4798.0, 1001.5], [4846.0, 1012.0], [4814.0, 988.0], [4734.0, 1082.0], [4670.0, 1194.0], [4718.0, 1192.0], [4702.0, 1130.0], [4686.0, 1133.0], [4878.0, 962.2222222222223], [4894.0, 954.0], [4910.0, 973.0], [4926.0, 902.0], [4942.0, 923.0], [4127.0, 1301.0], [4303.0, 1518.0], [4351.0, 1104.0], [4239.0, 1228.0], [4287.0, 1554.0], [4223.0, 1578.0], [4207.0, 1255.0], [4191.0, 1253.0], [4175.0, 1447.5], [4591.0, 1244.0], [4607.0, 1220.5], [4495.0, 1203.0], [4527.0, 1357.0], [4543.0, 1314.0], [4575.0, 1268.0], [4559.0, 1284.0], [4415.0, 1079.0], [4399.0, 1118.0], [4383.0, 1269.5], [4367.0, 1145.0], [4479.0, 1207.5], [4463.0, 1219.0], [4447.0, 1247.5], [4431.0, 1383.0], [4831.0, 957.0], [4847.0, 942.0], [4751.0, 1034.0], [4783.0, 1045.5], [4799.0, 1074.0], [4671.0, 1156.0], [4735.0, 1089.0], [4719.0, 1124.0], [4703.0, 1110.0], [4879.0, 893.0], [4895.0, 961.0], [4911.0, 886.0], [4927.0, 940.0], [1.0, 4501.0]], "isOverall": false, "label": "HTTP 요청", "isController": false}, {"data": [[2471.4932, 2617.4258000000086]], "isOverall": false, "label": "HTTP 요청-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4957.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 11000.0, "minX": 1.72049286E12, "maxY": 49833.333333333336, "series": [{"data": [[1.72049286E12, 49833.333333333336]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72049286E12, 11000.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72049286E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2617.4258000000086, "minX": 1.72049286E12, "maxY": 2617.4258000000086, "series": [{"data": [[1.72049286E12, 2617.4258000000086]], "isOverall": false, "label": "HTTP 요청", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72049286E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2543.2459999999983, "minX": 1.72049286E12, "maxY": 2543.2459999999983, "series": [{"data": [[1.72049286E12, 2543.2459999999983]], "isOverall": false, "label": "HTTP 요청", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72049286E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 748.208999999998, "minX": 1.72049286E12, "maxY": 748.208999999998, "series": [{"data": [[1.72049286E12, 748.208999999998]], "isOverall": false, "label": "HTTP 요청", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72049286E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 15.0, "minX": 1.72049286E12, "maxY": 5127.0, "series": [{"data": [[1.72049286E12, 5127.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72049286E12, 4298.900000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72049286E12, 4915.99]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72049286E12, 4543.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72049286E12, 15.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72049286E12, 2643.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72049286E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 848.0, "minX": 87.0, "maxY": 4717.0, "series": [{"data": [[1131.0, 1281.0], [285.0, 4717.0], [1258.0, 1973.5], [1239.0, 3027.0], [87.0, 848.0], [1000.0, 4001.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1258.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 77.0, "minX": 87.0, "maxY": 4477.0, "series": [{"data": [[1131.0, 1206.0], [285.0, 4477.0], [1258.0, 1859.5], [1239.0, 2964.0], [87.0, 77.0], [1000.0, 3939.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1258.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.72049286E12, "maxY": 83.33333333333333, "series": [{"data": [[1.72049286E12, 83.33333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72049286E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.72049286E12, "maxY": 83.33333333333333, "series": [{"data": [[1.72049286E12, 83.33333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72049286E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.72049286E12, "maxY": 83.33333333333333, "series": [{"data": [[1.72049286E12, 83.33333333333333]], "isOverall": false, "label": "HTTP 요청-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72049286E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.72049286E12, "maxY": 83.33333333333333, "series": [{"data": [[1.72049286E12, 83.33333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72049286E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

