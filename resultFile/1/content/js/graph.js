/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 37.0, "minX": 0.0, "maxY": 12714.0, "series": [{"data": [[0.0, 37.0], [0.1, 62.0], [0.2, 63.0], [0.3, 65.0], [0.4, 70.0], [0.5, 73.0], [0.6, 74.0], [0.7, 76.0], [0.8, 96.0], [0.9, 98.0], [1.0, 100.0], [1.1, 101.0], [1.2, 107.0], [1.3, 123.0], [1.4, 131.0], [1.5, 142.0], [1.6, 154.0], [1.7, 157.0], [1.8, 222.0], [1.9, 922.0], [2.0, 937.0], [2.1, 951.0], [2.2, 1071.0], [2.3, 1090.0], [2.4, 1139.0], [2.5, 1240.0], [2.6, 1248.0], [2.7, 1266.0], [2.8, 1273.0], [2.9, 1281.0], [3.0, 1307.0], [3.1, 1323.0], [3.2, 1338.0], [3.3, 1352.0], [3.4, 1365.0], [3.5, 1371.0], [3.6, 1378.0], [3.7, 1379.0], [3.8, 1384.0], [3.9, 1393.0], [4.0, 1406.0], [4.1, 1421.0], [4.2, 1433.0], [4.3, 1450.0], [4.4, 1464.0], [4.5, 1475.0], [4.6, 1487.0], [4.7, 1528.0], [4.8, 1558.0], [4.9, 1579.0], [5.0, 1685.0], [5.1, 1723.0], [5.2, 1734.0], [5.3, 1754.0], [5.4, 1777.0], [5.5, 1794.0], [5.6, 1833.0], [5.7, 1893.0], [5.8, 1932.0], [5.9, 1969.0], [6.0, 1981.0], [6.1, 2018.0], [6.2, 2035.0], [6.3, 2067.0], [6.4, 2084.0], [6.5, 2131.0], [6.6, 2143.0], [6.7, 2166.0], [6.8, 2183.0], [6.9, 2218.0], [7.0, 2233.0], [7.1, 2248.0], [7.2, 2252.0], [7.3, 2281.0], [7.4, 2317.0], [7.5, 2340.0], [7.6, 2374.0], [7.7, 2401.0], [7.8, 2459.0], [7.9, 2504.0], [8.0, 3062.0], [8.1, 3066.0], [8.2, 3075.0], [8.3, 3111.0], [8.4, 3148.0], [8.5, 3168.0], [8.6, 3196.0], [8.7, 3213.0], [8.8, 3228.0], [8.9, 3249.0], [9.0, 3264.0], [9.1, 3281.0], [9.2, 3313.0], [9.3, 3323.0], [9.4, 3333.0], [9.5, 3345.0], [9.6, 3364.0], [9.7, 3372.0], [9.8, 3381.0], [9.9, 3395.0], [10.0, 3408.0], [10.1, 3413.0], [10.2, 3442.0], [10.3, 3467.0], [10.4, 3491.0], [10.5, 3522.0], [10.6, 3542.0], [10.7, 3571.0], [10.8, 3638.0], [10.9, 3664.0], [11.0, 3675.0], [11.1, 3684.0], [11.2, 3694.0], [11.3, 3724.0], [11.4, 3744.0], [11.5, 3767.0], [11.6, 3777.0], [11.7, 3784.0], [11.8, 3793.0], [11.9, 3811.0], [12.0, 3814.0], [12.1, 3818.0], [12.2, 3829.0], [12.3, 3846.0], [12.4, 3851.0], [12.5, 3864.0], [12.6, 3879.0], [12.7, 3889.0], [12.8, 3894.0], [12.9, 3900.0], [13.0, 3905.0], [13.1, 3911.0], [13.2, 3922.0], [13.3, 3927.0], [13.4, 3942.0], [13.5, 3953.0], [13.6, 3959.0], [13.7, 3978.0], [13.8, 3998.0], [13.9, 4013.0], [14.0, 4021.0], [14.1, 4034.0], [14.2, 4052.0], [14.3, 4061.0], [14.4, 4065.0], [14.5, 4068.0], [14.6, 4084.0], [14.7, 4109.0], [14.8, 4125.0], [14.9, 4149.0], [15.0, 4159.0], [15.1, 4177.0], [15.2, 4191.0], [15.3, 4204.0], [15.4, 4212.0], [15.5, 4220.0], [15.6, 4236.0], [15.7, 4242.0], [15.8, 4268.0], [15.9, 4272.0], [16.0, 4295.0], [16.1, 4304.0], [16.2, 4309.0], [16.3, 4316.0], [16.4, 4321.0], [16.5, 4326.0], [16.6, 4333.0], [16.7, 4337.0], [16.8, 4343.0], [16.9, 4354.0], [17.0, 4360.0], [17.1, 4366.0], [17.2, 4378.0], [17.3, 4387.0], [17.4, 4395.0], [17.5, 4405.0], [17.6, 4411.0], [17.7, 4417.0], [17.8, 4424.0], [17.9, 4437.0], [18.0, 4444.0], [18.1, 4448.0], [18.2, 4459.0], [18.3, 4466.0], [18.4, 4473.0], [18.5, 4479.0], [18.6, 4492.0], [18.7, 4497.0], [18.8, 4510.0], [18.9, 4518.0], [19.0, 4535.0], [19.1, 4554.0], [19.2, 4566.0], [19.3, 4583.0], [19.4, 4603.0], [19.5, 4628.0], [19.6, 4641.0], [19.7, 4647.0], [19.8, 4651.0], [19.9, 4661.0], [20.0, 4679.0], [20.1, 4685.0], [20.2, 4700.0], [20.3, 4717.0], [20.4, 4742.0], [20.5, 4763.0], [20.6, 4774.0], [20.7, 4815.0], [20.8, 4838.0], [20.9, 4864.0], [21.0, 4871.0], [21.1, 4885.0], [21.2, 4908.0], [21.3, 4925.0], [21.4, 4934.0], [21.5, 4952.0], [21.6, 4961.0], [21.7, 4976.0], [21.8, 4988.0], [21.9, 5003.0], [22.0, 5015.0], [22.1, 5046.0], [22.2, 5055.0], [22.3, 5065.0], [22.4, 5071.0], [22.5, 5076.0], [22.6, 5084.0], [22.7, 5091.0], [22.8, 5112.0], [22.9, 5118.0], [23.0, 5126.0], [23.1, 5139.0], [23.2, 5148.0], [23.3, 5155.0], [23.4, 5163.0], [23.5, 5170.0], [23.6, 5177.0], [23.7, 5187.0], [23.8, 5198.0], [23.9, 5207.0], [24.0, 5218.0], [24.1, 5235.0], [24.2, 5240.0], [24.3, 5249.0], [24.4, 5260.0], [24.5, 5283.0], [24.6, 5297.0], [24.7, 5302.0], [24.8, 5305.0], [24.9, 5309.0], [25.0, 5316.0], [25.1, 5322.0], [25.2, 5331.0], [25.3, 5346.0], [25.4, 5350.0], [25.5, 5352.0], [25.6, 5358.0], [25.7, 5364.0], [25.8, 5372.0], [25.9, 5381.0], [26.0, 5392.0], [26.1, 5400.0], [26.2, 5410.0], [26.3, 5423.0], [26.4, 5451.0], [26.5, 5466.0], [26.6, 5475.0], [26.7, 5497.0], [26.8, 5504.0], [26.9, 5515.0], [27.0, 5525.0], [27.1, 5550.0], [27.2, 5572.0], [27.3, 5577.0], [27.4, 5593.0], [27.5, 5604.0], [27.6, 5619.0], [27.7, 5631.0], [27.8, 5642.0], [27.9, 5645.0], [28.0, 5652.0], [28.1, 5672.0], [28.2, 5698.0], [28.3, 5704.0], [28.4, 5726.0], [28.5, 5735.0], [28.6, 5746.0], [28.7, 5757.0], [28.8, 5769.0], [28.9, 5772.0], [29.0, 5781.0], [29.1, 5787.0], [29.2, 5795.0], [29.3, 5803.0], [29.4, 5810.0], [29.5, 5831.0], [29.6, 5871.0], [29.7, 5898.0], [29.8, 5921.0], [29.9, 5933.0], [30.0, 5938.0], [30.1, 5949.0], [30.2, 5960.0], [30.3, 5980.0], [30.4, 5991.0], [30.5, 5998.0], [30.6, 6008.0], [30.7, 6017.0], [30.8, 6040.0], [30.9, 6051.0], [31.0, 6059.0], [31.1, 6070.0], [31.2, 6088.0], [31.3, 6101.0], [31.4, 6117.0], [31.5, 6137.0], [31.6, 6150.0], [31.7, 6165.0], [31.8, 6181.0], [31.9, 6202.0], [32.0, 6220.0], [32.1, 6237.0], [32.2, 6250.0], [32.3, 6259.0], [32.4, 6265.0], [32.5, 6283.0], [32.6, 6289.0], [32.7, 6298.0], [32.8, 6302.0], [32.9, 6317.0], [33.0, 6334.0], [33.1, 6340.0], [33.2, 6356.0], [33.3, 6361.0], [33.4, 6366.0], [33.5, 6375.0], [33.6, 6379.0], [33.7, 6386.0], [33.8, 6394.0], [33.9, 6415.0], [34.0, 6426.0], [34.1, 6436.0], [34.2, 6444.0], [34.3, 6451.0], [34.4, 6458.0], [34.5, 6476.0], [34.6, 6483.0], [34.7, 6492.0], [34.8, 6495.0], [34.9, 6502.0], [35.0, 6509.0], [35.1, 6527.0], [35.2, 6536.0], [35.3, 6542.0], [35.4, 6547.0], [35.5, 6568.0], [35.6, 6576.0], [35.7, 6591.0], [35.8, 6602.0], [35.9, 6611.0], [36.0, 6622.0], [36.1, 6688.0], [36.2, 6711.0], [36.3, 6718.0], [36.4, 6738.0], [36.5, 6741.0], [36.6, 6759.0], [36.7, 6780.0], [36.8, 6792.0], [36.9, 6802.0], [37.0, 6806.0], [37.1, 6812.0], [37.2, 6820.0], [37.3, 6829.0], [37.4, 6851.0], [37.5, 6868.0], [37.6, 6877.0], [37.7, 6882.0], [37.8, 6890.0], [37.9, 6893.0], [38.0, 6907.0], [38.1, 6912.0], [38.2, 6922.0], [38.3, 6927.0], [38.4, 6934.0], [38.5, 6940.0], [38.6, 6949.0], [38.7, 6954.0], [38.8, 6958.0], [38.9, 6965.0], [39.0, 6968.0], [39.1, 6972.0], [39.2, 6975.0], [39.3, 6979.0], [39.4, 6983.0], [39.5, 6990.0], [39.6, 7007.0], [39.7, 7018.0], [39.8, 7033.0], [39.9, 7038.0], [40.0, 7043.0], [40.1, 7045.0], [40.2, 7049.0], [40.3, 7053.0], [40.4, 7056.0], [40.5, 7065.0], [40.6, 7072.0], [40.7, 7080.0], [40.8, 7087.0], [40.9, 7091.0], [41.0, 7096.0], [41.1, 7104.0], [41.2, 7112.0], [41.3, 7122.0], [41.4, 7137.0], [41.5, 7139.0], [41.6, 7151.0], [41.7, 7158.0], [41.8, 7163.0], [41.9, 7169.0], [42.0, 7173.0], [42.1, 7176.0], [42.2, 7185.0], [42.3, 7190.0], [42.4, 7204.0], [42.5, 7212.0], [42.6, 7221.0], [42.7, 7230.0], [42.8, 7236.0], [42.9, 7241.0], [43.0, 7248.0], [43.1, 7250.0], [43.2, 7260.0], [43.3, 7271.0], [43.4, 7277.0], [43.5, 7282.0], [43.6, 7284.0], [43.7, 7287.0], [43.8, 7292.0], [43.9, 7295.0], [44.0, 7304.0], [44.1, 7317.0], [44.2, 7335.0], [44.3, 7347.0], [44.4, 7360.0], [44.5, 7365.0], [44.6, 7368.0], [44.7, 7378.0], [44.8, 7394.0], [44.9, 7397.0], [45.0, 7401.0], [45.1, 7405.0], [45.2, 7413.0], [45.3, 7418.0], [45.4, 7433.0], [45.5, 7446.0], [45.6, 7452.0], [45.7, 7458.0], [45.8, 7472.0], [45.9, 7476.0], [46.0, 7485.0], [46.1, 7488.0], [46.2, 7495.0], [46.3, 7498.0], [46.4, 7502.0], [46.5, 7505.0], [46.6, 7506.0], [46.7, 7509.0], [46.8, 7511.0], [46.9, 7515.0], [47.0, 7519.0], [47.1, 7523.0], [47.2, 7535.0], [47.3, 7547.0], [47.4, 7560.0], [47.5, 7569.0], [47.6, 7581.0], [47.7, 7593.0], [47.8, 7603.0], [47.9, 7612.0], [48.0, 7617.0], [48.1, 7622.0], [48.2, 7627.0], [48.3, 7631.0], [48.4, 7633.0], [48.5, 7636.0], [48.6, 7638.0], [48.7, 7645.0], [48.8, 7649.0], [48.9, 7656.0], [49.0, 7663.0], [49.1, 7669.0], [49.2, 7696.0], [49.3, 7714.0], [49.4, 7722.0], [49.5, 7735.0], [49.6, 7742.0], [49.7, 7752.0], [49.8, 7761.0], [49.9, 7764.0], [50.0, 7768.0], [50.1, 7773.0], [50.2, 7777.0], [50.3, 7789.0], [50.4, 7797.0], [50.5, 7802.0], [50.6, 7805.0], [50.7, 7814.0], [50.8, 7824.0], [50.9, 7830.0], [51.0, 7840.0], [51.1, 7844.0], [51.2, 7853.0], [51.3, 7859.0], [51.4, 7866.0], [51.5, 7872.0], [51.6, 7878.0], [51.7, 7888.0], [51.8, 7895.0], [51.9, 7903.0], [52.0, 7911.0], [52.1, 7919.0], [52.2, 7934.0], [52.3, 7940.0], [52.4, 7944.0], [52.5, 7955.0], [52.6, 7963.0], [52.7, 7968.0], [52.8, 7976.0], [52.9, 7981.0], [53.0, 7986.0], [53.1, 7988.0], [53.2, 7997.0], [53.3, 8002.0], [53.4, 8007.0], [53.5, 8014.0], [53.6, 8021.0], [53.7, 8030.0], [53.8, 8041.0], [53.9, 8046.0], [54.0, 8068.0], [54.1, 8088.0], [54.2, 8101.0], [54.3, 8106.0], [54.4, 8111.0], [54.5, 8117.0], [54.6, 8125.0], [54.7, 8141.0], [54.8, 8199.0], [54.9, 8225.0], [55.0, 8245.0], [55.1, 8250.0], [55.2, 8263.0], [55.3, 8281.0], [55.4, 8291.0], [55.5, 8307.0], [55.6, 8325.0], [55.7, 8384.0], [55.8, 8402.0], [55.9, 8420.0], [56.0, 8427.0], [56.1, 8434.0], [56.2, 8441.0], [56.3, 8454.0], [56.4, 8474.0], [56.5, 8484.0], [56.6, 8491.0], [56.7, 8498.0], [56.8, 8506.0], [56.9, 8520.0], [57.0, 8541.0], [57.1, 8554.0], [57.2, 8562.0], [57.3, 8579.0], [57.4, 8606.0], [57.5, 8610.0], [57.6, 8627.0], [57.7, 8636.0], [57.8, 8649.0], [57.9, 8663.0], [58.0, 8670.0], [58.1, 8679.0], [58.2, 8685.0], [58.3, 8697.0], [58.4, 8705.0], [58.5, 8709.0], [58.6, 8719.0], [58.7, 8725.0], [58.8, 8729.0], [58.9, 8738.0], [59.0, 8742.0], [59.1, 8748.0], [59.2, 8756.0], [59.3, 8765.0], [59.4, 8768.0], [59.5, 8775.0], [59.6, 8787.0], [59.7, 8791.0], [59.8, 8803.0], [59.9, 8806.0], [60.0, 8811.0], [60.1, 8818.0], [60.2, 8824.0], [60.3, 8835.0], [60.4, 8841.0], [60.5, 8844.0], [60.6, 8852.0], [60.7, 8863.0], [60.8, 8873.0], [60.9, 8882.0], [61.0, 8890.0], [61.1, 8893.0], [61.2, 8900.0], [61.3, 8904.0], [61.4, 8914.0], [61.5, 8918.0], [61.6, 8924.0], [61.7, 8932.0], [61.8, 8937.0], [61.9, 8954.0], [62.0, 8956.0], [62.1, 8964.0], [62.2, 8972.0], [62.3, 8977.0], [62.4, 8999.0], [62.5, 9007.0], [62.6, 9014.0], [62.7, 9027.0], [62.8, 9033.0], [62.9, 9042.0], [63.0, 9052.0], [63.1, 9062.0], [63.2, 9071.0], [63.3, 9076.0], [63.4, 9080.0], [63.5, 9107.0], [63.6, 9118.0], [63.7, 9148.0], [63.8, 9159.0], [63.9, 9164.0], [64.0, 9166.0], [64.1, 9177.0], [64.2, 9180.0], [64.3, 9189.0], [64.4, 9213.0], [64.5, 9221.0], [64.6, 9229.0], [64.7, 9237.0], [64.8, 9245.0], [64.9, 9264.0], [65.0, 9289.0], [65.1, 9309.0], [65.2, 9352.0], [65.3, 9358.0], [65.4, 9385.0], [65.5, 9406.0], [65.6, 9437.0], [65.7, 9462.0], [65.8, 9472.0], [65.9, 9480.0], [66.0, 9498.0], [66.1, 9503.0], [66.2, 9512.0], [66.3, 9521.0], [66.4, 9535.0], [66.5, 9547.0], [66.6, 9564.0], [66.7, 9571.0], [66.8, 9573.0], [66.9, 9581.0], [67.0, 9603.0], [67.1, 9617.0], [67.2, 9637.0], [67.3, 9663.0], [67.4, 9677.0], [67.5, 9697.0], [67.6, 9728.0], [67.7, 9749.0], [67.8, 9756.0], [67.9, 9762.0], [68.0, 9767.0], [68.1, 9776.0], [68.2, 9780.0], [68.3, 9786.0], [68.4, 9804.0], [68.5, 9819.0], [68.6, 9832.0], [68.7, 9837.0], [68.8, 9841.0], [68.9, 9849.0], [69.0, 9857.0], [69.1, 9864.0], [69.2, 9875.0], [69.3, 9881.0], [69.4, 9893.0], [69.5, 9925.0], [69.6, 9954.0], [69.7, 9965.0], [69.8, 9978.0], [69.9, 9990.0], [70.0, 10004.0], [70.1, 10027.0], [70.2, 10042.0], [70.3, 10055.0], [70.4, 10068.0], [70.5, 10076.0], [70.6, 10090.0], [70.7, 10095.0], [70.8, 10108.0], [70.9, 10113.0], [71.0, 10128.0], [71.1, 10145.0], [71.2, 10154.0], [71.3, 10173.0], [71.4, 10187.0], [71.5, 10203.0], [71.6, 10219.0], [71.7, 10223.0], [71.8, 10239.0], [71.9, 10242.0], [72.0, 10250.0], [72.1, 10255.0], [72.2, 10259.0], [72.3, 10264.0], [72.4, 10275.0], [72.5, 10280.0], [72.6, 10286.0], [72.7, 10306.0], [72.8, 10317.0], [72.9, 10326.0], [73.0, 10338.0], [73.1, 10352.0], [73.2, 10362.0], [73.3, 10367.0], [73.4, 10377.0], [73.5, 10380.0], [73.6, 10391.0], [73.7, 10402.0], [73.8, 10411.0], [73.9, 10423.0], [74.0, 10436.0], [74.1, 10442.0], [74.2, 10447.0], [74.3, 10463.0], [74.4, 10483.0], [74.5, 10489.0], [74.6, 10508.0], [74.7, 10517.0], [74.8, 10521.0], [74.9, 10534.0], [75.0, 10547.0], [75.1, 10554.0], [75.2, 10560.0], [75.3, 10570.0], [75.4, 10580.0], [75.5, 10595.0], [75.6, 10609.0], [75.7, 10618.0], [75.8, 10623.0], [75.9, 10637.0], [76.0, 10649.0], [76.1, 10667.0], [76.2, 10691.0], [76.3, 10710.0], [76.4, 10725.0], [76.5, 10735.0], [76.6, 10739.0], [76.7, 10749.0], [76.8, 10788.0], [76.9, 10829.0], [77.0, 10863.0], [77.1, 10883.0], [77.2, 10901.0], [77.3, 10916.0], [77.4, 10930.0], [77.5, 10954.0], [77.6, 10963.0], [77.7, 10976.0], [77.8, 10981.0], [77.9, 11004.0], [78.0, 11015.0], [78.1, 11026.0], [78.2, 11030.0], [78.3, 11047.0], [78.4, 11060.0], [78.5, 11068.0], [78.6, 11073.0], [78.7, 11083.0], [78.8, 11098.0], [78.9, 11105.0], [79.0, 11112.0], [79.1, 11118.0], [79.2, 11126.0], [79.3, 11134.0], [79.4, 11136.0], [79.5, 11139.0], [79.6, 11146.0], [79.7, 11152.0], [79.8, 11159.0], [79.9, 11172.0], [80.0, 11174.0], [80.1, 11178.0], [80.2, 11183.0], [80.3, 11194.0], [80.4, 11198.0], [80.5, 11206.0], [80.6, 11210.0], [80.7, 11216.0], [80.8, 11221.0], [80.9, 11225.0], [81.0, 11229.0], [81.1, 11234.0], [81.2, 11238.0], [81.3, 11239.0], [81.4, 11244.0], [81.5, 11248.0], [81.6, 11252.0], [81.7, 11257.0], [81.8, 11262.0], [81.9, 11269.0], [82.0, 11277.0], [82.1, 11284.0], [82.2, 11292.0], [82.3, 11295.0], [82.4, 11300.0], [82.5, 11307.0], [82.6, 11311.0], [82.7, 11320.0], [82.8, 11329.0], [82.9, 11335.0], [83.0, 11341.0], [83.1, 11345.0], [83.2, 11346.0], [83.3, 11349.0], [83.4, 11357.0], [83.5, 11361.0], [83.6, 11365.0], [83.7, 11372.0], [83.8, 11386.0], [83.9, 11390.0], [84.0, 11395.0], [84.1, 11402.0], [84.2, 11407.0], [84.3, 11410.0], [84.4, 11412.0], [84.5, 11419.0], [84.6, 11428.0], [84.7, 11436.0], [84.8, 11439.0], [84.9, 11443.0], [85.0, 11448.0], [85.1, 11451.0], [85.2, 11455.0], [85.3, 11458.0], [85.4, 11463.0], [85.5, 11468.0], [85.6, 11476.0], [85.7, 11480.0], [85.8, 11485.0], [85.9, 11488.0], [86.0, 11492.0], [86.1, 11502.0], [86.2, 11508.0], [86.3, 11512.0], [86.4, 11518.0], [86.5, 11529.0], [86.6, 11536.0], [86.7, 11539.0], [86.8, 11542.0], [86.9, 11552.0], [87.0, 11557.0], [87.1, 11561.0], [87.2, 11566.0], [87.3, 11572.0], [87.4, 11575.0], [87.5, 11586.0], [87.6, 11589.0], [87.7, 11595.0], [87.8, 11605.0], [87.9, 11612.0], [88.0, 11618.0], [88.1, 11638.0], [88.2, 11645.0], [88.3, 11657.0], [88.4, 11662.0], [88.5, 11672.0], [88.6, 11680.0], [88.7, 11684.0], [88.8, 11690.0], [88.9, 11694.0], [89.0, 11700.0], [89.1, 11705.0], [89.2, 11714.0], [89.3, 11718.0], [89.4, 11728.0], [89.5, 11733.0], [89.6, 11747.0], [89.7, 11756.0], [89.8, 11765.0], [89.9, 11777.0], [90.0, 11785.0], [90.1, 11796.0], [90.2, 11800.0], [90.3, 11805.0], [90.4, 11809.0], [90.5, 11816.0], [90.6, 11822.0], [90.7, 11826.0], [90.8, 11838.0], [90.9, 11847.0], [91.0, 11857.0], [91.1, 11865.0], [91.2, 11873.0], [91.3, 11880.0], [91.4, 11891.0], [91.5, 11900.0], [91.6, 11914.0], [91.7, 11919.0], [91.8, 11929.0], [91.9, 11937.0], [92.0, 11952.0], [92.1, 11958.0], [92.2, 11967.0], [92.3, 11975.0], [92.4, 11980.0], [92.5, 11988.0], [92.6, 11996.0], [92.7, 12003.0], [92.8, 12011.0], [92.9, 12015.0], [93.0, 12025.0], [93.1, 12033.0], [93.2, 12046.0], [93.3, 12057.0], [93.4, 12069.0], [93.5, 12074.0], [93.6, 12088.0], [93.7, 12099.0], [93.8, 12104.0], [93.9, 12109.0], [94.0, 12112.0], [94.1, 12115.0], [94.2, 12126.0], [94.3, 12134.0], [94.4, 12138.0], [94.5, 12142.0], [94.6, 12149.0], [94.7, 12154.0], [94.8, 12157.0], [94.9, 12165.0], [95.0, 12174.0], [95.1, 12188.0], [95.2, 12195.0], [95.3, 12203.0], [95.4, 12212.0], [95.5, 12216.0], [95.6, 12232.0], [95.7, 12242.0], [95.8, 12245.0], [95.9, 12254.0], [96.0, 12263.0], [96.1, 12273.0], [96.2, 12283.0], [96.3, 12302.0], [96.4, 12309.0], [96.5, 12321.0], [96.6, 12331.0], [96.7, 12344.0], [96.8, 12364.0], [96.9, 12378.0], [97.0, 12396.0], [97.1, 12417.0], [97.2, 12440.0], [97.3, 12451.0], [97.4, 12463.0], [97.5, 12468.0], [97.6, 12475.0], [97.7, 12480.0], [97.8, 12484.0], [97.9, 12490.0], [98.0, 12500.0], [98.1, 12505.0], [98.2, 12520.0], [98.3, 12539.0], [98.4, 12553.0], [98.5, 12563.0], [98.6, 12569.0], [98.7, 12579.0], [98.8, 12590.0], [98.9, 12596.0], [99.0, 12601.0], [99.1, 12609.0], [99.2, 12615.0], [99.3, 12621.0], [99.4, 12624.0], [99.5, 12630.0], [99.6, 12644.0], [99.7, 12669.0], [99.8, 12687.0], [99.9, 12703.0]], "isOverall": false, "label": "HTTP 요청", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 100.0, "series": [{"data": [[0.0, 46.0], [100.0, 41.0], [200.0, 6.0], [900.0, 12.0], [1000.0, 13.0], [1100.0, 2.0], [1200.0, 29.0], [1300.0, 48.0], [1400.0, 36.0], [1500.0, 14.0], [1600.0, 5.0], [1700.0, 25.0], [1800.0, 10.0], [1900.0, 16.0], [2000.0, 19.0], [2100.0, 22.0], [2200.0, 25.0], [2300.0, 16.0], [2400.0, 10.0], [2500.0, 4.0], [2600.0, 1.0], [3000.0, 15.0], [3100.0, 16.0], [3200.0, 28.0], [3300.0, 39.0], [3400.0, 25.0], [3500.0, 15.0], [3600.0, 24.0], [3700.0, 30.0], [3800.0, 53.0], [3900.0, 46.0], [4000.0, 43.0], [4100.0, 31.0], [4200.0, 37.0], [4300.0, 69.0], [4400.0, 67.0], [4500.0, 30.0], [4600.0, 42.0], [4700.0, 23.0], [4800.0, 25.0], [4900.0, 37.0], [5000.0, 43.0], [5100.0, 53.0], [5200.0, 42.0], [5300.0, 72.0], [5400.0, 31.0], [5600.0, 39.0], [5500.0, 37.0], [5700.0, 51.0], [5800.0, 23.0], [5900.0, 40.0], [6000.0, 39.0], [6100.0, 30.0], [6200.0, 42.0], [6300.0, 55.0], [6400.0, 51.0], [6500.0, 45.0], [6600.0, 20.0], [6700.0, 37.0], [6800.0, 53.0], [6900.0, 78.0], [7000.0, 76.0], [7100.0, 65.0], [7200.0, 82.0], [7400.0, 67.0], [7300.0, 49.0], [7500.0, 70.0], [7600.0, 76.0], [7700.0, 61.0], [7800.0, 69.0], [7900.0, 72.0], [8000.0, 46.0], [8100.0, 31.0], [8200.0, 32.0], [8300.0, 17.0], [8400.0, 46.0], [8600.0, 48.0], [8500.0, 33.0], [8700.0, 71.0], [8800.0, 72.0], [8900.0, 61.0], [9000.0, 53.0], [9200.0, 34.0], [9100.0, 44.0], [9400.0, 29.0], [9500.0, 47.0], [9600.0, 28.0], [9300.0, 21.0], [9700.0, 41.0], [9800.0, 53.0], [9900.0, 26.0], [10000.0, 41.0], [10100.0, 36.0], [10200.0, 60.0], [10300.0, 50.0], [10400.0, 44.0], [10500.0, 48.0], [10600.0, 36.0], [10700.0, 29.0], [10800.0, 19.0], [10900.0, 35.0], [11000.0, 46.0], [11100.0, 80.0], [11200.0, 98.0], [11300.0, 85.0], [11400.0, 100.0], [11500.0, 85.0], [11600.0, 61.0], [11700.0, 60.0], [11800.0, 65.0], [11900.0, 57.0], [12000.0, 54.0], [12100.0, 76.0], [12200.0, 52.0], [12300.0, 38.0], [12400.0, 48.0], [12600.0, 46.0], [12500.0, 50.0], [12700.0, 5.0]], "isOverall": false, "label": "HTTP 요청", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 12700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 93.0, "minX": 0.0, "ticks": [[0, "요청 수 \n(응답시간 <= 500ms)"], [1, "요청 수 \n(응답시간 > 500ms 및 <= 1,500ms)"], [2, "요청 수 \n(응답시간 > 1,500ms)"], [3, "오류 발생 요청"]], "maxY": 4767.0, "series": [{"data": [[0.0, 93.0]], "color": "#9ACD32", "isOverall": false, "label": "요청 수 \n(응답시간 <= 500ms)", "isController": false}, {"data": [[1.0, 140.0]], "color": "yellow", "isOverall": false, "label": "요청 수 \n(응답시간 > 500ms 및 <= 1,500ms)", "isController": false}, {"data": [[2.0, 4767.0]], "color": "orange", "isOverall": false, "label": "요청 수 \n(응답시간 > 1,500ms)", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "오류 발생 요청", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2421.5236000000023, "minX": 1.72049178E12, "maxY": 2421.5236000000023, "series": [{"data": [[1.72049178E12, 2421.5236000000023]], "isOverall": false, "label": "쓰레드 그룹", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72049178E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 63.0, "minX": 1.0, "maxY": 12710.0, "series": [{"data": [[2.0, 12618.0], [3.0, 12628.0], [5.0, 12666.0], [7.0, 12639.0], [8.0, 12394.5], [9.0, 12189.0], [10.0, 12641.0], [11.0, 12188.0], [12.0, 12625.0], [13.0, 12630.0], [14.0, 12597.0], [16.0, 12379.0], [19.0, 12333.666666666666], [20.0, 12141.0], [22.0, 12710.0], [23.0, 12617.5], [24.0, 12613.0], [25.0, 12602.0], [27.0, 12704.5], [28.0, 12609.0], [30.0, 12623.0], [31.0, 12621.0], [33.0, 12699.5], [37.0, 12663.666666666666], [36.0, 12621.0], [39.0, 12615.0], [38.0, 12685.0], [41.0, 12611.0], [40.0, 12696.0], [43.0, 12606.0], [42.0, 12594.0], [45.0, 12610.0], [44.0, 12695.0], [47.0, 12367.5], [51.0, 12158.0], [50.0, 12605.666666666666], [53.0, 12172.0], [55.0, 12679.0], [54.0, 12544.0], [57.0, 12108.0], [56.0, 12477.0], [58.0, 12114.0], [60.0, 12589.0], [63.0, 12659.0], [62.0, 12564.5], [67.0, 12135.0], [66.0, 12097.0], [65.0, 12567.0], [64.0, 12109.0], [71.0, 12669.0], [70.0, 12665.0], [69.0, 11838.0], [68.0, 12666.0], [75.0, 12329.0], [73.0, 12517.5], [79.0, 12658.0], [78.0, 12569.0], [77.0, 12559.0], [76.0, 12644.0], [82.0, 12112.0], [81.0, 12567.0], [80.0, 12564.0], [87.0, 12386.0], [84.0, 12069.0], [90.0, 12539.0], [89.0, 12548.0], [88.0, 12505.0], [135.0, 12624.0], [141.0, 12569.666666666666], [166.0, 12419.0], [165.0, 11929.0], [164.0, 11939.0], [163.0, 12426.507246376816], [175.0, 12496.0], [174.0, 11917.0], [173.0, 11916.0], [172.0, 12237.0], [170.0, 12498.0], [169.0, 12396.0], [168.0, 12166.0], [183.0, 12226.0], [181.0, 12384.0], [180.0, 12378.0], [179.0, 12438.5], [177.0, 11978.0], [176.0, 12489.0], [191.0, 11896.0], [190.0, 12090.0], [188.0, 12479.0], [187.0, 12473.0], [186.0, 12364.0], [185.0, 12483.0], [184.0, 12375.0], [199.0, 6218.0], [198.0, 11934.0], [197.0, 12276.0], [196.0, 12451.0], [195.0, 12373.5], [193.0, 12410.0], [192.0, 11957.0], [203.0, 8301.666666666666], [207.0, 6172.0], [206.0, 12358.0], [205.0, 12089.0], [201.0, 12407.0], [214.0, 70.0], [213.0, 5017.8], [212.0, 76.0], [210.0, 100.0], [209.0, 3161.5], [215.0, 12391.5], [211.0, 12343.0], [208.0, 12345.0], [223.0, 8244.333333333334], [221.0, 3023.75], [217.0, 80.25], [220.0, 12371.5], [218.0, 12180.0], [231.0, 71.0], [225.0, 71.55555555555554], [224.0, 4193.666666666667], [230.0, 12314.0], [229.0, 12251.0], [228.0, 12315.0], [227.0, 12231.0], [226.0, 11886.0], [234.0, 6210.0], [233.0, 3412.272727272727], [239.0, 12309.0], [238.0, 12412.0], [237.0, 12326.0], [236.0, 12320.0], [235.0, 12301.0], [243.0, 4939.4], [245.0, 2308.272727272727], [244.0, 63.0], [242.0, 63.0], [246.0, 11887.0], [241.0, 12308.0], [240.0, 11867.0], [254.0, 12105.666666666666], [251.0, 12022.5], [249.0, 12046.333333333334], [259.0, 12253.0], [269.0, 12244.0], [271.0, 11976.5], [268.0, 12234.5], [258.0, 11511.0], [257.0, 12165.0], [256.0, 12256.5], [267.0, 12143.0], [265.0, 11879.0], [263.0, 12227.0], [262.0, 11820.0], [261.0, 12216.0], [260.0, 12171.0], [284.0, 11868.0], [286.0, 11753.0], [287.0, 11750.0], [285.0, 12245.0], [282.0, 11804.0], [281.0, 12233.0], [279.0, 12152.0], [273.0, 12212.0], [272.0, 12240.0], [275.0, 12255.0], [274.0, 12237.0], [278.0, 12323.0], [277.0, 12323.0], [276.0, 12161.0], [301.0, 12314.0], [303.0, 12256.5], [300.0, 11733.0], [290.0, 12195.0], [288.0, 12232.0], [299.0, 11732.0], [298.0, 12216.0], [297.0, 12209.0], [296.0, 11476.0], [295.0, 11796.5], [293.0, 11803.0], [292.0, 11946.0], [307.0, 12097.0], [317.0, 12154.0], [318.0, 12145.0], [316.0, 12280.0], [306.0, 12037.0], [304.0, 12273.0], [315.0, 11772.0], [314.0, 11882.666666666666], [311.0, 12155.0], [310.0, 12193.0], [309.0, 12202.0], [308.0, 12159.0], [323.0, 12270.5], [335.0, 11880.5], [333.0, 12191.5], [331.0, 12166.5], [329.0, 12207.0], [328.0, 12189.0], [326.0, 11983.0], [324.0, 12134.0], [321.0, 12174.0], [320.0, 12227.0], [350.0, 11963.0], [351.0, 11680.0], [348.0, 12101.0], [339.0, 11681.0], [337.0, 11682.0], [336.0, 11676.0], [347.0, 12137.0], [345.0, 12139.0], [344.0, 12149.0], [343.0, 12138.0], [342.0, 12146.0], [341.0, 11677.0], [340.0, 12115.0], [355.0, 11716.0], [365.0, 11980.333333333334], [367.0, 11900.5], [364.0, 12221.0], [361.0, 12098.0], [360.0, 12103.0], [359.0, 12209.0], [357.0, 12108.0], [356.0, 12105.0], [354.0, 11672.0], [353.0, 11903.5], [382.0, 12028.0], [383.0, 12027.0], [381.0, 12203.0], [380.0, 11693.0], [379.0, 11699.0], [378.0, 12190.0], [376.0, 11639.0], [375.0, 12043.0], [369.0, 11836.0], [371.0, 11693.0], [370.0, 12110.0], [374.0, 12074.0], [373.0, 12124.0], [372.0, 12216.0], [387.0, 12089.0], [397.0, 11593.0], [396.0, 9727.4], [399.0, 11660.5], [392.0, 12099.0], [391.0, 11660.0], [390.0, 12073.0], [389.0, 12101.0], [388.0, 12088.0], [386.0, 12191.0], [385.0, 12015.0], [384.0, 11700.0], [414.0, 11637.0], [415.0, 12108.5], [412.0, 12124.0], [403.0, 12064.0], [402.0, 11621.0], [411.0, 12154.0], [410.0, 11980.0], [409.0, 12157.0], [408.0, 12051.0], [407.0, 11988.0], [406.0, 11587.0], [404.0, 11652.0], [430.0, 11956.0], [431.0, 12049.0], [429.0, 11875.333333333334], [419.0, 11971.0], [418.0, 12099.0], [416.0, 12154.0], [426.0, 11958.0], [425.0, 11618.0], [424.0, 11582.0], [423.0, 11564.0], [422.0, 11969.0], [421.0, 12033.0], [420.0, 12044.0], [440.0, 11947.0], [439.0, 11617.0], [438.0, 12042.0], [436.0, 11950.0], [435.0, 11849.0], [433.0, 12056.0], [463.0, 157.0], [495.0, 11913.0], [494.0, 11478.0], [493.0, 11928.0], [492.0, 11919.0], [491.0, 11952.0], [490.0, 11931.339999999995], [499.0, 11832.0], [510.0, 11908.0], [511.0, 11914.0], [508.0, 11813.0], [506.0, 11682.0], [504.0, 11929.0], [503.0, 11629.0], [501.0, 11869.5], [498.0, 11832.0], [497.0, 11446.5], [540.0, 11829.0], [542.0, 11468.0], [538.0, 11963.0], [518.0, 11649.0], [516.0, 11926.0], [514.0, 11733.0], [534.0, 11891.0], [532.0, 11696.5], [530.0, 11456.0], [528.0, 11841.0], [526.0, 11908.0], [524.0, 11649.5], [522.0, 12003.0], [550.0, 11880.0], [572.0, 11816.0], [574.0, 11392.0], [568.0, 11408.0], [566.0, 11805.0], [564.0, 11807.0], [558.0, 11867.0], [556.0, 11816.0], [552.0, 11757.0], [548.0, 11850.0], [546.0, 11761.0], [604.0, 7806.666666666667], [606.0, 5875.0], [592.0, 5849.0], [594.0, 141.0], [596.0, 107.0], [600.0, 5952.0], [602.0, 11700.0], [582.0, 5978.0], [580.0, 155.0], [578.0, 7904.0], [590.0, 5925.0], [576.0, 11728.0], [588.0, 122.0], [586.0, 11826.5], [584.0, 11776.0], [598.0, 5963.5], [636.0, 11694.0], [608.0, 101.0], [610.0, 11781.0], [614.0, 11689.0], [612.0, 11612.5], [622.0, 11718.0], [620.0, 11713.0], [618.0, 11726.0], [616.0, 11663.0], [638.0, 11690.0], [634.0, 11731.0], [632.0, 11645.0], [630.0, 11806.0], [628.0, 11705.0], [626.0, 11816.0], [624.0, 11663.0], [668.0, 11706.25], [670.0, 11178.0], [664.0, 11707.0], [646.0, 11286.0], [644.0, 11553.333333333334], [640.0, 11259.0], [660.0, 11633.0], [658.0, 11424.0], [656.0, 11639.0], [654.0, 11218.0], [652.0, 11608.0], [650.0, 11773.0], [648.0, 11229.0], [702.0, 11693.0], [698.0, 11559.0], [678.0, 11158.0], [676.0, 11165.0], [674.0, 11586.0], [672.0, 11179.0], [694.0, 11567.0], [692.0, 11174.0], [690.0, 11575.0], [688.0, 11572.0], [686.0, 11134.0], [684.0, 11589.5], [682.0, 11598.0], [680.0, 11177.0], [732.0, 11451.0], [734.0, 11463.0], [730.0, 11467.0], [728.0, 11612.0], [726.0, 11142.0], [724.0, 11612.0], [722.0, 11582.0], [718.0, 11518.0], [706.0, 11439.666666666666], [710.0, 11441.5], [708.0, 11481.0], [716.0, 11462.0], [712.0, 11140.0], [738.0, 11462.0], [736.0, 11455.0], [858.0, 11302.0], [860.0, 11387.5], [856.0, 10981.0], [854.0, 11471.0], [852.0, 11371.5], [850.0, 11522.0], [848.0, 11218.0], [846.0, 11524.0], [844.0, 11496.0], [870.0, 11228.0], [892.0, 11481.0], [890.0, 11473.666666666666], [884.0, 11440.5], [882.0, 11394.0], [878.0, 11365.5], [876.0, 11277.0], [874.0, 11352.0], [872.0, 11298.0], [868.0, 11308.0], [866.0, 10978.0], [922.0, 11371.5], [918.0, 11416.0], [916.0, 11414.5], [914.0, 11248.0], [910.0, 11238.0], [896.0, 11372.0], [906.0, 10935.5], [904.0, 11184.5], [902.0, 10963.0], [898.0, 11107.5], [934.0, 11373.5], [958.0, 11306.666666666666], [954.0, 11361.0], [950.0, 11211.0], [946.0, 11211.0], [942.0, 11394.0], [938.0, 11382.0], [936.0, 10910.0], [932.0, 11101.0], [928.0, 11011.0], [986.0, 11348.0], [988.0, 11106.5], [984.0, 11334.0], [982.0, 11333.0], [980.0, 11172.0], [978.0, 11179.0], [972.0, 11297.0], [966.0, 11304.0], [964.0, 11181.0], [960.0, 11176.0], [1018.0, 10826.0], [1022.0, 11218.0], [1016.0, 11251.0], [998.0, 11307.0], [996.0, 11262.0], [994.0, 11269.0], [1014.0, 11277.0], [1012.0, 11327.0], [1010.0, 11324.0], [1006.0, 11126.0], [1004.0, 11252.0], [1002.0, 11311.0], [1076.0, 11239.0], [1080.0, 11209.0], [1072.0, 11295.0], [1036.0, 11085.0], [1028.0, 11270.0], [1024.0, 11293.0], [1064.0, 11257.0], [1060.0, 11201.0], [1056.0, 11197.0], [1052.0, 11242.333333333334], [1048.0, 11238.0], [1044.0, 11181.0], [1040.0, 11262.0], [1096.0, 11204.0], [1148.0, 10926.0], [1124.0, 11103.0], [1116.0, 11120.0], [1112.0, 11157.0], [1108.0, 11137.5], [1104.0, 11136.5], [1100.0, 10845.0], [1092.0, 10691.0], [1088.0, 11197.0], [1200.0, 10735.0], [1208.0, 10688.0], [1212.0, 10670.0], [1204.0, 10707.0], [1196.0, 10742.0], [1192.0, 10735.0], [1176.0, 10863.0], [1172.0, 10806.0], [1164.0, 10863.0], [1160.0, 10879.0], [1156.0, 10977.0], [1152.0, 10996.0], [1240.0, 10407.5], [1236.0, 10623.0], [1232.0, 10648.0], [1228.0, 10563.0], [1224.0, 10667.0], [1220.0, 10626.5], [1216.0, 10606.0], [1340.0, 10074.0], [1332.0, 10409.0], [1328.0, 10018.0], [1324.0, 10093.0], [1400.0, 10337.0], [1404.0, 10382.0], [1396.0, 10312.0], [1392.0, 10298.0], [1388.0, 10414.0], [1380.0, 10322.0], [1376.0, 10369.0], [1372.0, 10350.0], [1344.0, 10068.0], [1356.0, 10366.0], [1348.0, 10220.0], [1368.0, 9925.0], [1364.0, 9937.0], [1460.0, 10082.0], [1468.0, 10070.5], [1456.0, 10206.0], [1420.0, 10338.0], [1412.0, 10265.0], [1408.0, 10379.0], [1452.0, 9842.0], [1448.0, 10223.0], [1444.0, 10309.0], [1440.0, 9879.0], [1436.0, 9875.0], [1432.0, 10317.0], [1424.0, 10054.0], [1528.0, 9673.0], [1532.0, 9660.0], [1524.0, 10185.0], [1520.0, 9687.0], [1516.0, 9759.0], [1512.0, 9756.0], [1508.0, 10223.0], [1504.0, 10219.0], [1500.0, 10230.0], [1476.0, 10262.0], [1472.0, 10270.0], [1484.0, 10258.0], [1480.0, 9803.0], [1496.0, 10244.0], [1492.0, 10250.0], [1488.0, 10241.0], [1560.0, 10109.0], [1556.0, 9609.0], [1552.0, 9675.0], [1540.0, 10147.0], [1536.0, 9663.0], [1656.0, 9861.0], [1660.0, 9554.0], [1652.0, 9867.0], [1648.0, 9018.0], [1644.0, 9893.0], [1640.0, 9520.0], [1636.0, 9907.0], [1628.0, 9472.0], [1608.0, 9479.0], [1604.0, 9542.0], [1624.0, 9502.0], [1616.0, 9959.5], [1720.0, 9304.0], [1724.0, 9226.0], [1716.0, 9498.0], [1712.0, 9759.0], [1708.0, 9414.0], [1700.0, 9776.0], [1696.0, 9780.666666666666], [1692.0, 9788.0], [1664.0, 9845.0], [1676.0, 9823.0], [1672.0, 9836.0], [1688.0, 9361.5], [1684.0, 9356.0], [1780.0, 9231.0], [1784.0, 9393.0], [1776.0, 9421.0], [1772.0, 9301.0], [1768.0, 9216.0], [1764.0, 9154.0], [1752.0, 9167.0], [1744.0, 9180.0], [1740.0, 9256.0], [1736.0, 9274.0], [1732.0, 9271.0], [1728.0, 9283.0], [1852.0, 9088.0], [1908.0, 9013.0], [1912.0, 8508.0], [1904.0, 8503.0], [1856.0, 9504.0], [1900.0, 8927.0], [1892.0, 8946.0], [1888.0, 9108.0], [1880.0, 9042.0], [1876.0, 8844.5], [1872.0, 8975.0], [1972.0, 8432.0], [1980.0, 8679.5], [1968.0, 8848.5], [1964.0, 8813.0], [1960.0, 8724.5], [1952.0, 8868.0], [1940.0, 8962.0], [1932.0, 8976.0], [1928.0, 8480.0], [1920.0, 8921.0], [2036.0, 8783.0], [2040.0, 8782.0], [2032.0, 8790.0], [1988.0, 8830.0], [2028.0, 8805.0], [2024.0, 8888.0], [2020.0, 8812.0], [2016.0, 8852.5], [2008.0, 8811.0], [2004.0, 8813.0], [2000.0, 8817.0], [2104.0, 8706.0], [2096.0, 8714.0], [2088.0, 8725.0], [2080.0, 8661.666666666666], [2072.0, 8854.0], [2064.0, 8746.0], [2048.0, 8768.0], [2280.0, 8381.0], [2288.0, 8246.0], [2272.0, 8413.0], [2200.0, 8585.0], [2264.0, 7941.0], [2256.0, 7953.0], [2248.0, 8036.0], [2240.0, 8492.0], [2232.0, 8068.0], [2224.0, 8579.0], [2216.0, 8034.0], [2408.0, 7510.0], [2384.0, 7509.0], [2424.0, 7428.0], [2416.0, 7509.0], [2392.0, 7507.0], [2360.0, 7472.0], [2304.0, 8178.0], [2320.0, 8072.0], [2312.0, 7853.25], [2352.0, 7485.0], [2344.0, 7515.0], [2336.0, 7547.0], [2528.0, 7814.0], [2512.0, 7841.0], [2496.0, 7940.0], [2536.0, 7797.0], [2448.0, 7976.0], [2488.0, 7948.0], [2480.0, 7878.0], [2472.0, 7443.0], [2464.0, 7719.5], [2520.0, 7824.0], [2504.0, 7674.5], [2680.0, 7600.0], [2632.0, 7660.0], [2672.0, 7721.0], [2656.0, 7742.0], [2648.0, 7637.0], [2640.0, 7658.0], [2800.0, 7649.0], [2808.0, 7422.0], [2760.0, 7800.0], [2752.0, 7631.0], [2792.0, 7482.5], [2784.0, 6971.0], [2688.0, 7087.0], [2704.0, 7294.0], [2744.0, 7535.0], [2736.0, 7641.0], [2776.0, 6982.0], [2936.0, 7283.0], [2840.0, 7303.0], [2832.0, 7365.0], [2816.0, 7403.0], [3048.0, 7101.5], [3064.0, 7108.5], [3008.0, 7190.0], [3016.0, 7075.0], [3024.0, 7056.0], [3056.0, 7110.0], [2968.0, 7033.0], [2952.0, 7182.0], [2944.0, 7234.0], [3000.0, 7153.0], [2992.0, 7138.0], [2984.0, 7260.0], [2976.0, 7137.0], [3032.0, 6944.0], [3136.0, 6800.396551724138], [3192.0, 6664.5], [3144.0, 6914.5], [3168.0, 6409.5], [3072.0, 7003.5], [3160.0, 6808.0], [3152.0, 6950.5], [3304.0, 6536.0], [3280.0, 6602.0], [3312.0, 6605.0], [3264.0, 6710.0], [3272.0, 6732.0], [3296.0, 6547.0], [3224.0, 5779.0], [3216.0, 6548.333333333333], [3208.0, 6470.333333333333], [3200.0, 6806.0], [3256.0, 6738.0], [3248.0, 6784.5], [3240.0, 6754.0], [3232.0, 6516.0], [3288.0, 6573.0], [3400.0, 5927.0], [3408.0, 6376.0], [3392.0, 5519.0], [3440.0, 6336.0], [3432.0, 5980.333333333333], [3376.0, 5890.0], [3368.0, 6376.0], [3416.0, 5789.0], [3560.0, 6117.0], [3576.0, 5505.5], [3520.0, 5289.0], [3568.0, 6097.0], [3456.0, 6298.0], [3464.0, 6295.0], [3472.0, 6028.5], [3512.0, 6203.0], [3504.0, 6216.0], [3496.0, 5757.0], [3488.0, 5760.0], [3544.0, 5303.0], [3536.0, 5710.0], [3696.0, 5387.0], [3688.0, 5318.5], [3680.0, 5125.0], [3600.0, 5612.0], [3584.0, 5704.0], [3672.0, 5586.0], [3808.0, 5301.666666666667], [3800.0, 5310.0], [3824.0, 5242.0], [3816.0, 5296.0], [3720.0, 4989.0], [3712.0, 5005.0], [3760.0, 5370.0], [3752.0, 5506.0], [3744.0, 5394.0], [3904.0, 5171.0], [3960.0, 5397.0], [3920.0, 4547.5], [3928.0, 4559.0], [3944.0, 4961.0], [3936.0, 4944.0], [3856.0, 4655.0], [3840.0, 4712.0], [4064.0, 4517.0], [4072.0, 4506.0], [4048.0, 4647.0], [4088.0, 4774.0], [4056.0, 4542.0], [3968.0, 4393.75], [3976.0, 4341.0], [3992.0, 4876.0], [4008.0, 5206.0], [4000.0, 4900.0], [4112.0, 4181.5], [4336.0, 4089.0], [4096.0, 5009.0], [4128.0, 3905.0], [4144.0, 4390.0], [4160.0, 4700.0], [4240.0, 4363.0], [4368.0, 3809.0], [4496.0, 3458.0], [4352.0, 3866.0], [4464.0, 3542.0], [4448.0, 3671.0], [4432.0, 3778.5], [4416.0, 4091.0], [4400.0, 3694.0], [4480.0, 3538.0], [4528.0, 3315.0], [4800.0, 1464.5], [4752.0, 1559.0], [4672.0, 2264.0], [4688.0, 2034.0], [4768.0, 1487.0], [4736.0, 1687.0], [4784.0, 1483.0], [4832.0, 1196.6666666666667], [4816.0, 1323.0], [4656.0, 2183.0], [4720.0, 1918.0], [4704.0, 1974.5], [4880.0, 1218.0], [4321.0, 4251.5], [4225.0, 4236.5], [4097.0, 5015.0], [4113.0, 4442.0], [4129.0, 4516.0], [4145.0, 4472.0], [4241.0, 4354.0], [4385.0, 3980.5], [4369.0, 3811.0], [4497.0, 3338.0], [4353.0, 3862.0], [4465.0, 3632.0], [4449.0, 3814.0], [4417.0, 3921.0], [4401.0, 3696.0], [4529.0, 3212.0], [4481.0, 3435.0], [4817.0, 1315.0], [4689.0, 2143.0], [4673.0, 2154.0], [4753.0, 1563.0], [4737.0, 1796.0], [4785.0, 1473.0], [4801.0, 1450.0], [4657.0, 2181.0], [4721.0, 1784.0], [4705.0, 1973.0], [4881.0, 1092.0], [2113.0, 8740.0], [2105.0, 8703.0], [2097.0, 8292.0], [2089.0, 8729.0], [2081.0, 8809.0], [2065.0, 8313.0], [2057.0, 8752.5], [2049.0, 8844.0], [2281.0, 7919.0], [2273.0, 8411.0], [2201.0, 8560.0], [2193.0, 8379.5], [2265.0, 8427.0], [2249.0, 8482.0], [2241.0, 8489.0], [2233.0, 8489.0], [2225.0, 8579.0], [2217.0, 8609.0], [2209.0, 8591.5], [2409.0, 8111.0], [2425.0, 8006.0], [2385.0, 7510.0], [2417.0, 7936.0], [2401.0, 7771.5], [2329.0, 7937.0], [2321.0, 7564.0], [2313.0, 8097.0], [2305.0, 8125.0], [2393.0, 7957.0], [2377.0, 7987.5], [2361.0, 8255.0], [2353.0, 8044.0], [2345.0, 7491.0], [2337.0, 7547.0], [2537.0, 7802.0], [2545.0, 7836.333333333333], [2513.0, 7838.0], [2497.0, 7874.0], [2505.0, 7864.0], [2529.0, 7810.0], [2449.0, 7990.0], [2433.0, 7603.666666666667], [2489.0, 7946.0], [2481.0, 7385.0], [2473.0, 8039.0], [2521.0, 7919.0], [2625.0, 7781.5], [2681.0, 7085.0], [2633.0, 7778.0], [2673.0, 7822.0], [2665.0, 7614.5], [2657.0, 7844.0], [2649.0, 7636.0], [2785.0, 6954.0], [2761.0, 7805.0], [2801.0, 7139.0], [2793.0, 7452.0], [2689.0, 7691.0], [2697.0, 7180.5], [2713.0, 7041.5], [2729.0, 7387.0], [2777.0, 7491.0], [2769.0, 7508.0], [2937.0, 7282.0], [2849.0, 7339.5], [2817.0, 7097.0], [2841.0, 7044.0], [2833.0, 7049.0], [2825.0, 7371.0], [3057.0, 6972.0], [3065.0, 6963.0], [3009.0, 7087.0], [3017.0, 7173.0], [3025.0, 7053.0], [3049.0, 7003.0], [3041.0, 7122.5], [2969.0, 7157.0], [2961.0, 7171.0], [2953.0, 7185.0], [2945.0, 7415.0], [3001.0, 7207.0], [2993.0, 7121.0], [2985.0, 7140.0], [2977.0, 7140.0], [3033.0, 7238.0], [3193.0, 6817.0], [3137.0, 6876.0], [3145.0, 6958.0], [3185.0, 6589.0], [3169.0, 6359.0], [3073.0, 6543.0], [3297.0, 6547.0], [3313.0, 6520.0], [3265.0, 6712.0], [3305.0, 6531.0], [3225.0, 6791.0], [3257.0, 6415.0], [3249.0, 6737.0], [3241.0, 6759.0], [3233.0, 6776.0], [3281.0, 6088.0], [3273.0, 6622.0], [3393.0, 6334.0], [3441.0, 5920.0], [3401.0, 6047.0], [3409.0, 5888.0], [3449.0, 5619.0], [3433.0, 6051.0], [3425.0, 5507.0], [3369.0, 6444.0], [3417.0, 5787.0], [3569.0, 5711.0], [3521.0, 5289.0], [3529.0, 5550.5], [3537.0, 5320.0], [3561.0, 5735.0], [3553.0, 6126.5], [3481.0, 5775.5], [3457.0, 6296.0], [3513.0, 5796.0], [3505.0, 6226.0], [3497.0, 5732.0], [3489.0, 5745.0], [3545.0, 5303.0], [3697.0, 5641.0], [3705.0, 5372.0], [3681.0, 5928.0], [3593.0, 5622.5], [3585.0, 5188.0], [3673.0, 5592.0], [3825.0, 5327.0], [3817.0, 4829.0], [3777.0, 5221.5], [3793.0, 5455.5], [3801.0, 5316.0], [3833.0, 5338.0], [3809.0, 5301.0], [3737.0, 5294.5], [3713.0, 5006.0], [3761.0, 5362.0], [3753.0, 5382.0], [3745.0, 5952.0], [3921.0, 5075.0], [3905.0, 5084.0], [3929.0, 4578.0], [3961.0, 5401.0], [3937.0, 4941.0], [3857.0, 4656.0], [3841.0, 5213.0], [3993.0, 4313.0], [4081.0, 4491.0], [4049.0, 4665.0], [4089.0, 3959.0], [4057.0, 4062.0], [3985.0, 4496.333333333333], [3977.0, 4343.0], [3969.0, 4359.0], [4009.0, 5344.0], [4001.0, 4870.0], [4322.0, 3854.0], [4226.0, 4444.0], [4338.0, 4190.0], [4146.0, 4378.0], [4114.0, 4411.0], [4098.0, 4447.0], [4386.0, 3925.0], [4370.0, 4072.0], [4514.0, 3467.3333333333335], [4354.0, 3867.0], [4450.0, 3911.0], [4434.0, 3870.0], [4418.0, 3657.0], [4402.0, 3691.0], [4482.0, 3430.0], [4498.0, 3333.0], [4530.0, 3287.0], [4802.0, 1465.0], [4674.0, 2141.0], [4690.0, 2031.0], [4754.0, 1685.0], [4786.0, 1354.0], [4818.0, 1420.0], [4658.0, 2175.0], [4722.0, 1779.0], [4706.0, 1967.0], [4834.0, 1336.5], [4339.0, 3816.0], [4323.0, 4115.0], [4227.0, 4124.0], [4243.0, 4037.5], [4147.0, 4765.0], [4115.0, 3905.0], [4099.0, 3935.0], [4387.0, 3925.0], [4371.0, 3974.0], [4515.0, 3365.0], [4355.0, 3847.0], [4467.0, 3666.5], [4451.0, 3793.0], [4419.0, 3915.0], [4403.0, 3953.0], [4531.0, 3295.0], [4499.0, 3324.0], [4819.0, 1418.0], [4835.0, 1281.0], [4691.0, 2005.0], [4675.0, 2136.0], [4755.0, 1558.0], [4739.0, 1785.5], [4787.0, 1372.0], [4803.0, 1338.0], [4659.0, 2171.0], [4723.0, 1893.0], [4707.0, 1946.0], [4883.0, 1083.5], [1073.0, 11221.0], [1085.0, 11205.5], [1081.0, 11153.0], [1077.0, 10719.0], [1049.0, 11242.0], [1025.0, 11107.0], [1045.0, 11081.0], [1041.0, 11107.0], [1037.0, 11277.0], [1033.0, 11155.0], [1121.0, 11107.0], [1117.0, 11115.0], [1105.0, 11136.0], [1101.0, 11188.0], [1097.0, 11196.0], [1093.0, 11116.0], [1089.0, 11130.0], [1165.0, 10901.0], [1209.0, 10625.0], [1213.0, 10703.0], [1205.0, 10634.0], [1197.0, 10715.0], [1193.0, 10665.0], [1177.0, 10835.0], [1173.0, 10447.0], [1169.0, 10855.0], [1161.0, 10888.0], [1157.0, 10912.0], [1153.0, 10489.0], [1241.0, 10608.0], [1237.0, 10638.0], [1233.0, 10652.0], [1229.0, 10153.0], [1225.0, 10570.0], [1221.0, 10637.0], [1337.0, 10276.5], [1329.0, 10488.0], [1305.0, 10187.0], [1401.0, 9986.0], [1405.0, 10282.0], [1397.0, 9891.0], [1393.0, 10380.0], [1389.0, 10393.0], [1385.0, 10369.5], [1381.0, 10336.0], [1377.0, 10402.0], [1373.0, 10430.0], [1345.0, 9990.0], [1357.0, 10373.0], [1353.0, 10442.0], [1369.0, 10430.0], [1365.0, 10437.0], [1361.0, 10369.5], [1465.0, 10021.0], [1457.0, 10203.0], [1449.0, 10004.0], [1445.0, 9853.0], [1441.0, 9978.0], [1437.0, 10324.0], [1429.0, 10047.5], [1425.0, 9857.0], [1421.0, 10326.0], [1417.0, 10295.0], [1529.0, 9739.0], [1521.0, 9751.0], [1513.0, 9711.0], [1509.0, 10219.0], [1505.0, 9875.0], [1501.0, 9776.0], [1497.0, 10242.0], [1489.0, 9379.0], [1485.0, 10259.0], [1473.0, 10275.0], [1561.0, 9658.0], [1557.0, 9615.0], [1553.0, 10128.0], [1549.0, 9688.0], [1545.0, 9888.0], [1541.0, 10146.0], [1537.0, 10158.0], [1657.0, 9417.0], [1653.0, 9369.0], [1609.0, 9971.0], [1605.0, 9484.0], [1645.0, 9885.0], [1641.0, 9440.0], [1637.0, 9401.0], [1633.0, 9267.0], [1629.0, 9930.0], [1625.0, 9498.0], [1621.0, 9735.5], [1617.0, 9965.0], [1721.0, 9385.0], [1713.0, 9309.0], [1673.0, 9389.0], [1669.0, 9840.666666666666], [1665.0, 9343.0], [1709.0, 9415.0], [1705.0, 9589.0], [1701.0, 9773.0], [1697.0, 9326.0], [1693.0, 9784.0], [1689.0, 9352.0], [1685.0, 9804.0], [1681.0, 9585.5], [1781.0, 8766.0], [1785.0, 9177.0], [1777.0, 9207.0], [1773.0, 8791.0], [1757.0, 9208.0], [1753.0, 9166.0], [1749.0, 9209.0], [1745.0, 9178.5], [1741.0, 9189.0], [1853.0, 9509.0], [1849.0, 9185.34375], [1913.0, 9010.0], [1909.0, 8921.0], [1869.0, 9161.666666666666], [1865.0, 9248.5], [1861.0, 9417.6], [1901.0, 8517.0], [1897.0, 9122.0], [1893.0, 8941.0], [1889.0, 8962.0], [1885.0, 8979.0], [1881.0, 8973.0], [1877.0, 9046.0], [1873.0, 9055.0], [1977.0, 8839.0], [1969.0, 8844.0], [1933.0, 8473.0], [1929.0, 8889.0], [1925.0, 8888.5], [1921.0, 8919.0], [1965.0, 8441.0], [1961.0, 8438.0], [1957.0, 8769.666666666666], [1953.0, 8953.0], [1949.0, 8858.5], [1945.0, 8955.5], [1941.0, 8860.0], [1937.0, 8924.0], [1993.0, 8893.5], [2037.0, 8781.0], [2045.0, 8774.333333333334], [2033.0, 8783.0], [2029.0, 8880.0], [2017.0, 8446.0], [2005.0, 8810.0], [2001.0, 8818.0], [1989.0, 8925.0], [1985.0, 8845.0], [2114.0, 8706.0], [2106.0, 8349.0], [2098.0, 8789.0], [2082.0, 8386.0], [2066.0, 8741.0], [2058.0, 8753.0], [2050.0, 8754.0], [2282.0, 7895.0], [2274.0, 8601.0], [2258.0, 8221.5], [2234.0, 7985.0], [2226.0, 8520.0], [2218.0, 8515.0], [2210.0, 8570.0], [2202.0, 8649.0], [2194.0, 8599.0], [2418.0, 8007.0], [2426.0, 8002.0], [2402.0, 7520.0], [2330.0, 7603.0], [2322.0, 8125.0], [2314.0, 7582.0], [2306.0, 7612.0], [2394.0, 8117.0], [2386.0, 8011.0], [2378.0, 7518.0], [2370.0, 7892.333333333333], [2362.0, 8145.0], [2354.0, 7988.0], [2346.0, 7993.0], [2338.0, 8101.0], [2530.0, 7810.0], [2538.0, 7795.0], [2514.0, 7856.0], [2498.0, 7938.0], [2434.0, 7418.0], [2442.0, 7571.333333333333], [2450.0, 7968.0], [2490.0, 7436.0], [2482.0, 7879.0], [2474.0, 7449.0], [2466.0, 7715.0], [2522.0, 7828.0], [2506.0, 7929.0], [2682.0, 7902.0], [2626.0, 7169.0], [2658.0, 7739.0], [2650.0, 7631.0], [2642.0, 7776.5], [2802.0, 7447.0], [2754.0, 7677.0], [2770.0, 7506.0], [2810.0, 7163.0], [2794.0, 7635.0], [2786.0, 6954.0], [2690.0, 7104.0], [2714.0, 7043.0], [2746.0, 7478.0], [2738.0, 7692.0], [2722.0, 7765.0], [2938.0, 7284.0], [2842.0, 7040.0], [2834.0, 7038.0], [2826.0, 7372.0], [3042.0, 7120.0], [3066.0, 6966.0], [3010.0, 7205.0], [3018.0, 7070.0], [3050.0, 7090.0], [2946.0, 7206.0], [2954.0, 7172.0], [2962.0, 7163.0], [2970.0, 7285.0], [2994.0, 7248.0], [2978.0, 7138.0], [3034.0, 7054.0], [3026.0, 7047.0], [3138.0, 6392.0], [3186.0, 6815.0], [3154.0, 6729.5], [3194.0, 6915.0], [3178.0, 6937.0], [3170.0, 6841.0], [3074.0, 6550.0], [3162.0, 6849.0], [3306.0, 6111.0], [3282.0, 6591.0], [3314.0, 6510.0], [3274.0, 6622.0], [3298.0, 6545.0], [3226.0, 6276.0], [3202.0, 6819.0], [3250.0, 6237.0], [3242.0, 6257.0], [3234.0, 6269.0], [3290.0, 6415.0], [3442.0, 5425.0], [3450.0, 5932.0], [3434.0, 5927.0], [3418.0, 6363.0], [3402.0, 6320.0], [3370.0, 6453.0], [3362.0, 6187.595744680853], [3562.0, 6127.0], [3578.0, 5448.0], [3522.0, 6184.0], [3530.0, 6165.0], [3570.0, 5714.0], [3466.0, 6117.0], [3458.0, 5790.0], [3514.0, 6202.0], [3506.0, 5810.0], [3498.0, 6242.0], [3490.0, 6253.0], [3538.0, 5654.0], [3698.0, 5380.0], [3706.0, 5073.0], [3682.0, 5126.0], [3594.0, 5687.0], [3586.0, 6073.0], [3826.0, 5362.0], [3786.0, 5069.75], [3778.0, 5466.0], [3794.0, 5846.0], [3834.0, 5230.0], [3818.0, 5790.0], [3810.0, 5843.0], [3738.0, 5512.0], [3730.0, 5298.25], [3722.0, 5167.0], [3770.0, 5355.333333333333], [3754.0, 5377.0], [3746.0, 5518.0], [3954.0, 4600.666666666667], [3906.0, 5080.0], [3922.0, 5018.0], [3962.0, 4925.0], [3946.0, 4940.0], [3938.0, 4976.0], [3858.0, 4646.0], [3850.0, 5307.333333333333], [3842.0, 5212.0], [4090.0, 4468.0], [4042.0, 4794.413793103448], [4050.0, 5055.0], [4058.0, 4983.0], [4082.0, 4518.0], [3970.0, 4408.0], [3978.0, 4395.0], [3986.0, 4324.0], [4002.0, 4361.0], [4324.0, 3846.0], [4116.0, 4438.0], [4340.0, 4066.0], [4100.0, 4473.0], [4132.0, 4735.333333333333], [4148.0, 4357.0], [4228.0, 4122.0], [4468.0, 3670.0], [4372.0, 3800.0], [4452.0, 3788.0], [4436.0, 3961.5], [4420.0, 3911.0], [4404.0, 3973.0], [4484.0, 3554.0], [4500.0, 3571.0], [4516.0, 3264.0], [4804.0, 1459.0], [4676.0, 2080.0], [4692.0, 1995.0], [4772.0, 1516.0], [4756.0, 1554.0], [4740.0, 1773.0], [4788.0, 1350.0], [4724.0, 1894.0], [4708.0, 1966.0], [4836.0, 1288.0], [4884.0, 1090.0], [4117.0, 3902.0], [4341.0, 4065.0], [4101.0, 4992.0], [4133.0, 3898.0], [4149.0, 4871.0], [4229.0, 4127.0], [4373.0, 3792.0], [4389.0, 4047.5], [4357.0, 4014.5], [4469.0, 3522.0], [4453.0, 3744.0], [4437.0, 3860.0], [4421.0, 3811.0], [4405.0, 3851.0], [4517.0, 3262.0], [4501.0, 3313.0], [4485.0, 3413.0], [4821.0, 1364.0], [4693.0, 2018.0], [4677.0, 2067.0], [4773.0, 1525.5], [4757.0, 1579.0], [4741.0, 1758.0], [4789.0, 1344.0], [4805.0, 1458.0], [4661.0, 2179.0], [4725.0, 1784.0], [4709.0, 2048.0], [4837.0, 1388.0], [4885.0, 1071.0], [2091.0, 8518.0], [2051.0, 8840.0], [2243.0, 8044.5], [2283.0, 7843.0], [2267.0, 8206.0], [2259.0, 8445.0], [2251.0, 8273.5], [2235.0, 8494.0], [2227.0, 8505.0], [2203.0, 8576.0], [2195.0, 8089.0], [2187.0, 8612.095890410958], [2331.0, 8120.0], [2427.0, 7418.0], [2403.0, 8021.0], [2387.0, 8012.0], [2371.0, 8022.0], [2347.0, 7542.0], [2323.0, 7561.0], [2315.0, 7581.0], [2307.0, 8115.0], [2459.0, 7693.0], [2531.0, 7890.0], [2451.0, 7397.0], [2443.0, 7396.0], [2435.0, 7484.0], [2523.0, 7902.0], [2515.0, 7835.0], [2483.0, 7955.0], [2467.0, 7368.0], [2627.0, 7667.0], [2683.0, 7591.0], [2635.0, 7726.0], [2643.0, 7645.0], [2675.0, 7754.5], [2659.0, 7623.0], [2651.0, 7630.0], [2787.0, 6949.0], [2811.0, 7411.0], [2755.0, 7520.0], [2763.0, 7455.0], [2803.0, 7634.0], [2691.0, 7075.0], [2699.0, 7171.0], [2707.0, 7594.333333333333], [2715.0, 7774.0], [2747.0, 7630.0], [2739.0, 7045.0], [2731.0, 7646.0], [2779.0, 6974.0], [2771.0, 7500.0], [2843.0, 7630.0], [2835.0, 7360.0], [3043.0, 6618.0], [3067.0, 6568.0], [3011.0, 7080.0], [3051.0, 7096.0], [2947.0, 6825.0], [2955.0, 6804.0], [2971.0, 7151.0], [3003.0, 7162.5], [2987.0, 6927.5], [2979.0, 7158.0], [3035.0, 7033.0], [3027.0, 7241.0], [3019.0, 7072.0], [3195.0, 6809.0], [3179.0, 6761.0], [3171.0, 6355.0], [3075.0, 7036.0], [3155.0, 6613.0], [3139.0, 6965.0], [3299.0, 6542.0], [3307.0, 6531.0], [3283.0, 6588.0], [3315.0, 6502.0], [3267.0, 6712.0], [3211.0, 6837.666666666667], [3203.0, 6814.0], [3219.0, 6740.666666666667], [3227.0, 6274.0], [3259.0, 6731.0], [3243.0, 6249.0], [3291.0, 6560.0], [3275.0, 6689.0], [3395.0, 5930.0], [3411.0, 6094.0], [3451.0, 6305.0], [3403.0, 6400.0], [3443.0, 5837.0], [3387.0, 6402.818181818182], [3371.0, 6367.0], [3363.0, 6391.0], [3419.0, 5871.0], [3571.0, 6096.0], [3579.0, 5708.0], [3523.0, 6181.0], [3531.0, 6165.0], [3539.0, 5249.0], [3563.0, 6117.0], [3555.0, 5932.5], [3483.0, 5759.0], [3467.0, 6284.0], [3459.0, 6299.0], [3515.0, 5327.0], [3507.0, 6211.0], [3499.0, 6239.0], [3491.0, 5741.0], [3547.0, 5700.5], [3707.0, 5372.0], [3699.0, 5381.0], [3675.0, 5297.5], [3595.0, 5169.0], [3587.0, 5573.0], [3819.0, 5412.0], [3787.0, 4824.0], [3779.0, 4961.0], [3827.0, 5757.0], [3811.0, 5372.0], [3739.0, 5011.0], [3731.0, 5410.0], [3723.0, 4985.0], [3715.0, 5350.0], [3771.0, 5346.0], [3763.0, 5356.5], [3755.0, 5504.0], [3747.0, 5392.0], [3947.0, 4412.0], [3963.0, 4885.0], [3955.0, 4905.0], [3923.0, 5071.0], [3939.0, 4929.0], [3859.0, 4651.0], [3851.0, 4686.0], [3843.0, 4702.0], [4083.0, 4475.0], [4043.0, 4622.0], [4051.0, 4625.0], [4059.0, 4536.0], [4091.0, 3955.0], [4075.0, 4509.0], [4067.0, 4732.333333333333], [3995.0, 4867.0], [3987.0, 4382.0], [3979.0, 4339.0], [3971.0, 4405.0], [4011.0, 5242.0], [4003.0, 4889.0], [4342.0, 3898.0], [4150.0, 4366.0], [4134.0, 3894.0], [4102.0, 4463.0], [4214.0, 4208.811320754716], [4374.0, 3961.0], [4390.0, 3748.0], [4358.0, 4010.0], [4470.0, 3493.0], [4454.0, 3767.0], [4438.0, 3769.0], [4422.0, 3642.0], [4406.0, 3684.0], [4502.0, 3408.0], [4822.0, 1423.0], [4742.0, 1761.0], [4678.0, 2076.0], [4694.0, 2113.0], [4758.0, 1678.0], [4790.0, 1477.0], [4806.0, 1440.0], [4662.0, 2166.0], [4726.0, 1783.0], [4710.0, 1915.0], [4838.0, 1387.0], [4886.0, 1083.0], [4151.0, 3838.0], [4343.0, 3892.0], [4231.0, 4126.5], [4327.0, 4145.0], [4135.0, 4393.0], [4119.0, 4442.0], [4103.0, 4876.0], [4215.0, 4518.0], [4359.0, 3823.0], [4391.0, 1953.6666666666665], [4471.0, 3488.0], [4455.0, 3849.0], [4439.0, 4013.0], [4423.0, 3638.0], [4407.0, 3679.0], [4519.0, 3433.0], [4503.0, 3305.0], [4823.0, 1296.0], [4695.0, 1559.5], [4775.0, 1428.5], [4759.0, 1558.0], [4743.0, 1658.0], [4791.0, 1345.0], [4807.0, 1326.0], [4663.0, 2183.0], [4727.0, 1762.0], [4711.0, 1921.0], [537.0, 11555.0], [541.0, 11859.0], [543.0, 11829.0], [539.0, 11826.0], [533.0, 11900.0], [529.0, 11847.0], [525.0, 11449.0], [521.0, 11890.0], [519.0, 11799.0], [513.0, 11489.0], [573.0, 11719.0], [575.0, 11406.0], [571.0, 11532.0], [551.0, 11826.0], [547.0, 11873.0], [545.0, 11453.5], [567.0, 11399.0], [565.0, 11806.0], [563.0, 11598.5], [561.0, 11627.5], [559.0, 11846.0], [555.0, 11819.5], [553.0, 11814.0], [603.0, 124.5], [601.0, 5736.5], [607.0, 5756.0], [593.0, 5915.0], [595.0, 7899.0], [597.0, 7927.333333333333], [605.0, 5736.0], [583.0, 5967.0], [581.0, 8696.75], [579.0, 156.0], [577.0, 141.5], [591.0, 6019.0], [589.0, 7734.333333333333], [587.0, 2484.0], [599.0, 5989.0], [637.0, 11694.0], [609.0, 7845.0], [615.0, 11739.0], [613.0, 11857.0], [639.0, 11692.0], [635.0, 11255.0], [633.0, 11697.0], [631.0, 11634.0], [627.0, 11658.0], [625.0, 11809.0], [623.0, 11820.0], [621.0, 11724.0], [619.0, 11719.0], [617.0, 11739.0], [647.0, 11228.0], [671.0, 11612.0], [669.0, 11194.0], [661.0, 11747.0], [659.0, 11591.0], [655.0, 11643.0], [653.0, 11645.0], [651.0, 11660.0], [649.0, 11234.0], [645.0, 11241.0], [641.0, 11246.0], [701.0, 11661.0], [703.0, 11508.0], [699.0, 11552.0], [697.0, 11507.5], [695.0, 11575.0], [693.0, 11567.0], [691.0, 11565.0], [689.0, 11184.0], [687.0, 11144.0], [675.0, 11616.0], [679.0, 11538.0], [677.0, 11611.0], [685.0, 11156.0], [681.0, 11597.0], [733.0, 11449.0], [735.0, 11112.0], [731.0, 11460.0], [729.0, 11452.0], [727.0, 11450.0], [725.0, 11469.0], [723.0, 11566.0], [721.0, 11325.0], [719.0, 11458.0], [711.0, 11541.0], [707.0, 11174.0], [717.0, 11124.0], [715.0, 11340.5], [713.0, 11526.0], [739.0, 11485.0], [737.0, 11425.0], [863.0, 11233.0], [861.0, 11510.0], [857.0, 11508.0], [855.0, 11304.0], [853.0, 11442.0], [849.0, 11452.0], [845.0, 11439.0], [843.0, 11364.057692307686], [871.0, 11465.0], [893.0, 11484.0], [895.0, 11349.0], [891.0, 10954.0], [887.0, 11066.666666666666], [881.0, 11204.0], [879.0, 10962.0], [875.0, 11284.0], [867.0, 11505.0], [865.0, 11468.5], [927.0, 11345.25], [923.0, 11410.0], [917.0, 11364.0], [913.0, 11421.0], [911.0, 11410.0], [909.0, 10924.0], [907.0, 11366.0], [901.0, 11418.0], [899.0, 11474.0], [955.0, 11309.0], [959.0, 11357.0], [953.0, 11334.333333333334], [935.0, 11225.0], [931.0, 11070.0], [929.0, 11411.0], [949.0, 11290.0], [947.0, 11206.0], [945.0, 11217.5], [943.0, 11326.0], [941.0, 11323.0], [937.0, 11210.0], [989.0, 11159.0], [991.0, 11160.0], [985.0, 11345.0], [967.0, 11347.0], [965.0, 11345.0], [963.0, 11111.0], [961.0, 11347.0], [983.0, 11162.0], [979.0, 11337.0], [977.0, 11315.5], [975.0, 10924.5], [973.0, 11300.0], [971.0, 11108.0], [1017.0, 11125.0], [1021.0, 11202.5], [1023.0, 11233.0], [1019.0, 11289.0], [1015.0, 11128.0], [1009.0, 11276.5], [1007.0, 11248.0], [995.0, 11148.0], [993.0, 11318.5], [999.0, 10841.0], [997.0, 11316.0], [1005.0, 11234.0], [1003.0, 11146.0], [1001.0, 11263.0], [1082.0, 11203.0], [1086.0, 10786.0], [1078.0, 11239.0], [1074.0, 11218.0], [1066.0, 11198.0], [1062.0, 11236.0], [1058.0, 11230.0], [1054.0, 11253.0], [1030.0, 11190.5], [1038.0, 11256.0], [1034.0, 11311.0], [1102.0, 11146.0], [1150.0, 10974.5], [1146.0, 10947.136363636362], [1122.0, 11091.0], [1118.0, 11105.0], [1114.0, 10891.5], [1110.0, 11149.0], [1106.0, 11142.0], [1094.0, 11110.0], [1090.0, 11183.0], [1206.0, 10645.0], [1210.0, 10683.0], [1202.0, 10737.0], [1198.0, 10739.0], [1194.0, 10725.0], [1190.0, 10615.333333333334], [1174.0, 10788.0], [1154.0, 10483.0], [1166.0, 10927.0], [1162.0, 10436.0], [1158.0, 10453.0], [1238.0, 10633.0], [1234.0, 10653.0], [1230.0, 10557.0], [1226.0, 10571.0], [1222.0, 10570.0], [1218.0, 10473.0], [1342.0, 10435.0], [1338.0, 10003.0], [1334.0, 10303.0], [1330.0, 10173.0], [1326.0, 10255.0], [1322.0, 10526.0], [1398.0, 10301.0], [1406.0, 10042.0], [1394.0, 10374.0], [1358.0, 10367.0], [1354.0, 10366.0], [1350.0, 10385.5], [1346.0, 10069.0], [1390.0, 10379.0], [1386.0, 10393.0], [1378.0, 10319.0], [1374.0, 10352.0], [1366.0, 10360.0], [1362.0, 10095.0], [1466.0, 9767.0], [1470.0, 10278.0], [1462.0, 10055.0], [1458.0, 10282.0], [1454.0, 10026.0], [1450.0, 10345.0], [1446.0, 10317.0], [1442.0, 10223.0], [1422.0, 10254.0], [1418.0, 10368.0], [1410.0, 10265.5], [1530.0, 9742.0], [1534.0, 9670.5], [1526.0, 10192.0], [1486.0, 10253.0], [1482.0, 10260.0], [1474.0, 9758.0], [1518.0, 10013.0], [1514.0, 10213.0], [1510.0, 9778.0], [1506.0, 10223.0], [1502.0, 9780.0], [1498.0, 10227.0], [1494.0, 10010.5], [1562.0, 10106.0], [1558.0, 9603.0], [1554.0, 10124.0], [1550.0, 9623.0], [1546.0, 9780.0], [1542.0, 10145.0], [1538.0, 9650.0], [1614.0, 9814.333333333334], [1654.0, 9864.0], [1650.0, 9879.5], [1646.0, 9886.0], [1642.0, 9451.0], [1638.0, 9035.0], [1630.0, 9466.0], [1626.0, 9581.0], [1610.0, 9973.0], [1602.0, 9786.0], [1718.0, 9576.5], [1726.0, 9480.5], [1714.0, 9753.0], [1678.0, 9339.0], [1666.0, 9844.0], [1706.0, 9309.0], [1702.0, 9763.0], [1698.0, 9778.0], [1690.0, 9437.0], [1686.0, 9804.0], [1682.0, 9357.0], [1762.0, 9211.666666666666], [1782.0, 8766.0], [1742.0, 9188.0], [1738.0, 9353.0], [1734.0, 9274.0], [1730.0, 9473.5], [1774.0, 8787.0], [1770.0, 9188.5], [1766.0, 9517.0], [1758.0, 9230.0], [1754.0, 9170.0], [1750.0, 9259.0], [1746.0, 9684.0], [1854.0, 9072.0], [1850.0, 9034.0], [1870.0, 9477.0], [1914.0, 9002.0], [1918.0, 8936.0], [1906.0, 8793.0], [1898.0, 8934.0], [1894.0, 9026.0], [1886.0, 9114.0], [1878.0, 8972.0], [1874.0, 9469.0], [1866.0, 8638.0], [1862.0, 9006.0], [1934.0, 8876.0], [1978.0, 8430.0], [1970.0, 8857.0], [1966.0, 8844.0], [1958.0, 8845.0], [1954.0, 8867.0], [1950.0, 8956.0], [1946.0, 8862.0], [1930.0, 8889.0], [1926.0, 8483.0], [1922.0, 8916.0], [1994.0, 8842.0], [2038.0, 8796.0], [2042.0, 8822.5], [2034.0, 8785.0], [2026.0, 8628.5], [2022.0, 8892.5], [2014.0, 8699.666666666666], [2010.0, 8854.0], [2002.0, 8821.0], [1990.0, 8916.0], [1986.0, 8422.5], [2108.0, 8711.5], [2092.0, 8708.0], [2084.0, 8504.0], [2076.0, 8601.75], [2068.0, 8859.5], [2060.0, 8745.0], [2052.0, 8841.0], [2284.0, 8289.0], [2276.0, 8437.0], [2204.0, 8562.0], [2196.0, 8083.0], [2188.0, 8106.0], [2268.0, 8427.0], [2260.0, 7943.0], [2252.0, 8491.0], [2244.0, 8541.0], [2236.0, 8002.0], [2228.0, 8504.0], [2220.0, 8267.5], [2212.0, 8545.5], [2428.0, 7990.0], [2380.0, 7966.5], [2412.0, 7822.0], [2332.0, 8065.0], [2324.0, 8123.0], [2316.0, 8088.0], [2308.0, 8112.0], [2396.0, 7505.0], [2388.0, 7503.0], [2372.0, 7520.0], [2364.0, 7778.0], [2356.0, 7729.0], [2348.0, 7491.0], [2340.0, 7816.5], [2540.0, 7871.5], [2548.0, 7828.666666666667], [2492.0, 7619.5], [2444.0, 7476.0], [2436.0, 7998.0], [2452.0, 7970.0], [2476.0, 8000.5], [2468.0, 7361.0], [2524.0, 7825.0], [2516.0, 7832.0], [2500.0, 7938.0], [2628.0, 7802.0], [2684.0, 7718.0], [2636.0, 7155.0], [2668.0, 7443.0], [2660.0, 7108.0], [2620.0, 7621.380281690139], [2652.0, 7631.0], [2644.0, 7135.0], [2788.0, 7446.0], [2812.0, 6907.0], [2748.0, 7040.0], [2700.0, 7776.0], [2716.0, 7250.0], [2708.0, 7669.0], [2724.0, 7530.25], [2780.0, 6978.0], [2772.0, 6991.0], [2764.0, 7514.0], [2852.0, 7504.666666666667], [2844.0, 7452.0], [2836.0, 7546.0], [2828.0, 7367.5], [3060.0, 6974.0], [3068.0, 7053.0], [3012.0, 7093.0], [3020.0, 7070.0], [3028.0, 7158.0], [3052.0, 6574.0], [3044.0, 7014.0], [2964.0, 7169.0], [2956.0, 7189.0], [2948.0, 7220.0], [3004.0, 7112.0], [2996.0, 7165.5], [2988.0, 7122.0], [3036.0, 7132.0], [3196.0, 6811.0], [3140.0, 6393.0], [3188.0, 6878.5], [3180.0, 6584.0], [3172.0, 6935.0], [3076.0, 7052.0], [3164.0, 6494.0], [3156.0, 6603.0], [3300.0, 6539.0], [3308.0, 6527.0], [3268.0, 6718.0], [3276.0, 6688.0], [3260.0, 6719.0], [3252.0, 6488.5], [3244.0, 6437.0], [3236.0, 6312.0], [3292.0, 6057.0], [3284.0, 6580.0], [3452.0, 6318.0], [3444.0, 6337.0], [3396.0, 6054.0], [3428.0, 5967.333333333333], [3388.0, 6419.0], [3372.0, 6437.0], [3420.0, 5782.0], [3412.0, 6377.0], [3556.0, 5621.0], [3572.0, 5298.0], [3532.0, 6165.0], [3524.0, 6181.0], [3564.0, 6112.0], [3516.0, 6196.0], [3468.0, 5949.0], [3476.0, 5850.25], [3508.0, 6209.0], [3500.0, 6227.0], [3492.0, 6240.0], [3548.0, 5300.0], [3540.0, 6150.0], [3708.0, 5365.0], [3700.0, 5540.0], [3668.0, 5626.194029850747], [3692.0, 5540.5], [3684.0, 5670.5], [3596.0, 5182.0], [3588.0, 6070.0], [3676.0, 5672.0], [3828.0, 5352.0], [3812.0, 5297.0], [3836.0, 5037.0], [3780.0, 5887.0], [3788.0, 4887.0], [3796.0, 5329.5], [3804.0, 5315.333333333333], [3732.0, 5413.0], [3772.0, 4837.0], [3756.0, 4988.0], [3748.0, 5390.0], [3956.0, 4951.0], [3964.0, 4424.0], [3908.0, 5123.0], [3916.0, 4987.0], [3924.0, 5072.0], [3932.0, 5427.0], [3948.0, 4965.0], [3940.0, 4935.0], [3852.0, 5175.0], [3844.0, 4813.0], [3900.0, 4955.78048780488], [4092.0, 3986.0], [4044.0, 5083.0], [4052.0, 4566.0], [4060.0, 4052.0], [4084.0, 4480.0], [4012.0, 5324.0], [3972.0, 4932.0], [3980.0, 4386.0], [3988.0, 4319.0], [4004.0, 5352.0], [4328.0, 3848.0], [4120.0, 3928.0], [4344.0, 4162.0], [4104.0, 4986.0], [4136.0, 4394.0], [4152.0, 4359.0], [4216.0, 4496.0], [4408.0, 3852.0], [4392.0, 2419.0], [4376.0, 3870.0], [4472.0, 3478.0], [4440.0, 3851.0], [4424.0, 3631.0], [4600.0, 3211.6818181818176], [4488.0, 3408.3333333333335], [4504.0, 3570.0], [4520.0, 3349.0], [4664.0, 2160.0], [4840.0, 1385.0], [4696.0, 1977.0], [4776.0, 1427.0], [4760.0, 1558.0], [4792.0, 1371.0], [4824.0, 1312.0], [4648.0, 2473.6999999999994], [4728.0, 1727.0], [4712.0, 1893.0], [4888.0, 1082.5], [4329.0, 4204.0], [4345.0, 3880.0], [4105.0, 4427.0], [4121.0, 4427.0], [4137.0, 4400.0], [4153.0, 4333.0], [4217.0, 4619.0], [4233.0, 4078.5], [4377.0, 3780.0], [4361.0, 3824.5], [4393.0, 4022.0], [4473.0, 3473.0], [4457.0, 3575.0], [4441.0, 3993.0], [4425.0, 3790.0], [4585.0, 3268.0], [4409.0, 3676.0], [4521.0, 3381.0], [4505.0, 3395.0], [4489.0, 3491.0], [4745.0, 1753.5], [4761.0, 1566.0], [4697.0, 1975.0], [4777.0, 1433.0], [4793.0, 1344.0], [4825.0, 1284.0], [4665.0, 2149.0], [4729.0, 1724.0], [4713.0, 1867.0], [4873.0, 1307.3333333333335], [2093.0, 8796.0], [2085.0, 8300.0], [2077.0, 8738.0], [2285.0, 8259.0], [2301.0, 8127.076923076924], [2277.0, 7949.0], [2197.0, 8591.0], [2189.0, 8606.0], [2269.0, 8483.0], [2261.0, 7997.0], [2253.0, 8636.0], [2245.0, 8484.0], [2237.0, 8046.0], [2229.0, 7986.0], [2221.0, 8515.0], [2213.0, 8610.0], [2421.0, 7668.0], [2429.0, 7423.0], [2381.0, 7959.0], [2389.0, 7507.0], [2405.0, 8063.5], [2317.0, 8091.0], [2397.0, 7770.0], [2365.0, 8030.0], [2357.0, 7531.0], [2349.0, 8046.0], [2341.0, 8096.0], [2453.0, 7464.0], [2549.0, 7913.0], [2509.0, 7505.666666666667], [2533.0, 7822.0], [2445.0, 7397.0], [2493.0, 7363.0], [2485.0, 7623.0], [2469.0, 7446.0], [2525.0, 7818.0], [2517.0, 7830.0], [2637.0, 7663.0], [2677.0, 7661.0], [2645.0, 7643.0], [2669.0, 7606.0], [2661.0, 7614.0], [2621.0, 7167.0], [2653.0, 7628.0], [2789.0, 7639.0], [2805.0, 7040.5], [2813.0, 7400.0], [2757.0, 7666.0], [2765.0, 7511.0], [2741.0, 7540.0], [2693.0, 7690.0], [2709.0, 7047.0], [2701.0, 7558.0], [2717.0, 7763.0], [2733.0, 7655.0], [2725.0, 7658.0], [2781.0, 6973.0], [2773.0, 7497.0], [2845.0, 7433.0], [2941.0, 7249.0], [2933.0, 7285.530864197532], [2821.0, 7164.5], [2829.0, 6864.0], [3045.0, 7007.0], [3069.0, 6956.0], [3013.0, 7093.0], [3021.0, 7173.0], [3029.0, 7045.0], [3061.0, 6966.0], [2973.0, 7162.0], [2957.0, 6795.0], [2949.0, 6306.0], [3005.0, 7090.0], [2997.0, 7111.0], [2989.0, 7236.0], [3037.0, 7027.0], [3141.0, 6873.0], [3197.0, 6828.0], [3149.0, 6744.0], [3189.0, 6910.0], [3181.0, 6930.0], [3173.0, 6643.0], [3165.0, 6450.0], [3157.0, 6598.0], [3205.0, 6137.0], [3309.0, 6530.0], [3277.0, 6609.0], [3261.0, 6220.0], [3213.0, 6588.5], [3229.0, 6575.5], [3253.0, 6740.0], [3245.0, 6257.0], [3237.0, 6262.0], [3293.0, 6630.0], [3285.0, 6576.0], [3269.0, 6787.0], [3445.0, 5921.0], [3453.0, 6308.0], [3405.0, 6141.0], [3413.0, 6379.0], [3437.0, 5902.666666666667], [3429.0, 5775.0], [3389.0, 6415.0], [3373.0, 5631.0], [3365.0, 5822.0], [3421.0, 6008.0], [3573.0, 5292.0], [3557.0, 5737.0], [3581.0, 5486.5], [3525.0, 5276.0], [3533.0, 6161.0], [3541.0, 5313.0], [3565.0, 5308.0], [3485.0, 6015.5], [3477.0, 6282.0], [3461.0, 6055.0], [3517.0, 5787.0], [3509.0, 5803.0], [3501.0, 5814.0], [3493.0, 5957.0], [3549.0, 6140.0], [3701.0, 5375.0], [3709.0, 5358.0], [3693.0, 5415.0], [3685.0, 5071.0], [3597.0, 5674.0], [3589.0, 6069.0], [3669.0, 5445.0], [3821.0, 5517.0], [3781.0, 5468.0], [3789.0, 4881.0], [3797.0, 5319.0], [3805.0, 5322.0], [3813.0, 5803.0], [3741.0, 5525.0], [3733.0, 5400.0], [3717.0, 5023.5], [3765.0, 5625.0], [3757.0, 5372.0], [3749.0, 5391.0], [3949.0, 4960.0], [3909.0, 5115.0], [3917.0, 5091.0], [3925.0, 5089.0], [3941.0, 4934.0], [3853.0, 4679.0], [3845.0, 4685.0], [3901.0, 4583.0], [4085.0, 4003.0], [4069.0, 4509.5], [4045.0, 4649.0], [4053.0, 4566.0], [4061.0, 4009.0], [4093.0, 4460.0], [4077.0, 4495.5], [3997.0, 4493.333333333333], [3989.0, 4878.0], [3981.0, 4391.0], [3973.0, 4856.0], [4013.0, 5314.0], [4330.0, 4270.0], [4154.0, 4337.0], [4138.0, 4411.0], [4106.0, 4454.0], [4218.0, 4491.0], [4234.0, 4026.0], [4378.0, 3953.0], [4362.0, 3823.0], [4394.0, 3738.0], [4474.0, 3467.0], [4458.0, 3660.0], [4442.0, 3827.0], [4426.0, 3889.0], [4490.0, 3488.0], [4506.0, 3397.0], [4522.0, 3333.0], [4666.0, 2131.0], [4698.0, 2096.0], [4682.0, 2096.25], [4778.0, 1425.0], [4762.0, 1531.0], [4810.0, 1364.3333333333333], [4730.0, 1722.0], [4714.0, 1882.0], [4874.0, 1243.0], [4155.0, 4329.0], [4235.0, 4021.0], [4347.0, 4019.0], [4331.0, 3923.0], [4139.0, 4389.0], [4123.0, 4165.0], [4107.0, 4459.0], [4219.0, 4475.0], [4395.0, 1347.875], [4587.0, 3266.5], [4379.0, 3770.0], [4363.0, 3818.0], [4459.0, 3817.0], [4443.0, 3732.0], [4427.0, 3783.0], [4507.0, 3442.0], [4491.0, 3396.0], [4827.0, 1344.0], [4683.0, 2046.0], [4779.0, 1422.0], [4763.0, 1528.0], [4747.0, 1745.5], [4795.0, 1408.5], [4811.0, 1445.0], [4651.0, 2316.414634146342], [4731.0, 1708.0], [4715.0, 1833.0], [4875.0, 1240.0], [1083.0, 11134.0], [1087.0, 11138.0], [1079.0, 11210.0], [1075.0, 11215.0], [1071.0, 11236.0], [1067.0, 11234.0], [1063.0, 11172.0], [1055.0, 11178.0], [1039.0, 11194.0], [1027.0, 11249.5], [1047.0, 11161.5], [1043.0, 11255.5], [1151.0, 10557.0], [1147.0, 10508.0], [1123.0, 11097.0], [1119.0, 11066.0], [1111.0, 11125.0], [1099.0, 11171.5], [1095.0, 11207.0], [1091.0, 11176.0], [1211.0, 10713.0], [1215.0, 10654.0], [1207.0, 10621.0], [1203.0, 10730.0], [1199.0, 10711.0], [1195.0, 10680.0], [1191.0, 10710.0], [1187.0, 10751.4], [1175.0, 10839.0], [1167.0, 10420.0], [1163.0, 10869.0], [1159.0, 10927.0], [1155.0, 10914.0], [1171.0, 10610.0], [1235.0, 10640.0], [1231.0, 10568.0], [1227.0, 10630.0], [1223.0, 10581.0], [1343.0, 10076.0], [1339.0, 10410.0], [1335.0, 10516.0], [1331.0, 10485.0], [1327.0, 10422.0], [1323.0, 10402.2], [1403.0, 10136.0], [1407.0, 10377.0], [1395.0, 10294.0], [1359.0, 10437.0], [1355.0, 10118.0], [1351.0, 10440.0], [1391.0, 10391.0], [1387.0, 9914.0], [1383.0, 9965.0], [1379.0, 10407.0], [1371.0, 10197.5], [1367.0, 10356.0], [1363.0, 10363.0], [1471.0, 10272.0], [1463.0, 10277.0], [1419.0, 10367.0], [1415.0, 10166.333333333334], [1411.0, 10377.0], [1455.0, 10339.0], [1451.0, 9849.0], [1447.0, 9851.0], [1443.0, 10355.0], [1439.0, 10130.0], [1435.0, 10184.0], [1431.0, 10123.5], [1427.0, 10241.0], [1531.0, 10173.0], [1535.0, 10154.0], [1527.0, 9683.0], [1523.0, 9759.0], [1519.0, 9832.0], [1515.0, 9757.0], [1511.0, 9770.0], [1507.0, 9766.0], [1503.0, 10231.0], [1479.0, 9820.333333333334], [1475.0, 10263.0], [1487.0, 10255.0], [1483.0, 9749.0], [1499.0, 10238.0], [1495.0, 10245.0], [1491.0, 10247.5], [1563.0, 9595.0], [1559.0, 9622.0], [1555.0, 9702.0], [1551.0, 9697.0], [1547.0, 10136.0], [1543.0, 9635.0], [1539.0, 10146.0], [1659.0, 9858.5], [1663.0, 9409.333333333334], [1655.0, 9865.0], [1651.0, 9870.0], [1647.0, 9881.0], [1643.0, 9890.0], [1635.0, 9683.0], [1631.0, 9470.0], [1611.0, 9455.0], [1607.0, 9475.0], [1603.0, 9997.0], [1619.0, 9955.5], [1723.0, 9258.5], [1727.0, 9728.0], [1719.0, 9296.0], [1679.0, 9821.0], [1675.0, 9822.5], [1671.0, 9837.0], [1711.0, 9179.5], [1707.0, 9310.0], [1703.0, 8914.0], [1699.0, 9775.0], [1691.0, 9789.0], [1683.0, 9802.0], [1779.0, 9410.5], [1771.0, 9223.0], [1767.0, 9152.0], [1763.0, 9236.0], [1759.0, 9237.0], [1731.0, 9213.0], [1755.0, 9165.0], [1751.0, 9243.0], [1747.0, 9682.0], [1739.0, 9264.0], [1735.0, 9263.0], [1855.0, 9077.0], [1851.0, 9033.0], [1915.0, 8529.0], [1919.0, 8494.0], [1911.0, 8967.0], [1907.0, 9078.0], [1903.0, 8933.0], [1899.0, 8932.0], [1895.0, 8525.0], [1891.0, 9041.0], [1887.0, 8956.0], [1871.0, 9052.0], [1863.0, 9059.0], [1883.0, 9032.0], [1879.0, 8963.0], [1935.0, 8972.0], [1975.0, 8706.333333333334], [1983.0, 8760.333333333334], [1971.0, 8835.0], [1951.0, 8966.0], [1947.0, 8954.0], [1943.0, 8920.0], [1939.0, 8721.0], [1931.0, 8976.0], [1927.0, 8890.0], [1923.0, 8892.0], [2047.0, 8841.0], [2035.0, 8800.0], [2031.0, 8803.0], [2027.0, 8960.0], [2023.0, 8891.0], [2019.0, 8900.0], [2011.0, 8804.0], [2007.0, 8929.0], [1999.0, 8778.75], [1995.0, 8915.0], [1991.0, 8415.0], [1987.0, 8474.0], [2102.0, 8391.0], [2094.0, 8290.0], [2086.0, 8733.0], [2070.0, 8562.5], [2062.0, 8750.0], [2054.0, 8654.0], [2286.0, 8243.0], [2302.0, 7622.0], [2278.0, 8398.0], [2206.0, 8553.0], [2198.0, 8565.0], [2190.0, 8105.0], [2270.0, 7977.0], [2262.0, 7988.0], [2254.0, 7963.0], [2246.0, 7984.0], [2238.0, 8504.0], [2230.0, 8498.0], [2222.0, 8014.0], [2214.0, 8545.0], [2430.0, 7987.0], [2414.0, 7718.5], [2398.0, 7960.0], [2382.0, 7506.0], [2374.0, 7964.0], [2350.0, 7500.0], [2342.0, 7501.0], [2334.0, 8110.5], [2326.0, 8123.5], [2462.0, 7459.333333333333], [2542.0, 7856.0], [2502.0, 7606.5], [2534.0, 7800.0], [2494.0, 7860.0], [2438.0, 7659.0], [2446.0, 7397.0], [2454.0, 7971.0], [2478.0, 7532.5], [2470.0, 7454.0], [2526.0, 7891.0], [2518.0, 7910.0], [2510.0, 7842.0], [2630.0, 7413.5], [2638.0, 7772.0], [2686.0, 7081.0], [2678.0, 7907.0], [2670.0, 7877.0], [2622.0, 7160.0], [2654.0, 7625.0], [2798.0, 7642.5], [2814.0, 7406.0], [2766.0, 7513.0], [2806.0, 6936.0], [2790.0, 7631.0], [2750.0, 7280.0], [2702.0, 7051.0], [2694.0, 6783.0], [2718.0, 7034.0], [2782.0, 6968.0], [2774.0, 7498.0], [2846.0, 7344.0], [2942.0, 6881.0], [2934.0, 7282.0], [2838.0, 7548.0], [2830.0, 7049.0], [2822.0, 7389.0], [3046.0, 7192.0], [3070.0, 7056.0], [3014.0, 7095.0], [3062.0, 6968.0], [3006.0, 7091.0], [2950.0, 6822.0], [2958.0, 7189.0], [2966.0, 7028.0], [2974.0, 7148.0], [2998.0, 7104.0], [2982.0, 7178.666666666667], [3038.0, 7036.0], [3022.0, 7176.0], [3198.0, 6317.0], [3142.0, 6863.0], [3190.0, 6912.0], [3182.0, 6933.0], [3174.0, 6933.0], [3078.0, 7037.5], [3166.0, 6356.0], [3302.0, 6578.5], [3310.0, 6601.0], [3270.0, 6705.0], [3278.0, 6603.0], [3222.0, 6661.0], [3254.0, 6741.0], [3246.0, 6744.0], [3238.0, 6265.0], [3294.0, 6550.0], [3286.0, 6574.0], [3454.0, 6302.0], [3422.0, 5503.0], [3406.0, 5800.0], [3390.0, 5911.0], [3374.0, 5643.0], [3366.0, 6384.0], [3574.0, 5795.0], [3582.0, 6088.0], [3526.0, 6176.0], [3534.0, 6164.0], [3566.0, 6101.0], [3558.0, 5735.0], [3486.0, 6261.0], [3478.0, 5769.0], [3470.0, 5778.5], [3462.0, 6289.0], [3510.0, 5799.0], [3494.0, 5758.0], [3550.0, 5636.0], [3702.0, 5582.0], [3710.0, 5522.0], [3694.0, 5393.0], [3686.0, 5117.0], [3614.0, 5177.0], [3598.0, 5180.0], [3590.0, 6073.0], [3830.0, 5025.5], [3782.0, 5465.0], [3790.0, 5331.0], [3798.0, 4861.0], [3822.0, 5253.0], [3814.0, 4838.0], [3742.0, 5448.0], [3726.0, 5364.0], [3718.0, 5340.0], [3774.0, 5227.0], [3758.0, 5364.0], [3750.0, 4996.0], [3910.0, 5062.0], [3958.0, 4696.0], [3918.0, 4587.0], [3926.0, 5065.0], [3950.0, 4959.0], [3942.0, 4922.0], [3902.0, 5087.0], [3846.0, 5329.0], [4086.0, 4469.0], [4094.0, 5019.0], [4046.0, 5046.0], [4054.0, 4560.0], [4062.0, 5086.0], [4070.0, 4641.0], [3974.0, 4345.0], [3982.0, 4387.0], [3990.0, 4319.0], [3998.0, 4865.0], [4006.0, 5242.0], [4348.0, 4052.0], [4220.0, 4603.0], [4108.0, 3947.0], [4124.0, 4417.0], [4156.0, 4432.0], [4236.0, 4024.0], [4364.0, 3818.0], [4524.0, 3339.0], [4396.0, 1636.25], [4380.0, 3944.0], [4476.0, 3722.5], [4460.0, 3551.0], [4444.0, 3813.0], [4428.0, 3791.0], [4492.0, 3392.0], [4508.0, 3381.0], [4812.0, 1320.0], [4684.0, 1518.0], [4700.0, 1998.5], [4780.0, 1225.5], [4764.0, 1528.0], [4748.0, 1739.0], [4796.0, 1352.0], [4668.0, 2131.5], [4652.0, 2196.0], [4732.0, 1734.0], [4716.0, 1832.0], [4860.0, 1354.6666666666665], [4876.0, 1235.0], [4333.0, 3878.5], [4349.0, 4169.0], [4221.0, 4598.0], [4109.0, 3942.0], [4125.0, 4419.0], [4141.0, 4143.0], [4157.0, 4417.0], [4173.0, 4272.0], [4237.0, 4522.0], [4365.0, 3815.0], [4381.0, 3946.0], [4477.0, 3459.0], [4461.0, 3811.0], [4445.0, 3959.0], [4429.0, 4053.0], [4413.0, 3841.25], [4397.0, 3978.0], [4525.0, 3323.0], [4509.0, 3370.0], [4493.0, 3378.0], [4813.0, 1326.0], [4829.0, 1402.0], [4685.0, 2028.0], [4701.0, 2084.0], [4765.0, 1520.0], [4749.0, 1727.0], [4781.0, 1405.0], [4797.0, 1354.0], [4653.0, 2225.0], [4669.0, 2134.0], [4733.0, 1704.0], [4717.0, 1820.0], [4877.0, 1233.0], [2111.0, 8441.333333333334], [2103.0, 8276.0], [2095.0, 8358.0], [2087.0, 8728.0], [2063.0, 8742.0], [2055.0, 8753.0], [2287.0, 8246.0], [2303.0, 7620.0], [2279.0, 8384.0], [2207.0, 8557.0], [2199.0, 8075.0], [2191.0, 8104.0], [2271.0, 8428.0], [2263.0, 8437.0], [2255.0, 7957.0], [2247.0, 8487.0], [2239.0, 7997.0], [2231.0, 8490.0], [2223.0, 8506.0], [2215.0, 8610.0], [2415.0, 7936.0], [2423.0, 7504.0], [2407.0, 8016.0], [2335.0, 7569.0], [2319.0, 7824.0], [2399.0, 7711.0], [2383.0, 8045.0], [2375.0, 7514.0], [2367.0, 7747.0], [2359.0, 7728.0], [2343.0, 7517.0], [2447.0, 7976.0], [2535.0, 7805.0], [2439.0, 7986.0], [2527.0, 7911.0], [2519.0, 7934.0], [2511.0, 7333.0], [2495.0, 7943.0], [2487.0, 7366.0], [2479.0, 7881.0], [2471.0, 7375.0], [2631.0, 7663.0], [2687.0, 7581.0], [2639.0, 7651.0], [2647.0, 7769.0], [2679.0, 7806.0], [2671.0, 7606.0], [2663.0, 7837.0], [2623.0, 7792.0], [2655.0, 7634.0], [2807.0, 6934.0], [2815.0, 7397.0], [2759.0, 7618.0], [2767.0, 7508.0], [2799.0, 7638.0], [2751.0, 7623.0], [2695.0, 7066.0], [2703.0, 7053.0], [2711.0, 7408.5], [2719.0, 7752.0], [2743.0, 7635.666666666667], [2735.0, 7444.0], [2727.0, 7695.5], [2783.0, 7656.0], [2775.0, 7489.0], [2943.0, 7234.0], [2847.0, 6829.0], [2831.0, 7360.0], [2823.0, 7385.0], [3055.0, 7084.0], [3023.0, 7064.0], [3007.0, 7092.0], [2951.0, 7202.0], [2959.0, 7166.0], [2975.0, 7278.0], [2991.0, 7186.5], [2983.0, 6754.0], [3039.0, 7018.0], [3015.0, 7175.0], [3199.0, 6302.0], [3183.0, 6581.0], [3175.0, 6922.0], [3151.0, 6470.0], [3223.0, 6289.0], [3303.0, 6538.0], [3263.0, 6716.5], [3231.0, 6630.5], [3255.0, 6741.0], [3239.0, 6347.0], [3295.0, 6557.0], [3287.0, 6653.0], [3279.0, 6597.0], [3455.0, 6306.0], [3407.0, 6380.0], [3447.0, 6132.0], [3439.0, 6342.0], [3391.0, 6340.0], [3367.0, 5604.0], [3423.0, 6360.0], [3415.0, 6377.5], [3559.0, 5624.0], [3583.0, 5701.0], [3527.0, 6184.0], [3543.0, 5729.5], [3567.0, 6106.0], [3487.0, 6259.0], [3479.0, 6263.0], [3463.0, 6288.0], [3519.0, 5997.5], [3511.0, 5807.0], [3503.0, 5778.5], [3495.0, 6235.0], [3551.0, 6141.0], [3711.0, 5515.0], [3695.0, 5900.0], [3679.0, 5705.333333333333], [3671.0, 5369.0], [3591.0, 6070.0], [3743.0, 5401.0], [3839.0, 5233.666666666667], [3791.0, 5423.0], [3799.0, 4861.0], [3823.0, 5247.0], [3735.0, 5405.0], [3719.0, 5335.0], [3775.0, 5354.0], [3767.0, 5620.5], [3759.0, 5497.0], [3751.0, 5512.0], [3959.0, 4437.0], [3911.0, 5062.0], [3927.0, 5062.0], [3935.0, 5208.0], [3951.0, 4908.0], [3943.0, 4931.0], [3855.0, 4915.5], [3847.0, 5305.0], [3903.0, 5078.0], [4087.0, 4466.0], [4095.0, 5003.0], [4047.0, 4647.0], [4055.0, 4551.0], [4063.0, 4554.0], [4079.0, 4251.0], [3999.0, 4864.0], [3991.0, 4383.0], [3975.0, 4344.0], [4007.0, 5238.0], [4334.0, 4084.0], [4318.0, 4189.333333333332], [4350.0, 4050.0], [4158.0, 4314.0], [4142.0, 4400.0], [4126.0, 4415.0], [4110.0, 3914.0], [4238.0, 3496.0], [4366.0, 3813.0], [4382.0, 3931.0], [4446.0, 3784.0], [4430.0, 3775.0], [4414.0, 3664.0], [4494.0, 3368.0], [4510.0, 3281.0], [4526.0, 3318.0], [4670.0, 2275.0], [4830.0, 1393.0], [4686.0, 2051.0], [4766.0, 1496.0], [4750.0, 1732.0], [4798.0, 1335.0], [4814.0, 1427.0], [4654.0, 2328.0], [4734.0, 1723.0], [4718.0, 1854.0], [4702.0, 1961.0], [4862.0, 1317.8235294117644], [4878.0, 1228.0], [4351.0, 4047.0], [4239.0, 4526.0], [4335.0, 4084.0], [4319.0, 3864.0], [4159.0, 4309.0], [4127.0, 3904.0], [4223.0, 4288.0], [4399.0, 3934.5], [4383.0, 4035.0], [4367.0, 3805.0], [4479.0, 3453.5], [4463.0, 3544.5], [4447.0, 3777.0], [4415.0, 4085.0], [4527.0, 3327.0], [4511.0, 3546.0], [4495.0, 3374.0], [4751.0, 1621.0], [4687.0, 2020.0], [4767.0, 1485.0], [4783.0, 1420.0], [4815.0, 1441.0], [4735.0, 1819.0], [4655.0, 2237.0], [4671.0, 2124.0], [4719.0, 1932.0], [4879.0, 1095.0], [1.0, 11916.0]], "isOverall": false, "label": "HTTP 요청", "isController": false}, {"data": [[2421.5233999999946, 7696.962200000015]], "isOverall": false, "label": "HTTP 요청-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4888.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 11000.0, "minX": 1.72049178E12, "maxY": 57166.666666666664, "series": [{"data": [[1.72049178E12, 57166.666666666664]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72049178E12, 11000.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72049178E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 7696.962200000015, "minX": 1.72049178E12, "maxY": 7696.962200000015, "series": [{"data": [[1.72049178E12, 7696.962200000015]], "isOverall": false, "label": "HTTP 요청", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72049178E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 7516.296999999998, "minX": 1.72049178E12, "maxY": 7516.296999999998, "series": [{"data": [[1.72049178E12, 7516.296999999998]], "isOverall": false, "label": "HTTP 요청", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72049178E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 1604.0399999999972, "minX": 1.72049178E12, "maxY": 1604.0399999999972, "series": [{"data": [[1.72049178E12, 1604.0399999999972]], "isOverall": false, "label": "HTTP 요청", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72049178E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 37.0, "minX": 1.72049178E12, "maxY": 12714.0, "series": [{"data": [[1.72049178E12, 12714.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72049178E12, 11788.600000000002]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72049178E12, 12600.99]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72049178E12, 12175.9]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72049178E12, 37.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72049178E12, 7768.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72049178E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 100.0, "minX": 93.0, "maxY": 12314.0, "series": [{"data": [[134.0, 1341.0], [580.0, 7448.5], [159.0, 2020.0], [724.0, 11475.5], [273.0, 3899.0], [293.0, 4447.0], [359.0, 12314.0], [93.0, 100.0], [105.0, 3218.0], [416.0, 10447.0], [434.0, 8318.0], [460.0, 5363.0], [464.0, 6507.5], [506.0, 9284.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 724.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 98.0, "minX": 93.0, "maxY": 12194.0, "series": [{"data": [[134.0, 1273.5], [580.0, 7245.0], [159.0, 1964.0], [724.0, 11360.0], [273.0, 3814.0], [293.0, 4377.0], [359.0, 12194.0], [93.0, 98.0], [105.0, 3188.0], [416.0, 10380.5], [434.0, 8075.5], [460.0, 5146.5], [464.0, 6382.5], [506.0, 9152.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 724.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.72049178E12, "maxY": 83.33333333333333, "series": [{"data": [[1.72049178E12, 83.33333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72049178E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.72049178E12, "maxY": 83.33333333333333, "series": [{"data": [[1.72049178E12, 83.33333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72049178E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.72049178E12, "maxY": 83.33333333333333, "series": [{"data": [[1.72049178E12, 83.33333333333333]], "isOverall": false, "label": "HTTP 요청-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72049178E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.72049178E12, "maxY": 83.33333333333333, "series": [{"data": [[1.72049178E12, 83.33333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72049178E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

