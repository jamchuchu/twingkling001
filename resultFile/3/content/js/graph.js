/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 25.0, "minX": 0.0, "maxY": 4372.0, "series": [{"data": [[0.0, 25.0], [0.1, 30.0], [0.2, 31.0], [0.3, 32.0], [0.4, 44.0], [0.5, 56.0], [0.6, 65.0], [0.7, 70.0], [0.8, 75.0], [0.9, 78.0], [1.0, 81.0], [1.1, 85.0], [1.2, 94.0], [1.3, 776.0], [1.4, 783.0], [1.5, 791.0], [1.6, 807.0], [1.7, 810.0], [1.8, 813.0], [1.9, 817.0], [2.0, 823.0], [2.1, 833.0], [2.2, 835.0], [2.3, 841.0], [2.4, 844.0], [2.5, 851.0], [2.6, 854.0], [2.7, 863.0], [2.8, 865.0], [2.9, 866.0], [3.0, 869.0], [3.1, 873.0], [3.2, 878.0], [3.3, 879.0], [3.4, 882.0], [3.5, 886.0], [3.6, 890.0], [3.7, 893.0], [3.8, 896.0], [3.9, 899.0], [4.0, 903.0], [4.1, 907.0], [4.2, 912.0], [4.3, 917.0], [4.4, 921.0], [4.5, 923.0], [4.6, 931.0], [4.7, 933.0], [4.8, 935.0], [4.9, 937.0], [5.0, 940.0], [5.1, 941.0], [5.2, 942.0], [5.3, 943.0], [5.4, 944.0], [5.5, 946.0], [5.6, 946.0], [5.7, 947.0], [5.8, 949.0], [5.9, 949.0], [6.0, 952.0], [6.1, 953.0], [6.2, 955.0], [6.3, 957.0], [6.4, 960.0], [6.5, 961.0], [6.6, 963.0], [6.7, 965.0], [6.8, 965.0], [6.9, 967.0], [7.0, 968.0], [7.1, 971.0], [7.2, 973.0], [7.3, 975.0], [7.4, 978.0], [7.5, 981.0], [7.6, 983.0], [7.7, 985.0], [7.8, 987.0], [7.9, 990.0], [8.0, 993.0], [8.1, 995.0], [8.2, 996.0], [8.3, 997.0], [8.4, 999.0], [8.5, 1000.0], [8.6, 1002.0], [8.7, 1005.0], [8.8, 1007.0], [8.9, 1009.0], [9.0, 1011.0], [9.1, 1012.0], [9.2, 1014.0], [9.3, 1016.0], [9.4, 1018.0], [9.5, 1019.0], [9.6, 1020.0], [9.7, 1022.0], [9.8, 1023.0], [9.9, 1024.0], [10.0, 1026.0], [10.1, 1027.0], [10.2, 1027.0], [10.3, 1028.0], [10.4, 1031.0], [10.5, 1033.0], [10.6, 1034.0], [10.7, 1035.0], [10.8, 1035.0], [10.9, 1038.0], [11.0, 1039.0], [11.1, 1040.0], [11.2, 1042.0], [11.3, 1043.0], [11.4, 1044.0], [11.5, 1046.0], [11.6, 1047.0], [11.7, 1049.0], [11.8, 1049.0], [11.9, 1050.0], [12.0, 1051.0], [12.1, 1052.0], [12.2, 1053.0], [12.3, 1054.0], [12.4, 1056.0], [12.5, 1057.0], [12.6, 1057.0], [12.7, 1059.0], [12.8, 1060.0], [12.9, 1061.0], [13.0, 1062.0], [13.1, 1063.0], [13.2, 1066.0], [13.3, 1067.0], [13.4, 1068.0], [13.5, 1070.0], [13.6, 1072.0], [13.7, 1073.0], [13.8, 1075.0], [13.9, 1077.0], [14.0, 1078.0], [14.1, 1080.0], [14.2, 1081.0], [14.3, 1082.0], [14.4, 1082.0], [14.5, 1084.0], [14.6, 1084.0], [14.7, 1085.0], [14.8, 1087.0], [14.9, 1089.0], [15.0, 1091.0], [15.1, 1092.0], [15.2, 1094.0], [15.3, 1095.0], [15.4, 1098.0], [15.5, 1100.0], [15.6, 1102.0], [15.7, 1106.0], [15.8, 1108.0], [15.9, 1110.0], [16.0, 1114.0], [16.1, 1115.0], [16.2, 1117.0], [16.3, 1118.0], [16.4, 1120.0], [16.5, 1122.0], [16.6, 1124.0], [16.7, 1126.0], [16.8, 1127.0], [16.9, 1128.0], [17.0, 1131.0], [17.1, 1133.0], [17.2, 1134.0], [17.3, 1137.0], [17.4, 1139.0], [17.5, 1142.0], [17.6, 1143.0], [17.7, 1145.0], [17.8, 1147.0], [17.9, 1153.0], [18.0, 1154.0], [18.1, 1156.0], [18.2, 1159.0], [18.3, 1161.0], [18.4, 1165.0], [18.5, 1166.0], [18.6, 1167.0], [18.7, 1168.0], [18.8, 1169.0], [18.9, 1171.0], [19.0, 1175.0], [19.1, 1180.0], [19.2, 1182.0], [19.3, 1184.0], [19.4, 1187.0], [19.5, 1188.0], [19.6, 1190.0], [19.7, 1191.0], [19.8, 1193.0], [19.9, 1195.0], [20.0, 1196.0], [20.1, 1198.0], [20.2, 1198.0], [20.3, 1201.0], [20.4, 1204.0], [20.5, 1206.0], [20.6, 1207.0], [20.7, 1208.0], [20.8, 1209.0], [20.9, 1210.0], [21.0, 1211.0], [21.1, 1212.0], [21.2, 1213.0], [21.3, 1215.0], [21.4, 1216.0], [21.5, 1218.0], [21.6, 1220.0], [21.7, 1223.0], [21.8, 1224.0], [21.9, 1226.0], [22.0, 1229.0], [22.1, 1230.0], [22.2, 1233.0], [22.3, 1234.0], [22.4, 1238.0], [22.5, 1241.0], [22.6, 1243.0], [22.7, 1244.0], [22.8, 1245.0], [22.9, 1248.0], [23.0, 1251.0], [23.1, 1252.0], [23.2, 1255.0], [23.3, 1259.0], [23.4, 1261.0], [23.5, 1265.0], [23.6, 1268.0], [23.7, 1275.0], [23.8, 1279.0], [23.9, 1282.0], [24.0, 1284.0], [24.1, 1285.0], [24.2, 1288.0], [24.3, 1293.0], [24.4, 1294.0], [24.5, 1295.0], [24.6, 1299.0], [24.7, 1301.0], [24.8, 1305.0], [24.9, 1307.0], [25.0, 1310.0], [25.1, 1311.0], [25.2, 1314.0], [25.3, 1316.0], [25.4, 1318.0], [25.5, 1320.0], [25.6, 1321.0], [25.7, 1324.0], [25.8, 1325.0], [25.9, 1326.0], [26.0, 1327.0], [26.1, 1329.0], [26.2, 1332.0], [26.3, 1334.0], [26.4, 1335.0], [26.5, 1337.0], [26.6, 1339.0], [26.7, 1340.0], [26.8, 1341.0], [26.9, 1343.0], [27.0, 1345.0], [27.1, 1347.0], [27.2, 1348.0], [27.3, 1350.0], [27.4, 1351.0], [27.5, 1353.0], [27.6, 1355.0], [27.7, 1356.0], [27.8, 1357.0], [27.9, 1360.0], [28.0, 1362.0], [28.1, 1364.0], [28.2, 1366.0], [28.3, 1368.0], [28.4, 1370.0], [28.5, 1371.0], [28.6, 1372.0], [28.7, 1373.0], [28.8, 1374.0], [28.9, 1375.0], [29.0, 1376.0], [29.1, 1377.0], [29.2, 1378.0], [29.3, 1380.0], [29.4, 1381.0], [29.5, 1382.0], [29.6, 1383.0], [29.7, 1384.0], [29.8, 1387.0], [29.9, 1389.0], [30.0, 1391.0], [30.1, 1396.0], [30.2, 1397.0], [30.3, 1400.0], [30.4, 1401.0], [30.5, 1402.0], [30.6, 1405.0], [30.7, 1406.0], [30.8, 1409.0], [30.9, 1411.0], [31.0, 1412.0], [31.1, 1414.0], [31.2, 1415.0], [31.3, 1417.0], [31.4, 1418.0], [31.5, 1419.0], [31.6, 1421.0], [31.7, 1422.0], [31.8, 1424.0], [31.9, 1427.0], [32.0, 1429.0], [32.1, 1431.0], [32.2, 1434.0], [32.3, 1441.0], [32.4, 1445.0], [32.5, 1448.0], [32.6, 1449.0], [32.7, 1450.0], [32.8, 1452.0], [32.9, 1453.0], [33.0, 1455.0], [33.1, 1458.0], [33.2, 1461.0], [33.3, 1464.0], [33.4, 1466.0], [33.5, 1469.0], [33.6, 1469.0], [33.7, 1470.0], [33.8, 1472.0], [33.9, 1474.0], [34.0, 1476.0], [34.1, 1478.0], [34.2, 1479.0], [34.3, 1480.0], [34.4, 1483.0], [34.5, 1485.0], [34.6, 1488.0], [34.7, 1492.0], [34.8, 1494.0], [34.9, 1499.0], [35.0, 1501.0], [35.1, 1503.0], [35.2, 1507.0], [35.3, 1517.0], [35.4, 1519.0], [35.5, 1522.0], [35.6, 1526.0], [35.7, 1528.0], [35.8, 1531.0], [35.9, 1540.0], [36.0, 1546.0], [36.1, 1547.0], [36.2, 1550.0], [36.3, 1553.0], [36.4, 1558.0], [36.5, 1563.0], [36.6, 1567.0], [36.7, 1571.0], [36.8, 1576.0], [36.9, 1586.0], [37.0, 1589.0], [37.1, 1591.0], [37.2, 1593.0], [37.3, 1597.0], [37.4, 1601.0], [37.5, 1606.0], [37.6, 1608.0], [37.7, 1612.0], [37.8, 1615.0], [37.9, 1618.0], [38.0, 1621.0], [38.1, 1622.0], [38.2, 1625.0], [38.3, 1628.0], [38.4, 1632.0], [38.5, 1635.0], [38.6, 1638.0], [38.7, 1639.0], [38.8, 1642.0], [38.9, 1646.0], [39.0, 1650.0], [39.1, 1652.0], [39.2, 1657.0], [39.3, 1661.0], [39.4, 1669.0], [39.5, 1673.0], [39.6, 1679.0], [39.7, 1685.0], [39.8, 1694.0], [39.9, 1697.0], [40.0, 1703.0], [40.1, 1709.0], [40.2, 1714.0], [40.3, 1717.0], [40.4, 1719.0], [40.5, 1725.0], [40.6, 1738.0], [40.7, 1740.0], [40.8, 1742.0], [40.9, 1745.0], [41.0, 1747.0], [41.1, 1752.0], [41.2, 1760.0], [41.3, 1778.0], [41.4, 1781.0], [41.5, 1788.0], [41.6, 1797.0], [41.7, 1816.0], [41.8, 1854.0], [41.9, 1952.0], [42.0, 1954.0], [42.1, 1959.0], [42.2, 1964.0], [42.3, 1969.0], [42.4, 1972.0], [42.5, 1978.0], [42.6, 1986.0], [42.7, 1992.0], [42.8, 1995.0], [42.9, 1999.0], [43.0, 2003.0], [43.1, 2010.0], [43.2, 2018.0], [43.3, 2021.0], [43.4, 2025.0], [43.5, 2031.0], [43.6, 2034.0], [43.7, 2038.0], [43.8, 2041.0], [43.9, 2046.0], [44.0, 2056.0], [44.1, 2064.0], [44.2, 2067.0], [44.3, 2077.0], [44.4, 2092.0], [44.5, 2096.0], [44.6, 2102.0], [44.7, 2110.0], [44.8, 2119.0], [44.9, 2123.0], [45.0, 2127.0], [45.1, 2132.0], [45.2, 2136.0], [45.3, 2140.0], [45.4, 2146.0], [45.5, 2151.0], [45.6, 2156.0], [45.7, 2161.0], [45.8, 2167.0], [45.9, 2168.0], [46.0, 2172.0], [46.1, 2175.0], [46.2, 2178.0], [46.3, 2181.0], [46.4, 2183.0], [46.5, 2187.0], [46.6, 2190.0], [46.7, 2192.0], [46.8, 2197.0], [46.9, 2199.0], [47.0, 2201.0], [47.1, 2203.0], [47.2, 2207.0], [47.3, 2210.0], [47.4, 2213.0], [47.5, 2214.0], [47.6, 2216.0], [47.7, 2218.0], [47.8, 2221.0], [47.9, 2222.0], [48.0, 2225.0], [48.1, 2230.0], [48.2, 2233.0], [48.3, 2237.0], [48.4, 2241.0], [48.5, 2244.0], [48.6, 2248.0], [48.7, 2254.0], [48.8, 2258.0], [48.9, 2264.0], [49.0, 2267.0], [49.1, 2270.0], [49.2, 2274.0], [49.3, 2280.0], [49.4, 2283.0], [49.5, 2285.0], [49.6, 2288.0], [49.7, 2290.0], [49.8, 2294.0], [49.9, 2297.0], [50.0, 2300.0], [50.1, 2305.0], [50.2, 2308.0], [50.3, 2317.0], [50.4, 2323.0], [50.5, 2327.0], [50.6, 2336.0], [50.7, 2349.0], [50.8, 2360.0], [50.9, 2372.0], [51.0, 2380.0], [51.1, 2390.0], [51.2, 2394.0], [51.3, 2429.0], [51.4, 2432.0], [51.5, 2437.0], [51.6, 2445.0], [51.7, 2456.0], [51.8, 2459.0], [51.9, 2462.0], [52.0, 2467.0], [52.1, 2470.0], [52.2, 2472.0], [52.3, 2474.0], [52.4, 2478.0], [52.5, 2480.0], [52.6, 2484.0], [52.7, 2487.0], [52.8, 2490.0], [52.9, 2491.0], [53.0, 2494.0], [53.1, 2495.0], [53.2, 2495.0], [53.3, 2496.0], [53.4, 2498.0], [53.5, 2500.0], [53.6, 2501.0], [53.7, 2503.0], [53.8, 2504.0], [53.9, 2508.0], [54.0, 2510.0], [54.1, 2512.0], [54.2, 2515.0], [54.3, 2519.0], [54.4, 2521.0], [54.5, 2524.0], [54.6, 2527.0], [54.7, 2531.0], [54.8, 2534.0], [54.9, 2540.0], [55.0, 2547.0], [55.1, 2555.0], [55.2, 2561.0], [55.3, 2568.0], [55.4, 2574.0], [55.5, 2576.0], [55.6, 2579.0], [55.7, 2581.0], [55.8, 2585.0], [55.9, 2591.0], [56.0, 2594.0], [56.1, 2597.0], [56.2, 2602.0], [56.3, 2604.0], [56.4, 2606.0], [56.5, 2609.0], [56.6, 2611.0], [56.7, 2613.0], [56.8, 2614.0], [56.9, 2615.0], [57.0, 2617.0], [57.1, 2620.0], [57.2, 2624.0], [57.3, 2626.0], [57.4, 2628.0], [57.5, 2629.0], [57.6, 2632.0], [57.7, 2636.0], [57.8, 2640.0], [57.9, 2643.0], [58.0, 2644.0], [58.1, 2646.0], [58.2, 2649.0], [58.3, 2651.0], [58.4, 2652.0], [58.5, 2654.0], [58.6, 2655.0], [58.7, 2656.0], [58.8, 2658.0], [58.9, 2659.0], [59.0, 2661.0], [59.1, 2661.0], [59.2, 2663.0], [59.3, 2664.0], [59.4, 2665.0], [59.5, 2666.0], [59.6, 2669.0], [59.7, 2670.0], [59.8, 2674.0], [59.9, 2676.0], [60.0, 2678.0], [60.1, 2679.0], [60.2, 2680.0], [60.3, 2682.0], [60.4, 2684.0], [60.5, 2686.0], [60.6, 2687.0], [60.7, 2688.0], [60.8, 2688.0], [60.9, 2689.0], [61.0, 2690.0], [61.1, 2691.0], [61.2, 2692.0], [61.3, 2694.0], [61.4, 2696.0], [61.5, 2698.0], [61.6, 2701.0], [61.7, 2702.0], [61.8, 2704.0], [61.9, 2707.0], [62.0, 2710.0], [62.1, 2713.0], [62.2, 2716.0], [62.3, 2718.0], [62.4, 2723.0], [62.5, 2729.0], [62.6, 2736.0], [62.7, 2740.0], [62.8, 2742.0], [62.9, 2744.0], [63.0, 2749.0], [63.1, 2752.0], [63.2, 2756.0], [63.3, 2762.0], [63.4, 2764.0], [63.5, 2765.0], [63.6, 2766.0], [63.7, 2770.0], [63.8, 2771.0], [63.9, 2774.0], [64.0, 2777.0], [64.1, 2784.0], [64.2, 2788.0], [64.3, 2790.0], [64.4, 2793.0], [64.5, 2797.0], [64.6, 2801.0], [64.7, 2813.0], [64.8, 2815.0], [64.9, 2819.0], [65.0, 2821.0], [65.1, 2824.0], [65.2, 2830.0], [65.3, 2833.0], [65.4, 2838.0], [65.5, 2842.0], [65.6, 2843.0], [65.7, 2846.0], [65.8, 2848.0], [65.9, 2849.0], [66.0, 2851.0], [66.1, 2852.0], [66.2, 2854.0], [66.3, 2858.0], [66.4, 2862.0], [66.5, 2871.0], [66.6, 2876.0], [66.7, 2882.0], [66.8, 2885.0], [66.9, 2889.0], [67.0, 2893.0], [67.1, 2897.0], [67.2, 2902.0], [67.3, 2905.0], [67.4, 2911.0], [67.5, 2917.0], [67.6, 2918.0], [67.7, 2922.0], [67.8, 2925.0], [67.9, 2933.0], [68.0, 2937.0], [68.1, 2940.0], [68.2, 2947.0], [68.3, 2952.0], [68.4, 2955.0], [68.5, 2957.0], [68.6, 2961.0], [68.7, 2966.0], [68.8, 2971.0], [68.9, 2979.0], [69.0, 2984.0], [69.1, 2986.0], [69.2, 2990.0], [69.3, 2994.0], [69.4, 3008.0], [69.5, 3018.0], [69.6, 3024.0], [69.7, 3030.0], [69.8, 3036.0], [69.9, 3039.0], [70.0, 3044.0], [70.1, 3049.0], [70.2, 3052.0], [70.3, 3056.0], [70.4, 3059.0], [70.5, 3063.0], [70.6, 3068.0], [70.7, 3071.0], [70.8, 3076.0], [70.9, 3079.0], [71.0, 3087.0], [71.1, 3093.0], [71.2, 3098.0], [71.3, 3102.0], [71.4, 3105.0], [71.5, 3108.0], [71.6, 3109.0], [71.7, 3111.0], [71.8, 3114.0], [71.9, 3116.0], [72.0, 3117.0], [72.1, 3119.0], [72.2, 3124.0], [72.3, 3129.0], [72.4, 3135.0], [72.5, 3139.0], [72.6, 3142.0], [72.7, 3147.0], [72.8, 3151.0], [72.9, 3163.0], [73.0, 3174.0], [73.1, 3177.0], [73.2, 3181.0], [73.3, 3185.0], [73.4, 3187.0], [73.5, 3189.0], [73.6, 3189.0], [73.7, 3190.0], [73.8, 3193.0], [73.9, 3194.0], [74.0, 3200.0], [74.1, 3204.0], [74.2, 3209.0], [74.3, 3211.0], [74.4, 3212.0], [74.5, 3215.0], [74.6, 3217.0], [74.7, 3220.0], [74.8, 3223.0], [74.9, 3226.0], [75.0, 3232.0], [75.1, 3236.0], [75.2, 3238.0], [75.3, 3242.0], [75.4, 3247.0], [75.5, 3249.0], [75.6, 3255.0], [75.7, 3258.0], [75.8, 3261.0], [75.9, 3264.0], [76.0, 3267.0], [76.1, 3269.0], [76.2, 3273.0], [76.3, 3280.0], [76.4, 3282.0], [76.5, 3285.0], [76.6, 3288.0], [76.7, 3292.0], [76.8, 3295.0], [76.9, 3300.0], [77.0, 3302.0], [77.1, 3303.0], [77.2, 3305.0], [77.3, 3308.0], [77.4, 3310.0], [77.5, 3314.0], [77.6, 3318.0], [77.7, 3319.0], [77.8, 3321.0], [77.9, 3322.0], [78.0, 3325.0], [78.1, 3329.0], [78.2, 3332.0], [78.3, 3335.0], [78.4, 3336.0], [78.5, 3338.0], [78.6, 3340.0], [78.7, 3342.0], [78.8, 3343.0], [78.9, 3344.0], [79.0, 3346.0], [79.1, 3348.0], [79.2, 3350.0], [79.3, 3354.0], [79.4, 3358.0], [79.5, 3360.0], [79.6, 3361.0], [79.7, 3365.0], [79.8, 3369.0], [79.9, 3371.0], [80.0, 3375.0], [80.1, 3380.0], [80.2, 3387.0], [80.3, 3394.0], [80.4, 3395.0], [80.5, 3399.0], [80.6, 3401.0], [80.7, 3405.0], [80.8, 3406.0], [80.9, 3410.0], [81.0, 3413.0], [81.1, 3418.0], [81.2, 3420.0], [81.3, 3430.0], [81.4, 3432.0], [81.5, 3442.0], [81.6, 3451.0], [81.7, 3462.0], [81.8, 3472.0], [81.9, 3474.0], [82.0, 3479.0], [82.1, 3485.0], [82.2, 3494.0], [82.3, 3500.0], [82.4, 3504.0], [82.5, 3509.0], [82.6, 3510.0], [82.7, 3514.0], [82.8, 3515.0], [82.9, 3520.0], [83.0, 3522.0], [83.1, 3524.0], [83.2, 3528.0], [83.3, 3530.0], [83.4, 3533.0], [83.5, 3536.0], [83.6, 3546.0], [83.7, 3557.0], [83.8, 3558.0], [83.9, 3560.0], [84.0, 3562.0], [84.1, 3566.0], [84.2, 3568.0], [84.3, 3570.0], [84.4, 3573.0], [84.5, 3578.0], [84.6, 3586.0], [84.7, 3597.0], [84.8, 3603.0], [84.9, 3612.0], [85.0, 3622.0], [85.1, 3627.0], [85.2, 3634.0], [85.3, 3637.0], [85.4, 3640.0], [85.5, 3641.0], [85.6, 3643.0], [85.7, 3646.0], [85.8, 3649.0], [85.9, 3651.0], [86.0, 3653.0], [86.1, 3660.0], [86.2, 3663.0], [86.3, 3668.0], [86.4, 3672.0], [86.5, 3675.0], [86.6, 3679.0], [86.7, 3680.0], [86.8, 3687.0], [86.9, 3689.0], [87.0, 3694.0], [87.1, 3697.0], [87.2, 3703.0], [87.3, 3707.0], [87.4, 3707.0], [87.5, 3709.0], [87.6, 3711.0], [87.7, 3713.0], [87.8, 3714.0], [87.9, 3717.0], [88.0, 3718.0], [88.1, 3722.0], [88.2, 3729.0], [88.3, 3731.0], [88.4, 3733.0], [88.5, 3736.0], [88.6, 3744.0], [88.7, 3747.0], [88.8, 3750.0], [88.9, 3753.0], [89.0, 3757.0], [89.1, 3760.0], [89.2, 3761.0], [89.3, 3766.0], [89.4, 3769.0], [89.5, 3775.0], [89.6, 3780.0], [89.7, 3782.0], [89.8, 3785.0], [89.9, 3791.0], [90.0, 3796.0], [90.1, 3799.0], [90.2, 3807.0], [90.3, 3814.0], [90.4, 3817.0], [90.5, 3821.0], [90.6, 3824.0], [90.7, 3828.0], [90.8, 3833.0], [90.9, 3839.0], [91.0, 3848.0], [91.1, 3855.0], [91.2, 3862.0], [91.3, 3868.0], [91.4, 3869.0], [91.5, 3870.0], [91.6, 3873.0], [91.7, 3876.0], [91.8, 3882.0], [91.9, 3887.0], [92.0, 3892.0], [92.1, 3894.0], [92.2, 3896.0], [92.3, 3898.0], [92.4, 3899.0], [92.5, 3901.0], [92.6, 3904.0], [92.7, 3907.0], [92.8, 3910.0], [92.9, 3913.0], [93.0, 3918.0], [93.1, 3925.0], [93.2, 3929.0], [93.3, 3936.0], [93.4, 3940.0], [93.5, 3943.0], [93.6, 3948.0], [93.7, 3956.0], [93.8, 3959.0], [93.9, 3962.0], [94.0, 3965.0], [94.1, 3967.0], [94.2, 3969.0], [94.3, 3972.0], [94.4, 3976.0], [94.5, 3978.0], [94.6, 3979.0], [94.7, 3984.0], [94.8, 3987.0], [94.9, 3992.0], [95.0, 3995.0], [95.1, 4002.0], [95.2, 4012.0], [95.3, 4014.0], [95.4, 4016.0], [95.5, 4021.0], [95.6, 4030.0], [95.7, 4041.0], [95.8, 4068.0], [95.9, 4083.0], [96.0, 4089.0], [96.1, 4098.0], [96.2, 4103.0], [96.3, 4131.0], [96.4, 4133.0], [96.5, 4137.0], [96.6, 4143.0], [96.7, 4145.0], [96.8, 4148.0], [96.9, 4151.0], [97.0, 4155.0], [97.1, 4164.0], [97.2, 4173.0], [97.3, 4175.0], [97.4, 4180.0], [97.5, 4182.0], [97.6, 4192.0], [97.7, 4219.0], [97.8, 4224.0], [97.9, 4226.0], [98.0, 4228.0], [98.1, 4231.0], [98.2, 4233.0], [98.3, 4234.0], [98.4, 4234.0], [98.5, 4238.0], [98.6, 4241.0], [98.7, 4244.0], [98.8, 4257.0], [98.9, 4282.0], [99.0, 4298.0], [99.1, 4300.0], [99.2, 4307.0], [99.3, 4315.0], [99.4, 4319.0], [99.5, 4322.0], [99.6, 4325.0], [99.7, 4329.0], [99.8, 4344.0], [99.9, 4349.0], [100.0, 4372.0]], "isOverall": false, "label": "HTTP 요청", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 353.0, "series": [{"data": [[0.0, 62.0], [700.0, 14.0], [800.0, 118.0], [900.0, 226.0], [1000.0, 353.0], [1100.0, 237.0], [1200.0, 222.0], [1300.0, 282.0], [1400.0, 234.0], [1500.0, 120.0], [100.0, 1.0], [1600.0, 127.0], [1700.0, 84.0], [1800.0, 12.0], [1900.0, 53.0], [2000.0, 81.0], [2100.0, 119.0], [2200.0, 154.0], [2300.0, 62.0], [2400.0, 112.0], [2500.0, 135.0], [2600.0, 269.0], [2700.0, 151.0], [2800.0, 130.0], [2900.0, 107.0], [3000.0, 98.0], [3100.0, 134.0], [3200.0, 147.0], [3300.0, 182.0], [3400.0, 88.0], [3500.0, 122.0], [3600.0, 119.0], [3700.0, 150.0], [3800.0, 115.0], [3900.0, 134.0], [4000.0, 51.0], [4100.0, 78.0], [4200.0, 71.0], [4300.0, 46.0]], "isOverall": false, "label": "HTTP 요청", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 63.0, "minX": 0.0, "ticks": [[0, "요청 수 \n(응답시간 <= 500ms)"], [1, "요청 수 \n(응답시간 > 500ms 및 <= 1,500ms)"], [2, "요청 수 \n(응답시간 > 1,500ms)"], [3, "오류 발생 요청"]], "maxY": 3251.0, "series": [{"data": [[0.0, 63.0]], "color": "#9ACD32", "isOverall": false, "label": "요청 수 \n(응답시간 <= 500ms)", "isController": false}, {"data": [[1.0, 1686.0]], "color": "yellow", "isOverall": false, "label": "요청 수 \n(응답시간 > 500ms 및 <= 1,500ms)", "isController": false}, {"data": [[2.0, 3251.0]], "color": "orange", "isOverall": false, "label": "요청 수 \n(응답시간 > 1,500ms)", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "오류 발생 요청", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2458.6480000000024, "minX": 1.72049244E12, "maxY": 2458.6480000000024, "series": [{"data": [[1.72049244E12, 2458.6480000000024]], "isOverall": false, "label": "쓰레드 그룹", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72049244E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 28.0, "minX": 1.0, "maxY": 4358.0, "series": [{"data": [[2.0, 4265.0], [6.0, 3953.0], [8.0, 4358.0], [10.0, 4050.5], [12.0, 4327.5], [14.0, 4047.0], [16.0, 3781.0], [17.0, 3783.0], [18.0, 4280.0], [19.0, 4034.0], [21.0, 4090.5], [22.0, 4314.0], [23.0, 3797.0], [25.0, 4332.5], [26.0, 4316.0], [31.0, 4202.8], [33.0, 4303.0], [35.0, 4047.0], [37.0, 4301.0], [36.0, 4060.5], [39.0, 4318.0], [41.0, 4064.0], [45.0, 4326.0], [44.0, 3976.6666666666665], [48.0, 4156.666666666667], [51.0, 4322.0], [50.0, 4327.0], [52.0, 3817.0], [54.0, 4321.5], [57.0, 3851.0], [56.0, 4321.0], [59.0, 4325.0], [58.0, 4345.0], [61.0, 4352.0], [60.0, 4320.0], [63.0, 4345.0], [62.0, 4349.0], [67.0, 4162.333333333333], [64.0, 4318.0], [71.0, 3839.0], [70.0, 4317.0], [68.0, 4320.0], [75.0, 4311.0], [74.0, 4313.0], [73.0, 4339.5], [79.0, 3736.0], [78.0, 4240.0], [77.0, 4287.0], [82.0, 4054.0], [80.0, 4242.0], [86.0, 4013.0], [84.0, 4017.5], [91.0, 4235.0], [90.0, 3985.0], [89.0, 3761.5], [94.0, 4233.0], [92.0, 3738.0], [98.0, 4226.0], [97.0, 3731.0], [96.0, 4232.5], [101.0, 4223.0], [100.0, 4232.5], [106.0, 4225.0], [104.0, 4065.6666666666665], [111.0, 4022.0], [109.0, 3750.0], [108.0, 3982.0], [115.0, 3986.0], [113.0, 3985.5], [118.0, 3746.0], [117.0, 4247.0], [116.0, 3876.0], [123.0, 4011.0], [121.0, 4243.0], [120.0, 4241.5], [127.0, 3736.0], [126.0, 4240.5], [135.0, 4241.0], [133.0, 4233.0], [132.0, 4231.0], [131.0, 4237.5], [129.0, 3747.0], [128.0, 4237.0], [142.0, 4234.0], [141.0, 4233.5], [139.0, 4226.0], [138.0, 4225.0], [137.0, 4234.0], [136.0, 3731.0], [151.0, 3970.0], [149.0, 4282.0], [148.0, 4258.0], [146.0, 4226.0], [145.0, 4227.0], [144.0, 3973.0], [159.0, 4188.0], [158.0, 4335.0], [157.0, 4195.0], [156.0, 4204.0], [155.0, 4198.0], [154.0, 3694.0], [153.0, 3718.0], [152.0, 4273.0], [167.0, 3679.0], [166.0, 4053.6666666666665], [163.0, 3677.0], [162.0, 4059.0], [175.0, 3681.0], [174.0, 4182.0], [173.0, 3930.0], [171.0, 3675.0], [170.0, 3679.0], [169.0, 4240.0], [168.0, 3680.0], [183.0, 3674.5], [181.0, 3674.0], [180.0, 4187.0], [179.0, 4182.0], [178.0, 4180.0], [177.0, 4180.0], [191.0, 4225.0], [190.0, 4173.0], [188.0, 4202.0], [186.0, 4221.0], [185.0, 4180.0], [184.0, 3674.0], [199.0, 4149.0], [198.0, 3922.0], [196.0, 4182.0], [195.0, 4181.5], [193.0, 4223.0], [192.0, 4192.0], [205.0, 28.0], [207.0, 4175.0], [206.0, 3987.6666666666665], [203.0, 4145.0], [202.0, 4163.0], [200.0, 4177.0], [215.0, 1402.3333333333333], [214.0, 1850.0], [213.0, 1057.75], [212.0, 4144.0], [211.0, 4145.0], [210.0, 4174.0], [209.0, 4145.5], [217.0, 1065.0], [216.0, 4134.0], [226.0, 32.0], [239.0, 30.0], [243.0, 32.0], [242.0, 30.0], [240.0, 30.0], [241.0, 30.0], [260.0, 3649.0], [303.0, 4069.0], [302.0, 3567.0], [301.0, 3663.0], [300.0, 3959.6463414634136], [317.0, 3987.0], [318.0, 3521.0], [316.0, 4149.0], [306.0, 4039.0], [304.0, 3570.0], [315.0, 3996.0], [314.0, 4004.0], [313.0, 3571.0], [312.0, 4031.5], [310.0, 3822.0], [308.0, 3537.0], [334.0, 4072.5], [333.0, 3631.0], [323.0, 4006.0], [321.0, 3992.0], [320.0, 3993.0], [331.0, 4016.0], [330.0, 3510.0], [329.0, 3492.0], [328.0, 4013.0], [326.0, 3643.0], [325.0, 4016.0], [324.0, 3507.0], [339.0, 3790.5], [350.0, 3756.0], [351.0, 3631.0], [348.0, 3753.5], [346.0, 3978.0], [345.0, 3757.0], [343.0, 3869.6666666666665], [340.0, 3542.0], [337.0, 3987.0], [336.0, 3782.5], [366.0, 3979.0], [365.0, 3653.0], [361.0, 3497.5], [359.0, 3982.5], [357.0, 3694.3333333333335], [354.0, 3969.0], [353.0, 3491.0], [352.0, 3533.0], [371.0, 1762.0], [382.0, 3505.0], [381.0, 3959.0], [380.0, 3598.25], [376.0, 3510.0], [375.0, 3963.0], [368.0, 3970.0], [374.0, 3973.5], [372.0, 3511.0], [370.0, 3978.0], [369.0, 3969.0], [398.0, 4010.0], [399.0, 4087.0], [397.0, 3956.0], [396.0, 3959.0], [395.0, 3956.0], [394.0, 3959.0], [393.0, 3512.0], [392.0, 4016.0], [391.0, 4014.0], [387.0, 3957.0], [386.0, 3968.0], [385.0, 3844.6666666666665], [390.0, 3984.3333333333335], [414.0, 3745.5], [403.0, 1180.6666666666667], [415.0, 4003.0], [412.0, 3948.0], [411.0, 3942.0], [410.0, 4010.5], [408.0, 3835.0], [406.0, 3721.0], [402.0, 4014.0], [401.0, 3950.5], [404.0, 3945.0], [430.0, 3929.0], [416.0, 1992.5], [431.0, 4062.0], [429.0, 3961.0], [419.0, 3993.0], [418.0, 3434.0], [427.0, 3987.0], [426.0, 3939.0], [425.0, 3992.0], [424.0, 3432.0], [423.0, 3963.0], [420.0, 3994.0], [435.0, 3560.0], [444.0, 3892.0], [443.0, 3975.0], [442.0, 3780.3333333333335], [439.0, 3687.0], [437.0, 3929.0], [436.0, 3676.5], [433.0, 3989.0], [432.0, 3988.0], [451.0, 3929.0], [461.0, 4048.0], [460.0, 3427.0], [459.0, 3972.0], [457.0, 3942.0], [455.0, 3974.0], [453.0, 3409.0], [452.0, 3979.0], [450.0, 4050.0], [449.0, 3867.0], [476.0, 3405.0], [479.0, 1386.6666666666665], [475.0, 1875.875], [471.0, 735.8333333333334], [470.0, 2025.5], [465.0, 1047.0], [464.0, 3592.3333333333335], [467.0, 3942.5], [478.0, 3405.0], [469.0, 3965.0], [468.0, 3408.0], [495.0, 3723.0], [489.0, 615.1428571428571], [488.0, 851.0], [491.0, 1551.0], [490.0, 70.0], [485.0, 88.0], [484.0, 3957.0], [487.0, 4038.0], [486.0, 3956.0], [483.0, 1993.5], [482.0, 1400.0], [480.0, 1806.0], [493.0, 3875.0], [492.0, 4034.0], [499.0, 3948.0], [510.0, 3936.0], [509.0, 3973.5], [507.0, 3940.0], [506.0, 3778.3333333333335], [503.0, 3942.0], [502.0, 3904.0], [501.0, 4028.0], [500.0, 3919.0], [498.0, 3908.0], [497.0, 3948.0], [496.0, 3523.0], [540.0, 3880.0], [542.0, 3913.0], [538.0, 3887.0], [536.0, 3375.0], [534.0, 3836.0], [532.0, 3501.0], [528.0, 3511.0], [522.0, 3391.0], [518.0, 3931.0], [514.0, 3896.0], [572.0, 3898.0], [566.0, 3864.0], [564.0, 3843.0], [560.0, 3572.5], [558.0, 3904.5], [554.0, 3699.0], [550.0, 3728.6666666666665], [544.0, 3877.5], [582.0, 3387.0], [604.0, 3907.0], [600.0, 3342.0], [596.0, 3900.0], [592.0, 3761.0], [590.0, 3841.0], [588.0, 3872.0], [586.0, 3589.5], [584.0, 3892.0], [578.0, 3862.0], [576.0, 3782.0], [638.0, 3576.0], [634.0, 3748.0], [630.0, 3611.5], [628.0, 3406.0], [622.0, 3421.0], [620.0, 3452.5], [616.0, 3329.0], [614.0, 3721.3333333333335], [608.0, 3750.0], [668.0, 3804.0], [670.0, 3881.5], [666.0, 3892.0], [660.0, 3816.0], [654.0, 3902.0], [652.0, 3232.0], [650.0, 3824.0], [648.0, 3822.5], [646.0, 3827.0], [644.0, 3904.0], [678.0, 3778.5], [702.0, 3780.0], [698.0, 3817.3333333333335], [692.0, 3863.5], [690.0, 3788.0], [688.0, 3748.0], [686.0, 3788.5], [682.0, 3296.0], [680.0, 3292.0], [676.0, 3554.5], [674.0, 3801.25], [732.0, 3758.5], [728.0, 3805.5], [726.0, 3765.3333333333335], [722.0, 3763.0], [720.0, 3772.0], [718.0, 3773.0], [712.0, 3803.6666666666665], [708.0, 3780.0], [764.0, 3314.0], [766.0, 3761.0], [760.0, 3325.0], [756.0, 3745.5], [752.0, 3832.0], [750.0, 3752.0], [746.0, 3753.0], [742.0, 3767.0], [738.0, 3760.0], [794.0, 3716.5], [796.0, 3297.5], [792.0, 3295.0], [788.0, 3551.0], [786.0, 3135.0], [784.0, 3306.0], [780.0, 3429.0], [778.0, 3686.0], [772.0, 3656.0], [770.0, 3812.0], [816.0, 3209.0], [814.0, 3383.0], [810.0, 3210.0], [808.0, 3708.5], [806.0, 3288.0], [804.0, 3713.0], [800.0, 3572.3333333333335], [898.0, 3696.0], [988.0, 2991.0], [984.0, 3661.0], [980.0, 3527.4562500000006], [978.0, 3692.0], [1020.0, 3640.0], [1016.0, 3640.0], [1014.0, 3302.0], [1012.0, 3641.0], [1010.0, 3476.0], [1006.0, 3644.5], [1004.0, 3530.0], [1000.0, 3151.0], [996.0, 3491.3333333333335], [1080.0, 3420.0], [1084.0, 3480.0], [1076.0, 3431.0], [1072.0, 2942.0], [1068.0, 3106.0], [1064.0, 3109.0], [1060.0, 2978.0], [1056.0, 3365.0], [1048.0, 3111.0], [1028.0, 3637.0], [1024.0, 3473.0], [1100.0, 3370.0], [1144.0, 3344.0], [1140.0, 3350.0], [1124.0, 3461.5], [1116.0, 3382.0], [1112.0, 3399.0], [1108.0, 3404.0], [1096.0, 3452.0], [1088.0, 3418.0], [1212.0, 3358.0], [1200.0, 3353.3333333333335], [1184.0, 2844.0], [1180.0, 3337.0], [1176.0, 3341.5], [1172.0, 3332.0], [1168.0, 3361.0], [1156.0, 3335.0], [1264.0, 3084.0], [1272.0, 2966.25], [1276.0, 3046.5], [1268.0, 3079.5], [1260.0, 3322.0], [1256.0, 2855.0], [1228.0, 3326.3333333333335], [1224.0, 3307.75], [1220.0, 3312.0], [1216.0, 3356.0], [1320.0, 2779.25], [1316.0, 3272.0], [1312.0, 3238.0], [1300.0, 2774.0], [1296.0, 3287.0], [1292.0, 3293.0], [1288.0, 3299.5], [1396.0, 3230.0], [1388.0, 2692.3333333333335], [1384.0, 3283.0], [1380.0, 3271.5], [1372.0, 3259.6], [1364.0, 3264.0], [1360.0, 3211.0], [1352.0, 2792.0], [1344.0, 3273.0], [1468.0, 3194.0], [1464.0, 3189.0], [1456.0, 3222.3333333333335], [1444.0, 3257.0], [1432.0, 3234.0], [1420.0, 3270.0], [1484.0, 2704.0], [1524.0, 2849.3333333333335], [1532.0, 2689.0], [1520.0, 3191.0], [1480.0, 3057.0], [1472.0, 3249.0], [1508.0, 2930.0], [1504.0, 3166.0], [1500.0, 2697.0], [1496.0, 2700.0], [1492.0, 3174.0], [1488.0, 3179.0], [1548.0, 2624.0], [1544.0, 2886.0], [1540.0, 3018.0], [1536.0, 2636.0], [1716.0, 3027.0], [1720.0, 3041.0], [1712.0, 3054.0], [1708.0, 2568.0], [1704.0, 2527.0], [1692.0, 2810.0], [1688.0, 2598.0], [1684.0, 2660.0], [1680.0, 3085.0], [1784.0, 3013.0], [1788.0, 2989.0], [1780.0, 2730.5], [1772.0, 2467.0], [1768.0, 2750.5], [1764.0, 2472.0], [1752.0, 2486.0], [1748.0, 2519.0], [1740.0, 2495.5], [1736.0, 2547.0], [1732.0, 3011.0], [1848.0, 2940.0], [1852.0, 2938.0], [1844.0, 2696.5], [1840.0, 2959.5], [1832.0, 2954.5], [1828.0, 2429.0], [1824.0, 2432.0], [1820.0, 2440.0], [1796.0, 2806.0], [1804.0, 2976.0], [1800.0, 2992.0], [1816.0, 2626.0], [1812.0, 2435.0], [1808.0, 2947.0], [1912.0, 2895.0], [1916.0, 2750.5], [1904.0, 2390.0], [1896.0, 2881.0], [1892.0, 2907.0], [1888.0, 2884.0], [1876.0, 2919.0], [1872.0, 2917.0], [1868.0, 2902.0], [1860.0, 2911.0], [1856.0, 2934.0], [1976.0, 2841.0], [1952.0, 2365.0], [1972.0, 2832.0], [1968.0, 2357.0], [1940.0, 2533.3333333333335], [1928.0, 2376.0], [1920.0, 2890.0], [1964.0, 2834.0], [1960.0, 2852.0], [2040.0, 2282.5], [2016.0, 2788.0], [1996.0, 2313.0], [1992.0, 2813.0], [1988.0, 2819.0], [2024.0, 2268.0], [2020.0, 2281.0], [2048.0, 2287.0], [2104.0, 2755.0], [2120.0, 2730.5], [2056.0, 2248.0], [2064.0, 2764.0], [2080.0, 2264.0], [2072.0, 2764.0], [2328.0, 2571.628712871287], [2408.0, 2568.0], [2376.0, 2615.0], [2368.0, 2604.0], [2360.0, 2606.0], [2352.0, 2594.0], [2344.0, 2601.0], [2336.0, 2615.0], [2528.0, 2450.416666666667], [2544.0, 2232.0], [2456.0, 2533.0], [2448.0, 2519.5], [2512.0, 1981.0], [2504.0, 2233.5], [2496.0, 2493.5], [2480.0, 2490.0], [2472.0, 2503.0], [2656.0, 1881.0], [2672.0, 2298.0], [2616.0, 1952.0], [2600.0, 2458.0], [2648.0, 2316.0], [2640.0, 2322.0], [2624.0, 2303.5], [2696.0, 1764.0], [2936.0, 2140.0], [3056.0, 1840.0], [3064.0, 2066.0], [3040.0, 1617.0], [2944.0, 1656.0], [2952.0, 1790.6666666666667], [2984.0, 1642.0], [2976.0, 1609.0], [3032.0, 2086.0], [3016.0, 1591.0], [3008.0, 1650.3333333333333], [3168.0, 1553.0], [3184.0, 1991.0], [3144.0, 1562.0], [3192.0, 1551.0], [3136.0, 1570.0], [3096.0, 2044.0], [3080.0, 2056.0], [3072.0, 1651.0], [3128.0, 1619.0], [3120.0, 2032.0], [3152.0, 1558.0], [3296.0, 1418.0], [3312.0, 1477.0], [3256.0, 1448.0], [3200.0, 1484.0], [3248.0, 1518.0], [3240.0, 1520.0], [3232.0, 1530.0], [3280.0, 1428.0], [3272.0, 1533.0], [3432.0, 1370.0], [3448.0, 1369.0], [3392.0, 1447.0], [3440.0, 1478.0], [3424.0, 1470.0], [3336.0, 1465.0], [3328.0, 1417.0], [3376.0, 1400.0], [3368.0, 1399.0], [3360.0, 1476.0], [3416.0, 1483.0], [3552.0, 1353.0], [3576.0, 1324.0], [3520.0, 1336.0], [3568.0, 1419.0], [3472.0, 1502.0], [3480.0, 1404.0], [3512.0, 1341.0], [3504.0, 1333.0], [3496.0, 1381.5], [3488.0, 1354.0], [3544.0, 1388.0], [3584.0, 1373.0], [3808.0, 1244.0], [3816.0, 1225.0], [3776.0, 1227.0], [3784.0, 1225.0], [3728.0, 1310.0], [3736.0, 1299.0], [3768.0, 1298.0], [3760.0, 1239.0], [3744.0, 1345.0], [3792.0, 1224.0], [3920.0, 1208.0], [3928.0, 1192.0], [3960.0, 1188.0], [3944.0, 1218.5], [4088.0, 1067.0], [4032.0, 1166.0], [4048.0, 1115.0], [4056.0, 1143.0], [4080.0, 1101.5], [4072.0, 1080.0], [3968.0, 1146.0], [3992.0, 1181.0], [4288.0, 1035.0], [4224.0, 1188.0], [4240.0, 1033.5], [4304.0, 1018.0], [4096.0, 1122.0], [4112.0, 1052.0], [4128.0, 1067.0], [4144.0, 1052.0], [4208.0, 1011.0], [4192.0, 1081.0], [4160.0, 1348.0], [4272.0, 1183.5], [4592.0, 1044.0], [4560.0, 933.5], [4496.0, 808.0], [4512.0, 1107.0], [4528.0, 1067.0], [4352.0, 944.0], [4384.0, 899.0], [4400.0, 878.0], [4464.0, 820.0], [4432.0, 844.0], [4736.0, 1028.0], [4752.0, 1022.0], [4800.0, 993.0], [4624.0, 1047.5], [4608.0, 1069.0], [4640.0, 1031.5], [4896.0, 887.0], [4880.0, 872.0], [4912.0, 875.0], [4928.0, 852.5], [4321.0, 1207.5], [4225.0, 1064.0], [4257.0, 1186.5], [4273.0, 1043.0], [4305.0, 1019.0], [4145.0, 1355.0], [4129.0, 1101.0], [4113.0, 1111.0], [4209.0, 1075.0], [4193.0, 1084.0], [4577.0, 1000.5], [4497.0, 1139.0], [4481.0, 813.0], [4513.0, 1080.0], [4529.0, 1061.0], [4561.0, 1049.0], [4465.0, 823.0], [4449.0, 1023.6666666666666], [4433.0, 845.0], [4417.0, 1151.25], [4817.0, 947.0], [4737.0, 1027.0], [4753.0, 1003.0], [4785.0, 951.5], [4801.0, 931.0], [4609.0, 1062.0], [4625.0, 977.0], [4657.0, 1044.0], [4721.0, 1009.0], [4705.0, 1031.5], [4881.0, 866.0], [4897.0, 892.0], [4913.0, 823.0], [2113.0, 2735.5], [2121.0, 2707.0], [2105.0, 2790.0], [2049.0, 2256.0], [2097.0, 2733.0], [2089.0, 2780.0], [2057.0, 2771.0], [2409.0, 2563.0], [2425.0, 2551.0], [2377.0, 2595.0], [2417.0, 2064.0], [2401.0, 2575.6666666666665], [2361.0, 2101.0], [2353.0, 2595.0], [2345.0, 2652.0], [2337.0, 2109.0], [2393.0, 2589.0], [2385.0, 2609.5], [2537.0, 2470.0], [2545.0, 2117.0], [2457.0, 2021.0], [2449.0, 2520.0], [2433.0, 2536.5], [2513.0, 2472.0], [2505.0, 2478.0], [2497.0, 2036.0], [2489.0, 2326.6666666666665], [2481.0, 2506.0], [2473.0, 2502.0], [2673.0, 1756.0], [2625.0, 2297.0], [2665.0, 2284.3333333333335], [2657.0, 2308.0], [2569.0, 2501.0], [2617.0, 2333.1111111111113], [2601.0, 2213.846153846154], [2649.0, 2285.0], [2633.0, 2309.0], [2705.0, 2000.0], [2697.0, 2276.0], [2689.0, 2272.0], [2937.0, 1671.0], [2921.0, 1681.5], [2953.0, 2126.0], [3065.0, 1622.0], [3041.0, 1612.6666666666667], [2969.0, 1657.5], [2945.0, 2132.0], [3025.0, 1843.0], [3001.0, 1631.5], [2993.0, 1652.0], [2985.0, 1642.0], [3097.0, 1642.0], [3177.0, 1573.5], [3137.0, 1565.0], [3169.0, 1550.0], [3089.0, 1763.6666666666667], [3129.0, 2021.0], [3121.0, 1526.0], [3105.0, 1816.0], [3161.0, 1686.3333333333333], [3153.0, 1608.0], [3313.0, 1470.0], [3273.0, 1574.0], [3305.0, 1423.5], [3225.0, 1470.0], [3217.0, 1499.0], [3257.0, 1597.0], [3241.0, 1470.0], [3289.0, 1480.0], [3265.0, 1493.5], [3433.0, 1381.0], [3441.0, 1382.0], [3353.0, 1408.0], [3345.0, 1428.0], [3329.0, 1410.0], [3417.0, 1425.0], [3401.0, 1449.1666666666667], [3393.0, 1476.5], [3385.0, 1398.0], [3369.0, 1401.0], [3481.0, 1502.0], [3577.0, 1372.0], [3569.0, 1377.0], [3561.0, 1422.5], [3473.0, 1408.0], [3465.0, 1413.0], [3457.0, 1494.0], [3505.0, 1387.0], [3497.0, 1350.0], [3489.0, 1449.0], [3537.0, 1400.5], [3529.0, 1370.0], [3521.0, 1433.0], [3697.0, 1318.0], [3601.0, 1364.5], [3593.0, 1318.5], [3585.0, 1417.0], [3737.0, 1302.0], [3817.0, 1202.0], [3721.0, 1265.6666666666667], [3713.0, 1315.0], [3753.0, 1297.0], [3801.0, 1208.0], [3793.0, 1223.0], [3785.0, 1267.0], [3777.0, 1234.0], [3921.0, 1151.0], [3953.0, 1145.0], [3945.0, 1190.0], [4081.0, 1134.0], [4089.0, 1126.0], [4033.0, 1479.0], [4049.0, 1118.0], [4073.0, 1133.0], [4065.0, 1300.25], [3977.0, 1187.5], [3985.0, 1181.0], [3993.0, 1180.0], [4025.0, 1178.6666666666667], [4017.0, 1117.0], [4001.0, 1176.5], [4338.0, 1048.6666666666667], [4226.0, 1063.0], [4242.0, 1009.5], [4274.0, 1325.0], [4322.0, 1241.0], [4306.0, 1024.0], [4290.0, 988.5], [4098.0, 1072.0], [4130.0, 1101.0], [4146.0, 1088.0], [4178.0, 1157.3333333333333], [4162.0, 1220.0], [4482.0, 1101.0], [4578.0, 1053.0], [4498.0, 1087.0], [4354.0, 1117.0], [4386.0, 1079.0], [4402.0, 1009.5], [4466.0, 1167.0], [4450.0, 1092.0], [4818.0, 937.0], [4738.0, 1014.0], [4834.0, 949.0], [4754.0, 1020.0], [4770.0, 987.0], [4626.0, 1077.0], [4610.0, 983.0], [4642.0, 1071.0], [4658.0, 962.0], [4882.0, 878.0], [4930.0, 825.0], [4307.0, 1024.0], [4323.0, 968.0], [4339.0, 1298.0], [4259.0, 1191.5], [4275.0, 1034.0], [4291.0, 1033.0], [4147.0, 1046.0], [4115.0, 1079.0], [4099.0, 1063.0], [4211.0, 1046.5], [4195.0, 1228.5], [4179.0, 1084.0], [4387.0, 898.0], [4547.0, 1003.75], [4595.0, 1060.6666666666667], [4499.0, 1086.0], [4515.0, 1077.5], [4531.0, 783.0], [4371.0, 1074.5], [4403.0, 879.0], [4467.0, 822.0], [4451.0, 1142.0], [4435.0, 979.5], [4835.0, 942.6666666666666], [4755.0, 1020.0], [4771.0, 946.0], [4819.0, 959.0], [4627.0, 1027.0], [4707.0, 1017.5], [4915.0, 850.5], [4931.0, 814.0], [1077.0, 3491.0], [1069.0, 2935.0], [1057.0, 3451.0], [1053.0, 3618.0], [1045.0, 3287.5], [1041.0, 3035.5], [1033.0, 2996.0], [1029.0, 3461.0], [1145.0, 3342.0], [1149.0, 3352.6666666666665], [1137.0, 3391.5], [1101.0, 3370.0], [1093.0, 3196.0], [1089.0, 3478.0], [1133.0, 3350.0], [1129.0, 3351.5], [1121.0, 3354.5], [1117.0, 2887.0], [1109.0, 3399.0], [1105.0, 3427.5], [1165.0, 3112.0], [1205.0, 2983.0], [1209.0, 3309.0], [1201.0, 3361.0], [1197.0, 2993.9090909090905], [1181.0, 3441.0], [1177.0, 3336.0], [1169.0, 2854.0], [1161.0, 3346.3333333333335], [1157.0, 3369.0], [1153.0, 3097.5], [1277.0, 2755.0], [1261.0, 3319.0], [1257.0, 3329.0], [1253.0, 3297.5], [1245.0, 3355.5], [1241.0, 3326.5], [1237.0, 3089.5], [1233.0, 3321.5], [1229.0, 3344.0], [1225.0, 3301.0], [1293.0, 3263.0], [1341.0, 2777.0], [1333.0, 3023.5], [1325.0, 2767.0], [1321.0, 2772.0], [1309.0, 3323.0], [1305.0, 2763.6666666666665], [1289.0, 2743.0], [1285.0, 3053.0], [1281.0, 2763.6666666666665], [1393.0, 2987.5], [1405.0, 2855.3333333333335], [1401.0, 2977.0], [1397.0, 2688.0], [1385.0, 3280.0], [1373.0, 3261.0], [1365.0, 2756.0], [1357.0, 3323.0], [1349.0, 3309.5], [1441.0, 3204.0], [1461.0, 3190.0], [1453.0, 3243.5], [1449.0, 3194.0], [1445.0, 2723.0], [1437.0, 3206.8], [1425.0, 3238.6666666666665], [1413.0, 3243.3333333333335], [1409.0, 3249.0], [1529.0, 3187.0], [1533.0, 3189.5], [1525.0, 2714.0], [1513.0, 2686.5], [1509.0, 2715.0], [1497.0, 2695.0], [1489.0, 3209.0], [1481.0, 3183.0], [1477.0, 3199.0], [1545.0, 2633.0], [1541.0, 3188.0], [1537.0, 3141.0], [1721.0, 3052.0], [1725.0, 3032.0], [1717.0, 3056.0], [1713.0, 2518.0], [1705.0, 3030.0], [1701.0, 3054.0], [1697.0, 2789.0], [1693.0, 3074.0], [1689.0, 3053.0], [1681.0, 3059.0], [1781.0, 2994.0], [1789.0, 2990.0], [1777.0, 2745.0], [1741.0, 2519.0], [1737.0, 3034.0], [1733.0, 3008.0], [1729.0, 3026.5], [1769.0, 2504.0], [1765.0, 3028.0], [1761.0, 2663.6666666666665], [1757.0, 2854.0], [1753.0, 2511.0], [1745.0, 2505.0], [1841.0, 2925.0], [1853.0, 2956.0], [1849.0, 2919.0], [1845.0, 2946.0], [1837.0, 2427.5], [1821.0, 2436.0], [1813.0, 2966.0], [1801.0, 2449.0], [1793.0, 2976.5], [1917.0, 2903.0], [1905.0, 2393.0], [1901.0, 2909.6666666666665], [1897.0, 2882.0], [1885.0, 2887.0], [1881.0, 2659.5], [1873.0, 2922.0], [1869.0, 2899.0], [1969.0, 2848.0], [1953.0, 2844.0], [1957.0, 2843.0], [1977.0, 2394.0], [1949.0, 2602.5], [1929.0, 2884.0], [1921.0, 2864.0], [1945.0, 2624.0], [1941.0, 2851.0], [1937.0, 2617.0], [1965.0, 2849.0], [1961.0, 2841.0], [2041.0, 2266.0], [2045.0, 2811.0], [2017.0, 2813.0], [2021.0, 2808.0], [2037.0, 2526.5], [2033.0, 2782.0], [1993.0, 2306.0], [1989.0, 2813.0], [2013.0, 2553.5], [2009.0, 2286.5], [2029.0, 2636.0], [2114.0, 2716.0], [2122.0, 2720.0], [2106.0, 2727.0], [2058.0, 2249.0], [2066.0, 2747.0], [2074.0, 2786.5], [2090.0, 2733.0], [2082.0, 2770.5], [2418.0, 2575.3333333333335], [2370.0, 2616.0], [2386.0, 2141.0], [2426.0, 2556.0], [2410.0, 2611.0], [2402.0, 2564.0], [2330.0, 2610.0], [2362.0, 2640.0], [2354.0, 2597.0], [2394.0, 2581.0], [2546.0, 2463.0], [2554.0, 1952.0], [2538.0, 2507.0], [2450.0, 2514.0], [2442.0, 2564.0], [2514.0, 1983.0], [2506.0, 2477.0], [2498.0, 2482.0], [2490.0, 2491.0], [2482.0, 2035.0], [2474.0, 2497.0], [2466.0, 2345.6666666666665], [2634.0, 2344.0], [2682.0, 2124.0], [2618.0, 2356.0], [2642.0, 2302.5], [2626.0, 2326.0], [2698.0, 2275.0], [2690.0, 2284.0], [2938.0, 1668.0], [2930.0, 1865.3333333333333], [2922.0, 1672.0], [3050.0, 1934.6666666666667], [3018.0, 1630.5], [3010.0, 1591.5], [3058.0, 1837.5], [2970.0, 2121.0], [2962.0, 1654.0], [2954.0, 1650.0], [3002.0, 1639.0], [2986.0, 1643.0], [3034.0, 1656.5], [3098.0, 2041.0], [3146.0, 1537.5], [3194.0, 1702.0], [3138.0, 1571.0], [3074.0, 1807.0], [3130.0, 1522.0], [3122.0, 2025.0], [3114.0, 1866.8], [3106.0, 2034.0], [3162.0, 1501.0], [3306.0, 1474.0], [3314.0, 1419.0], [3322.0, 1480.3333333333333], [3266.0, 1540.0], [3274.0, 1494.0], [3298.0, 1500.5], [3202.0, 1759.5], [3210.0, 1643.6666666666667], [3258.0, 1489.0], [3250.0, 1488.0], [3234.0, 1468.0], [3290.0, 1485.5], [3282.0, 1531.5], [3434.0, 1381.0], [3442.0, 1424.0], [3426.0, 1432.0], [3410.0, 1435.8333333333333], [3386.0, 1499.0], [3354.0, 1405.0], [3362.0, 1400.0], [3578.0, 1319.0], [3562.0, 1371.0], [3530.0, 1358.0], [3522.0, 1371.0], [3466.0, 1415.0], [3458.0, 1372.0], [3506.0, 1337.0], [3498.0, 1395.0], [3602.0, 1366.0], [3586.0, 1412.0], [3818.0, 1285.0], [3778.0, 1317.0], [3810.0, 1244.0], [3714.0, 1320.0], [3722.0, 1305.0], [3730.0, 1348.0], [3762.0, 1262.0], [3802.0, 1211.0], [3962.0, 1194.0], [3954.0, 1248.0], [3922.0, 1158.0], [3930.0, 1200.5], [3938.0, 1249.5], [4066.0, 1136.0], [4042.0, 1140.25], [4050.0, 1154.0], [4058.0, 1416.5], [4082.0, 1131.0], [3970.0, 1163.5], [3978.0, 1184.0], [3986.0, 1180.0], [3994.0, 1171.0], [4026.0, 1108.0], [4010.0, 1139.4], [4002.0, 1174.0], [4244.0, 1030.0], [4324.0, 965.0], [4100.0, 1115.0], [4116.0, 1040.0], [4212.0, 1360.0], [4196.0, 1084.0], [4580.0, 1027.5], [4500.0, 1155.0], [4484.0, 809.5], [4516.0, 1095.0], [4596.0, 1064.0], [4564.0, 1065.6666666666667], [4356.0, 946.0], [4372.0, 1204.0], [4388.0, 1159.0], [4404.0, 1139.0], [4468.0, 1077.0], [4452.0, 832.0], [4436.0, 841.0], [4420.0, 979.3333333333334], [4836.0, 942.0], [4756.0, 968.0], [4852.0, 936.0], [4740.0, 992.0], [4772.0, 1011.0], [4820.0, 963.0], [4804.0, 951.6666666666666], [4628.0, 1063.0], [4612.0, 1034.5], [4644.0, 1031.5], [4900.0, 865.0], [4229.0, 1129.3333333333333], [4325.0, 1238.0], [4245.0, 1056.0], [4261.0, 1003.0], [4341.0, 1229.5], [4293.0, 1007.0], [4117.0, 1112.0], [4213.0, 1027.0], [4549.0, 913.5], [4485.0, 1093.0], [4533.0, 971.3333333333334], [4581.0, 1049.0], [4373.0, 1286.0], [4389.0, 1157.0], [4405.0, 884.0], [4469.0, 823.0], [4453.0, 1138.0], [4437.0, 846.0], [4421.0, 864.0], [4741.0, 996.0], [4789.0, 969.5], [4805.0, 944.0], [4613.0, 1050.0], [4629.0, 1033.0], [4645.0, 1024.0], [4725.0, 977.25], [4885.0, 884.6666666666666], [4901.0, 891.0], [4917.0, 860.5], [4933.0, 838.5], [2107.0, 2740.0], [2123.0, 2702.0], [2115.0, 2718.0], [2051.0, 2778.0], [2099.0, 2766.5], [2075.0, 2746.0], [2411.0, 2579.0], [2427.0, 2532.0], [2331.0, 2618.0], [2395.0, 2592.0], [2379.0, 2579.0], [2363.0, 2591.0], [2355.0, 2099.0], [2347.0, 2610.0], [2339.0, 2603.0], [2555.0, 2218.5], [2459.0, 2095.0], [2515.0, 2468.0], [2507.0, 1986.0], [2499.0, 2480.0], [2491.0, 2484.0], [2483.0, 2492.0], [2475.0, 2499.0], [2627.0, 2328.0], [2635.0, 2325.0], [2675.0, 2039.0], [2659.0, 2289.5], [2651.0, 2296.0], [2643.0, 2288.0], [2795.0, 1720.0], [2707.0, 2252.0], [2699.0, 1797.0], [2691.0, 2285.0], [3043.0, 1669.0], [3011.0, 1591.0], [3019.0, 1588.0], [3059.0, 2065.0], [2963.0, 1634.0], [2955.0, 1707.0], [2947.0, 2129.5], [3003.0, 1638.0], [2995.0, 1638.5], [2979.0, 1798.6666666666667], [3035.0, 1630.0], [3027.0, 1606.5], [3171.0, 1598.5], [3147.0, 1559.0], [3187.0, 1677.0], [3179.0, 1577.5], [3099.0, 1585.0], [3091.0, 2046.5], [3083.0, 1770.3333333333333], [3075.0, 2057.0], [3131.0, 2020.0], [3123.0, 1629.0], [3115.0, 1576.0], [3155.0, 2009.5], [3227.0, 1482.0], [3267.0, 1494.0], [3315.0, 1467.0], [3307.0, 1416.0], [3219.0, 1771.5], [3259.0, 1492.0], [3251.0, 1468.0], [3243.0, 1514.0], [3291.0, 1479.0], [3347.0, 1403.0], [3435.0, 1375.0], [3339.0, 1431.3333333333333], [3387.0, 1438.0], [3379.0, 1455.0], [3371.0, 1430.5], [3419.0, 1407.5], [3411.0, 1430.3333333333333], [3555.0, 1328.0], [3579.0, 1376.0], [3523.0, 1383.0], [3571.0, 1349.0], [3475.0, 1395.0], [3483.0, 1405.5], [3515.0, 1354.3333333333333], [3507.0, 1338.0], [3499.0, 1348.0], [3491.0, 1403.5], [3547.0, 1378.0], [3531.0, 1434.0], [3595.0, 1369.5], [3731.0, 1308.0], [3739.0, 1333.0], [3715.0, 1315.0], [3771.0, 1344.0], [3763.0, 1237.0], [3755.0, 1269.5], [3747.0, 1264.6666666666667], [3803.0, 1205.0], [3795.0, 1257.0], [3787.0, 1247.0], [3931.0, 1241.0], [3963.0, 1190.0], [3955.0, 1243.0], [3947.0, 1170.0], [3939.0, 1183.0], [4091.0, 1075.0], [4035.0, 1166.0], [4043.0, 1156.0], [4051.0, 1158.0], [4075.0, 1401.0], [3971.0, 1137.0], [3979.0, 1181.0], [3987.0, 1181.0], [3995.0, 1133.0], [4027.0, 1169.0], [4019.0, 1189.5], [4011.0, 1217.0], [4342.0, 1228.0], [4230.0, 1063.0], [4246.0, 1013.0], [4262.0, 1000.0], [4310.0, 1106.3333333333333], [4294.0, 1035.0], [4102.0, 1251.0], [4134.0, 1142.75], [4150.0, 1064.6666666666667], [4214.0, 1073.0], [4198.0, 1059.5], [4550.0, 1129.0], [4582.0, 996.0], [4486.0, 1154.0], [4502.0, 807.0], [4518.0, 941.5], [4534.0, 1127.0], [4358.0, 945.5], [4374.0, 935.0], [4390.0, 895.0], [4406.0, 874.0], [4470.0, 1106.0], [4438.0, 844.0], [4838.0, 928.5], [4742.0, 996.0], [4854.0, 944.0], [4758.0, 986.0], [4790.0, 943.0], [4806.0, 953.0], [4630.0, 1023.0], [4710.0, 1000.0], [4694.0, 1020.3055555555558], [4886.0, 880.0], [4934.0, 866.0], [4902.0, 891.0], [4918.0, 881.0], [4327.0, 968.0], [4231.0, 1342.0], [4247.0, 1002.0], [4279.0, 995.5], [4343.0, 1278.0], [4295.0, 1306.0], [4151.0, 1098.0], [4135.0, 1051.0], [4119.0, 1081.0], [4215.0, 1027.0], [4199.0, 1084.0], [4183.0, 1035.5], [4167.0, 1114.4], [4375.0, 936.0], [4599.0, 1053.6666666666667], [4503.0, 1082.0], [4583.0, 1081.0], [4359.0, 1213.0], [4407.0, 876.0], [4471.0, 1110.0], [4439.0, 841.0], [4423.0, 1123.0], [4855.0, 896.0], [4839.0, 920.0], [4743.0, 942.0], [4759.0, 1020.0], [4775.0, 955.0], [4823.0, 944.0], [4615.0, 1059.0], [4631.0, 1070.0], [4903.0, 882.0], [4919.0, 882.0], [4935.0, 829.0], [539.0, 3916.0], [541.0, 3876.0], [537.0, 3920.0], [519.0, 3924.0], [517.0, 3907.3333333333335], [513.0, 3563.6666666666665], [535.0, 3879.0], [533.0, 3501.0], [531.0, 3712.0], [529.0, 3382.0], [527.0, 3421.0], [525.0, 3785.6666666666665], [521.0, 3447.5], [573.0, 3897.0], [575.0, 3355.5], [571.0, 3643.0], [569.0, 3602.0], [567.0, 3868.0], [565.0, 3868.0], [563.0, 3869.0], [557.0, 3868.0], [547.0, 3898.0], [555.0, 3870.0], [553.0, 3887.5], [605.0, 3404.0], [607.0, 3419.0], [603.0, 3378.0], [601.0, 3844.0], [599.0, 3566.5], [597.0, 3848.0], [595.0, 3879.5], [593.0, 3899.0], [591.0, 3900.0], [583.0, 3892.0], [581.0, 3872.0], [577.0, 3853.0], [589.0, 3884.0], [635.0, 3410.0], [639.0, 3750.0], [633.0, 3900.0], [631.0, 3900.0], [627.0, 3533.0], [625.0, 3362.0], [623.0, 3751.0], [621.0, 3828.0], [615.0, 3336.0], [611.0, 3645.0], [667.0, 3895.0], [665.0, 3849.0], [645.0, 3903.0], [643.0, 3568.0], [641.0, 3534.5], [663.0, 3607.0], [661.0, 3891.0], [659.0, 3606.5], [657.0, 3646.5], [655.0, 3899.0], [653.0, 3896.0], [651.0, 3397.0], [701.0, 3833.0], [695.0, 3788.3333333333335], [689.0, 3795.0], [685.0, 3871.0], [683.0, 3873.0], [681.0, 3712.0], [679.0, 3310.0], [709.0, 3863.0], [733.0, 3838.0], [731.0, 3760.5], [723.0, 3766.0], [721.0, 3764.0], [719.0, 3767.0], [717.0, 3471.5], [715.0, 3680.0], [713.0, 3770.0], [707.0, 3778.5], [705.0, 3807.3333333333335], [763.0, 3568.5], [761.0, 3734.0], [759.0, 3628.3333333333335], [751.0, 3702.25], [743.0, 3755.0], [737.0, 3818.0], [775.0, 3731.3333333333335], [797.0, 3631.0], [791.0, 3510.0], [789.0, 3718.0], [783.0, 3225.0], [781.0, 3726.0], [777.0, 3729.0], [771.0, 3308.0], [769.0, 3622.6666666666665], [817.0, 3700.0], [815.0, 3585.0], [813.0, 3622.0], [811.0, 3709.0], [809.0, 3630.0], [805.0, 3285.0], [803.0, 3714.3333333333335], [911.0, 3697.0], [991.0, 3662.5], [989.0, 3667.0], [987.0, 3606.3333333333335], [983.0, 3347.0], [981.0, 2994.0], [1017.0, 2960.0], [1021.0, 3640.0], [1023.0, 3497.0], [1019.0, 3553.5], [1015.0, 3644.0], [1011.0, 3471.0], [1007.0, 3042.0], [993.0, 3365.5], [999.0, 3651.0], [997.0, 3648.0], [1003.0, 3651.0], [1001.0, 3653.0], [1074.0, 3034.5], [1086.0, 3392.0], [1082.0, 3394.5], [1078.0, 3431.0], [1058.0, 3483.0], [1054.0, 2958.5], [1026.0, 3303.0], [1050.0, 3368.0], [1046.0, 2950.0], [1038.0, 3217.75], [1034.0, 3461.0], [1146.0, 3338.0], [1150.0, 3344.0], [1138.0, 3379.0], [1102.0, 3375.0], [1098.0, 3399.0], [1090.0, 3479.0], [1134.0, 3349.0], [1126.0, 3371.0], [1122.0, 3351.0], [1118.0, 3399.0], [1114.0, 3359.5], [1110.0, 3369.0], [1106.0, 3406.0], [1210.0, 3357.0], [1214.0, 3359.0], [1206.0, 3360.0], [1186.0, 2848.5], [1182.0, 2852.0], [1178.0, 3346.0], [1174.0, 3215.6666666666665], [1170.0, 2854.0], [1158.0, 2859.0], [1154.0, 3371.0], [1278.0, 3304.0], [1274.0, 3292.5], [1230.0, 3343.0], [1218.0, 3312.0], [1262.0, 3328.0], [1258.0, 3327.0], [1250.0, 3303.0], [1246.0, 3293.0], [1242.0, 3302.0], [1238.0, 3290.0], [1234.0, 2839.0], [1338.0, 3073.3333333333335], [1342.0, 2999.5], [1334.0, 3281.0], [1330.0, 2765.6666666666665], [1326.0, 2773.0], [1322.0, 2808.0], [1314.0, 3043.0], [1310.0, 3028.0], [1290.0, 2742.0], [1282.0, 3270.0], [1302.0, 3011.5], [1298.0, 2997.5], [1358.0, 3046.2], [1406.0, 3247.0], [1402.0, 2680.0], [1390.0, 3280.0], [1382.0, 2988.0], [1378.0, 3293.0], [1366.0, 3264.0], [1362.0, 3264.0], [1350.0, 3211.0], [1346.0, 3239.5], [1422.0, 3236.0], [1470.0, 3222.0], [1466.0, 2969.0], [1450.0, 2939.0], [1442.0, 3194.0], [1438.0, 3230.0], [1430.0, 3237.0], [1414.0, 3242.0], [1410.0, 2688.0], [1526.0, 3142.0], [1534.0, 3189.0], [1522.0, 2644.0], [1486.0, 2944.0], [1482.0, 3180.0], [1474.0, 2934.5], [1518.0, 2830.25], [1514.0, 2716.0], [1510.0, 2689.0], [1506.0, 2711.6666666666665], [1502.0, 2694.0], [1494.0, 2912.0], [1490.0, 3238.0], [1546.0, 2675.0], [1542.0, 3185.0], [1726.0, 3018.0], [1710.0, 3033.0], [1698.0, 3040.0], [1694.0, 3039.0], [1690.0, 3085.0], [1682.0, 3087.0], [1678.0, 3062.0], [1674.0, 3092.0], [1786.0, 2739.0], [1778.0, 2486.0], [1774.0, 2509.5], [1766.0, 2472.0], [1758.0, 2504.0], [1754.0, 2512.0], [1746.0, 2490.0], [1738.0, 3002.0], [1734.0, 2537.0], [1850.0, 2918.0], [1842.0, 2925.0], [1838.0, 2942.0], [1834.0, 2429.0], [1830.0, 2977.5], [1826.0, 2691.5], [1818.0, 2440.0], [1810.0, 2708.0], [1806.0, 2969.0], [1802.0, 2957.0], [1798.0, 2981.5], [1890.0, 2885.5], [1906.0, 2899.0], [1902.0, 2901.0], [1898.0, 2877.0], [1894.0, 2913.5], [1886.0, 2918.0], [1858.0, 2934.5], [1870.0, 2923.0], [1866.0, 2922.6666666666665], [1862.0, 2917.5], [1978.0, 2860.0], [1982.0, 2521.3333333333335], [1974.0, 2829.5], [1950.0, 2843.0], [1926.0, 2710.3333333333335], [1922.0, 2891.0], [1930.0, 2376.0], [1966.0, 2832.0], [1958.0, 2621.0], [1998.0, 2554.5], [2022.0, 2785.0], [2038.0, 2793.0], [2034.0, 2300.0], [1994.0, 2833.0], [1986.0, 2821.3333333333335], [2010.0, 2796.0], [2006.0, 2644.0], [2002.0, 2632.0], [2030.0, 2795.0], [2026.0, 2269.0], [2018.0, 2788.0], [2060.0, 2502.5], [2124.0, 2734.0], [2108.0, 2750.0], [2068.0, 2413.6666666666665], [2100.0, 2763.0], [2092.0, 2739.5], [2084.0, 2759.0], [2076.0, 2740.0], [2420.0, 2572.0], [2428.0, 2529.0], [2412.0, 2615.0], [2388.0, 2579.5], [2348.0, 2614.0], [2452.0, 2534.0], [2500.0, 2481.0], [2556.0, 2499.0], [2460.0, 2286.0], [2444.0, 2555.0], [2516.0, 1958.0], [2492.0, 2508.0], [2476.0, 2494.0], [2468.0, 2518.5], [2676.0, 2292.0], [2684.0, 2290.0], [2668.0, 2278.0], [2660.0, 1816.0], [2620.0, 2346.0], [2588.0, 1953.0], [2644.0, 2323.0], [2796.0, 1751.0], [2708.0, 1760.0], [2940.0, 1902.5], [2932.0, 1666.5], [2924.0, 2153.5], [2916.0, 2028.6108374384237], [2972.0, 1862.0], [3068.0, 1611.0], [3060.0, 2066.0], [3052.0, 1593.0], [3004.0, 1694.0], [2948.0, 2136.0], [2956.0, 1655.0], [2964.0, 1647.0], [2988.0, 1636.5], [3028.0, 1626.0], [3188.0, 1545.0], [3196.0, 1548.0], [3100.0, 2043.0], [3092.0, 2050.0], [3084.0, 1602.0], [3076.0, 1695.0], [3156.0, 1560.0], [3148.0, 2011.0], [3324.0, 1421.0], [3276.0, 1429.0], [3316.0, 1461.0], [3220.0, 1535.0], [3252.0, 1560.0], [3236.0, 1522.0], [3292.0, 1427.0], [3284.0, 1477.5], [3348.0, 1454.0], [3428.0, 1382.5], [3452.0, 1449.0], [3436.0, 1439.0], [3340.0, 1414.0], [3332.0, 1442.3333333333333], [3388.0, 1423.0], [3364.0, 1453.0], [3404.0, 1402.0], [3556.0, 1341.0], [3580.0, 1379.0], [3524.0, 1340.0], [3564.0, 1351.5], [3516.0, 1376.0], [3460.0, 1420.0], [3484.0, 1352.0], [3500.0, 1396.0], [3492.0, 1353.0], [3548.0, 1381.0], [3540.0, 1395.6666666666667], [3532.0, 1339.0], [3588.0, 1384.5], [3724.0, 1281.5], [3812.0, 1242.0], [3780.0, 1275.0], [3788.0, 1263.0], [3716.0, 1313.0], [3772.0, 1235.0], [3764.0, 1237.0], [3756.0, 1253.0], [3804.0, 1198.0], [3796.0, 1211.0], [3916.0, 1211.2499999999998], [3948.0, 1243.0], [4092.0, 1070.0], [4084.0, 1108.0], [4052.0, 1108.0], [4060.0, 1143.0], [3972.0, 1185.0], [3980.0, 1134.0], [3988.0, 1130.0], [3996.0, 1175.0], [4028.0, 1166.0], [4004.0, 1122.5], [4328.0, 970.0], [4232.0, 1020.0], [4248.0, 1009.0], [4344.0, 952.0], [4136.0, 1101.0], [4152.0, 1057.0], [4200.0, 1080.0], [4184.0, 1341.0], [4168.0, 1091.0], [4280.0, 1039.0], [4568.0, 1068.5], [4488.0, 1126.5], [4520.0, 1072.5], [4600.0, 1050.0], [4552.0, 1081.0], [4360.0, 944.0], [4376.0, 1198.0], [4392.0, 1027.0], [4408.0, 1137.0], [4456.0, 1134.3333333333333], [4440.0, 835.0], [4424.0, 993.0], [4824.0, 965.0], [4856.0, 920.0], [4840.0, 918.0], [4760.0, 980.0], [4776.0, 946.0], [4808.0, 922.0], [4632.0, 1062.0], [4648.0, 1017.0], [4728.0, 965.3333333333334], [4712.0, 971.0], [4696.0, 1015.0], [4888.0, 904.0], [4904.0, 851.0], [4920.0, 879.0], [4936.0, 865.0], [4313.0, 1065.3333333333333], [4249.0, 1334.0], [4345.0, 955.0], [4265.0, 1214.3333333333333], [4329.0, 959.0], [4297.0, 986.0], [4121.0, 1044.0], [4105.0, 1079.0], [4185.0, 1086.0], [4505.0, 967.0], [4537.0, 970.0], [4569.0, 1085.0], [4361.0, 1278.0], [4377.0, 1197.0], [4409.0, 1133.0], [4473.0, 955.0], [4457.0, 1081.0], [4825.0, 919.0], [4809.0, 951.0], [4793.0, 958.0], [4857.0, 946.0], [4841.0, 917.0], [4617.0, 981.0], [4633.0, 1069.0], [4649.0, 1045.0], [4729.0, 961.0], [4713.0, 998.25], [4697.0, 1039.0], [4889.0, 893.0], [4937.0, 863.0], [4905.0, 852.0], [4921.0, 876.0], [2125.0, 2707.0], [2117.0, 2713.5], [2053.0, 2519.5], [2101.0, 2741.0], [2077.0, 2242.0], [2373.0, 2258.6666666666665], [2381.0, 2326.5], [2429.0, 2531.0], [2333.0, 2623.0], [2357.0, 2347.5], [2341.0, 2628.0], [2389.0, 2592.0], [2453.0, 2545.0], [2461.0, 2092.0], [2445.0, 2541.0], [2437.0, 2558.25], [2509.0, 2237.5], [2501.0, 2022.0], [2493.0, 2038.0], [2485.0, 2246.0], [2477.0, 2501.0], [2677.0, 1816.0], [2685.0, 2031.5], [2669.0, 1814.0], [2621.0, 2340.0], [2589.0, 2495.0], [2597.0, 2461.0], [2653.0, 2048.5], [2637.0, 2310.0], [2701.0, 2240.5], [2693.0, 2262.0], [2941.0, 1661.0], [2973.0, 1618.0], [3045.0, 1718.0], [2957.0, 1650.0], [2949.0, 2127.0], [3037.0, 1623.5], [3021.0, 1611.5], [3013.0, 1615.5], [3005.0, 1641.0], [2997.0, 1638.0], [2981.0, 1651.5], [3181.0, 1770.5], [3141.0, 1884.6666666666667], [3189.0, 1553.0], [3197.0, 1545.0], [3101.0, 2039.0], [3093.0, 2048.0], [3133.0, 1623.0], [3125.0, 2026.0], [3117.0, 2032.5], [3109.0, 1907.3333333333333], [3165.0, 1667.0], [3213.0, 1476.6666666666667], [3301.0, 1469.6666666666667], [3229.0, 1496.0], [3221.0, 1467.0], [3205.0, 1644.0], [3261.0, 1441.5], [3253.0, 1454.0], [3245.0, 1583.5], [3237.0, 1567.0], [3293.0, 1477.0], [3285.0, 1528.0], [3269.0, 1514.0], [3349.0, 1400.0], [3357.0, 1507.0], [3341.0, 1459.0], [3333.0, 1412.0], [3413.0, 1387.5], [3397.0, 1450.0], [3373.0, 1427.0], [3365.0, 1453.0], [3581.0, 1326.0], [3557.0, 1375.0], [3477.0, 1363.0], [3493.0, 1396.0], [3525.0, 1380.0], [3597.0, 1396.5], [3741.0, 1307.0], [3813.0, 1191.0], [3733.0, 1256.0], [3717.0, 1314.0], [3773.0, 1275.0], [3757.0, 1286.0], [3797.0, 1216.0], [3781.0, 1222.0], [3917.0, 1255.0], [3965.0, 1212.5], [3925.0, 1216.0], [3933.0, 1193.5], [3957.0, 1219.0], [3941.0, 1190.5], [3861.0, 1220.5], [4053.0, 1110.0], [4045.0, 1120.5], [4061.0, 1415.0], [4069.0, 1216.3333333333333], [3997.0, 1175.0], [4029.0, 1167.0], [4005.0, 1164.0], [4298.0, 1305.0], [4330.0, 1234.0], [4250.0, 1000.0], [4314.0, 974.0], [4106.0, 1114.0], [4122.0, 1107.0], [4138.0, 1076.5], [4154.0, 1068.5], [4218.0, 1042.6666666666667], [4570.0, 1002.0], [4586.0, 1042.3333333333333], [4506.0, 1091.0], [4538.0, 1062.0], [4362.0, 1212.0], [4378.0, 930.0], [4394.0, 890.0], [4474.0, 1145.0], [4458.0, 1146.0], [4426.0, 861.5], [4858.0, 912.0], [4746.0, 979.0], [4762.0, 1016.0], [4778.0, 944.0], [4842.0, 908.0], [4826.0, 950.0], [4810.0, 940.0], [4618.0, 1038.0], [4650.0, 1031.0], [4698.0, 1036.0], [4890.0, 903.0], [4906.0, 890.0], [4922.0, 824.0], [4347.0, 954.5], [4251.0, 1051.0], [4235.0, 1243.3333333333333], [4267.0, 997.5], [4283.0, 1002.6666666666666], [4331.0, 1296.0], [4315.0, 1004.0], [4155.0, 1091.0], [4139.0, 1099.0], [4123.0, 1059.0], [4219.0, 1357.0], [4203.0, 1176.0], [4171.0, 1140.6666666666667], [4571.0, 1066.0], [4491.0, 917.6666666666666], [4507.0, 1099.0], [4523.0, 975.3333333333334], [4555.0, 869.0], [4363.0, 1210.0], [4379.0, 931.0], [4395.0, 1149.0], [4411.0, 1049.5], [4443.0, 949.3333333333334], [4427.0, 852.0], [4827.0, 957.0], [4763.0, 1014.0], [4779.0, 965.0], [4795.0, 960.5], [4811.0, 946.0], [4635.0, 1060.5], [4651.0, 967.0], [4731.0, 972.0], [4715.0, 1014.5], [4875.0, 924.5], [1083.0, 3400.0], [1087.0, 3385.0], [1079.0, 3431.0], [1039.0, 2957.0], [1031.0, 3473.5], [1027.0, 3636.0], [1071.0, 3021.5], [1067.0, 3275.0], [1063.0, 3025.3333333333335], [1059.0, 2978.0], [1051.0, 3529.0], [1047.0, 3117.0], [1043.0, 3287.5], [1103.0, 3369.0], [1151.0, 3340.0], [1139.0, 3340.0], [1135.0, 3346.0], [1131.0, 3345.5], [1127.0, 3445.0], [1119.0, 2884.0], [1111.0, 3395.0], [1107.0, 2955.0], [1099.0, 3375.0], [1091.0, 3379.0], [1211.0, 3359.0], [1203.0, 3360.0], [1183.0, 2850.0], [1179.0, 3343.0], [1167.0, 3347.5], [1163.0, 3337.5], [1155.0, 3341.0], [1255.0, 3097.0], [1259.0, 3334.0], [1251.0, 3163.6666666666665], [1247.0, 3326.0], [1243.0, 3308.0], [1239.0, 3305.0], [1235.0, 3380.0], [1231.0, 3376.0], [1219.0, 3301.0], [1339.0, 3282.0], [1343.0, 3221.0], [1335.0, 3219.0], [1331.0, 2759.0], [1327.0, 2775.0], [1323.0, 3236.0], [1315.0, 2764.0], [1311.0, 2766.0], [1283.0, 3302.0], [1295.0, 3035.5], [1287.0, 2742.0], [1307.0, 3045.0], [1299.0, 3289.0], [1407.0, 2688.0], [1399.0, 3265.0], [1391.0, 2972.5], [1383.0, 3282.0], [1375.0, 2740.0], [1367.0, 3268.0], [1363.0, 3261.5], [1351.0, 3211.0], [1347.0, 3273.0], [1467.0, 3189.0], [1471.0, 3186.0], [1463.0, 3189.0], [1459.0, 3212.6666666666665], [1451.0, 3259.0], [1447.0, 3208.0], [1443.0, 3212.0], [1439.0, 3232.0], [1419.0, 2907.0], [1431.0, 3196.0], [1427.0, 3266.0], [1487.0, 3181.0], [1531.0, 2638.0], [1535.0, 3190.0], [1527.0, 2710.0], [1519.0, 2710.0], [1511.0, 2693.0], [1495.0, 2701.0], [1491.0, 3240.0], [1483.0, 3181.0], [1475.0, 3220.0], [1547.0, 3218.0], [1723.0, 3049.5], [1727.0, 2571.0], [1715.0, 3056.5], [1679.0, 3055.0], [1675.0, 3062.0], [1671.0, 2972.0000000000005], [1711.0, 3056.0], [1707.0, 3061.5], [1703.0, 3052.0], [1699.0, 3039.0], [1695.0, 3083.0], [1687.0, 2917.3333333333335], [1683.0, 3085.0], [1743.0, 2489.5], [1791.0, 2738.5], [1787.0, 2492.0], [1775.0, 2479.0], [1771.0, 2482.5], [1751.0, 3011.3333333333335], [1747.0, 3020.0], [1735.0, 2498.0], [1731.0, 2502.0], [1807.0, 3005.0], [1851.0, 2918.0], [1855.0, 2664.5], [1847.0, 2932.0], [1835.0, 2985.0], [1827.0, 2958.0], [1823.0, 2686.0], [1819.0, 2963.0], [1811.0, 2440.0], [1803.0, 2448.0], [1799.0, 2978.0], [1871.0, 2896.0], [1911.0, 2756.25], [1919.0, 2637.5], [1907.0, 2894.0], [1903.0, 2874.0], [1891.0, 2905.0], [1887.0, 2918.0], [1883.0, 2639.5], [1879.0, 2910.3333333333335], [1867.0, 2904.0], [1863.0, 2931.0], [1859.0, 2912.0], [1975.0, 2826.0], [1979.0, 2823.0], [1983.0, 2889.0], [1955.0, 2363.5], [1959.0, 2838.0], [1971.0, 2835.5], [1951.0, 2358.0], [1935.0, 2867.75], [1931.0, 2904.0], [1927.0, 2380.0], [1923.0, 2867.0], [1947.0, 2848.5], [1943.0, 2869.0], [1967.0, 2835.0], [1963.0, 2852.5], [2035.0, 2796.0], [2047.0, 2257.5], [2023.0, 2821.0], [2043.0, 2522.0], [1999.0, 2841.0], [1995.0, 2326.0], [1991.0, 2570.0], [1987.0, 2327.0], [2015.0, 2803.5], [2011.0, 2792.0], [2007.0, 2820.0], [2003.0, 2294.0], [2031.0, 2798.0], [2062.0, 2766.0], [2126.0, 2702.0], [2118.0, 2712.0], [2054.0, 2254.0], [2078.0, 2771.0], [2102.0, 2722.0], [2094.0, 2730.0], [2086.0, 2496.5], [2422.0, 2554.0], [2430.0, 2525.0], [2382.0, 2576.0], [2374.0, 2602.0], [2390.0, 2620.0], [2414.0, 2586.0], [2406.0, 2570.75], [2366.0, 2609.3333333333335], [2334.0, 2605.0], [2350.0, 2104.5], [2342.0, 2611.0], [2398.0, 2590.6666666666665], [2438.0, 2067.0], [2502.0, 1992.0], [2462.0, 2021.0], [2446.0, 2522.0], [2510.0, 1984.0], [2494.0, 1998.0], [2486.0, 2494.0], [2478.0, 2548.0], [2470.0, 2509.0], [2670.0, 2264.0], [2686.0, 1740.0], [2662.0, 1822.0], [2622.0, 2336.0], [2582.0, 2227.5], [2574.0, 2359.75], [2598.0, 2491.0], [2654.0, 2270.0], [2646.0, 2304.0], [2630.0, 2322.3333333333335], [2710.0, 2012.0], [2702.0, 2242.0], [2926.0, 1669.0], [2918.0, 1914.5], [2974.0, 1704.0], [3054.0, 1818.0], [3062.0, 1616.0], [3070.0, 1631.5], [2966.0, 1645.0], [2958.0, 1621.0], [2998.0, 1695.0], [2990.0, 1644.5], [2982.0, 1639.0], [3030.0, 1607.0], [3022.0, 2093.0], [3182.0, 1546.0], [3198.0, 1476.0], [3142.0, 2018.0], [3190.0, 1495.0], [3174.0, 1701.6666666666667], [3102.0, 2041.0], [3094.0, 1589.0], [3086.0, 1826.0], [3078.0, 1631.5], [3126.0, 1573.0], [3118.0, 2030.0], [3158.0, 1532.5], [3150.0, 1757.5], [3302.0, 1469.0], [3270.0, 1531.0], [3278.0, 1527.0], [3310.0, 1439.0], [3262.0, 1494.0], [3206.0, 1474.0], [3230.0, 1518.0], [3254.0, 1595.0], [3238.0, 1522.0], [3294.0, 1476.0], [3286.0, 1529.0], [3414.0, 1485.0], [3430.0, 1433.0], [3422.0, 1465.6666666666667], [3342.0, 1415.0], [3334.0, 1454.0], [3350.0, 1407.0], [3374.0, 1494.0], [3486.0, 1375.0], [3574.0, 1360.3333333333333], [3566.0, 1354.5], [3534.0, 1376.0], [3518.0, 1365.5], [3470.0, 1367.25], [3510.0, 1373.3333333333333], [3494.0, 1402.0], [3710.0, 1334.3551401869158], [3718.0, 1316.0], [3814.0, 1285.0], [3782.0, 1267.0], [3790.0, 1313.5], [3774.0, 1274.0], [3766.0, 1257.5], [3758.0, 1244.0], [3750.0, 1250.0], [3918.0, 1211.0], [3934.0, 1194.0], [3958.0, 1145.0], [3950.0, 1247.0], [3942.0, 1198.0], [4078.0, 1332.3333333333333], [4038.0, 1135.6666666666667], [4054.0, 1420.0], [4086.0, 1102.5], [4070.0, 1097.0], [4030.0, 1136.0], [3982.0, 1135.0], [3990.0, 1154.5], [3998.0, 1127.0], [4022.0, 1134.6666666666667], [4300.0, 1029.0], [4332.0, 1234.0], [4348.0, 953.0], [4236.0, 1054.0], [4268.0, 1042.0], [4252.0, 1059.0], [4220.0, 1072.0], [4108.0, 1088.0], [4124.0, 1057.0], [4204.0, 1077.0], [4188.0, 1085.6666666666667], [4572.0, 1074.0], [4588.0, 994.0], [4492.0, 1097.0], [4508.0, 1082.0], [4524.0, 785.0], [4540.0, 921.5], [4556.0, 1051.0], [4380.0, 923.0], [4396.0, 895.0], [4412.0, 869.0], [4476.0, 958.0], [4460.0, 1168.0], [4444.0, 1096.0], [4428.0, 861.0], [4860.0, 934.5], [4764.0, 1010.0], [4780.0, 967.0], [4796.0, 960.0], [4620.0, 1020.5], [4652.0, 1027.0], [4892.0, 878.5], [4908.0, 834.5], [4317.0, 1243.5], [4253.0, 1335.0], [4269.0, 1040.0], [4285.0, 1036.0], [4301.0, 1026.0], [4141.0, 1206.5], [4125.0, 1107.0], [4109.0, 1115.0], [4205.0, 1082.0], [4173.0, 1216.5], [4573.0, 1061.0], [4605.0, 1046.6], [4493.0, 809.0], [4509.0, 1091.0], [4525.0, 794.0], [4365.0, 1210.0], [4381.0, 1189.0], [4397.0, 887.0], [4413.0, 868.0], [4477.0, 1136.0], [4445.0, 1095.0], [4845.0, 932.6666666666666], [4813.0, 939.0], [4781.0, 946.0], [4637.0, 972.5], [4653.0, 1034.0], [4733.0, 963.0], [4717.0, 1031.0], [2055.0, 2772.0], [2111.0, 2754.6666666666665], [2071.0, 2582.3333333333335], [2063.0, 2372.0], [2103.0, 2757.0], [2095.0, 2226.0], [2087.0, 2766.0], [2079.0, 2739.0], [2431.0, 2531.0], [2335.0, 2621.0], [2391.0, 2617.0], [2383.0, 2626.0], [2367.0, 2096.0], [2359.0, 2360.5], [2351.0, 2596.0], [2343.0, 2102.0], [2463.0, 2529.0], [2551.0, 2070.0], [2455.0, 2282.5], [2439.0, 2536.0], [2511.0, 1995.0], [2479.0, 2495.0], [2471.0, 2520.0], [2671.0, 2292.0], [2679.0, 2290.0], [2687.0, 1812.0], [2639.0, 2304.0], [2663.0, 2273.0], [2615.0, 2217.666666666667], [2583.0, 2405.666666666667], [2575.0, 2343.4285714285716], [2655.0, 2307.0], [2647.0, 2332.0], [2711.0, 2267.0], [2703.0, 2241.0], [2695.0, 2262.5], [2943.0, 1901.0], [2935.0, 1847.3333333333333], [2927.0, 1661.0], [2919.0, 2152.0], [3047.0, 1757.0], [3063.0, 1618.0], [3023.0, 2090.0], [3071.0, 1653.0], [3015.0, 1590.5], [2975.0, 1649.0], [2967.0, 1633.0], [2959.0, 1698.0], [2999.0, 1634.0], [2983.0, 2113.0], [3031.0, 1621.0], [3175.0, 1997.0], [3191.0, 1593.0], [3199.0, 1479.0], [3151.0, 2008.0], [3183.0, 1550.0], [3103.0, 1583.0], [3079.0, 1650.0], [3135.0, 1590.0], [3127.0, 2025.0], [3119.0, 2029.0], [3167.0, 1801.0], [3303.0, 1423.0], [3319.0, 1432.6666666666667], [3327.0, 1483.0], [3311.0, 1415.0], [3263.0, 1488.0], [3207.0, 1478.0], [3215.0, 1498.5], [3231.0, 1477.0], [3255.0, 1547.0], [3247.0, 1461.5], [3239.0, 1520.0], [3295.0, 1477.0], [3279.0, 1464.3333333333333], [3271.0, 1488.0], [3431.0, 1390.0], [3447.0, 1424.0], [3455.0, 1415.0], [3439.0, 1427.0], [3359.0, 1453.0], [3351.0, 1400.0], [3343.0, 1405.0], [3335.0, 1457.0], [3375.0, 1445.0], [3367.0, 1423.0], [3415.0, 1486.0], [3399.0, 1493.0], [3567.0, 1373.0], [3575.0, 1376.0], [3559.0, 1355.5], [3519.0, 1372.0], [3463.0, 1399.3333333333333], [3479.0, 1455.0], [3487.0, 1361.0], [3511.0, 1385.0], [3503.0, 1372.3333333333333], [3535.0, 1383.5], [3527.0, 1405.0], [3599.0, 1317.5], [3711.0, 1368.0], [3591.0, 1353.0], [3791.0, 1265.0], [3799.0, 1212.5], [3743.0, 1279.5], [3735.0, 1303.0], [3727.0, 1303.6666666666667], [3759.0, 1242.0], [3751.0, 1244.0], [3807.0, 1250.6666666666667], [3783.0, 1224.0], [3959.0, 1142.0], [3967.0, 1144.0], [3927.0, 1226.0], [3951.0, 1168.5], [3991.0, 1127.0], [4071.0, 1403.0], [4087.0, 1126.0], [4095.0, 1089.0], [4047.0, 1154.0], [4055.0, 1102.0], [4031.0, 1122.0], [3975.0, 1187.3333333333333], [3983.0, 1230.0], [3999.0, 1216.0], [4015.0, 1143.0], [4350.0, 948.0], [4302.0, 1025.0], [4238.0, 1173.5], [4270.0, 1000.0], [4286.0, 1038.0], [4222.0, 1019.0], [4110.0, 1118.0], [4142.0, 1102.0], [4158.0, 1092.3333333333333], [4206.0, 1026.0], [4558.0, 1054.5], [4606.0, 987.0], [4494.0, 1090.0], [4510.0, 801.0], [4526.0, 1063.0], [4542.0, 1088.5], [4478.0, 815.0], [4382.0, 923.0], [4398.0, 1216.0], [4462.0, 953.0], [4446.0, 1094.0], [4430.0, 857.5], [4814.0, 939.5], [4750.0, 1001.75], [4782.0, 965.0], [4798.0, 938.0], [4622.0, 1006.0], [4638.0, 1029.0], [4734.0, 966.0], [4718.0, 1023.0], [4702.0, 1002.5], [4894.0, 881.5], [4878.0, 941.0], [4910.0, 859.5], [4926.0, 853.75], [4335.0, 1142.6666666666667], [4351.0, 1218.0], [4255.0, 1026.0], [4287.0, 990.0], [4303.0, 1301.0], [4159.0, 1349.0], [4143.0, 1098.0], [4127.0, 1083.5], [4111.0, 1114.0], [4207.0, 1018.0], [4191.0, 1065.3333333333333], [4175.0, 1189.5], [4591.0, 1042.0], [4607.0, 987.0], [4527.0, 788.0], [4543.0, 1060.0], [4575.0, 1069.0], [4479.0, 1104.0], [4367.0, 1079.5], [4383.0, 904.0], [4399.0, 1142.0], [4463.0, 1080.0], [4431.0, 1110.0], [4831.0, 939.25], [4751.0, 1012.0], [4767.0, 951.6666666666666], [4783.0, 998.0], [4799.0, 941.0], [4815.0, 935.0], [4735.0, 966.0], [4655.0, 1022.0], [4703.0, 1027.0], [4879.0, 914.857142857143], [4895.0, 882.0], [1.0, 3885.0]], "isOverall": false, "label": "HTTP 요청", "isController": false}, {"data": [[2458.6480000000024, 2305.807600000003]], "isOverall": false, "label": "HTTP 요청-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4937.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 11333.333333333334, "minX": 1.72049244E12, "maxY": 49833.333333333336, "series": [{"data": [[1.72049244E12, 49833.333333333336]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72049244E12, 11333.333333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72049244E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2305.807600000003, "minX": 1.72049244E12, "maxY": 2305.807600000003, "series": [{"data": [[1.72049244E12, 2305.807600000003]], "isOverall": false, "label": "HTTP 요청", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72049244E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2241.563800000004, "minX": 1.72049244E12, "maxY": 2241.563800000004, "series": [{"data": [[1.72049244E12, 2241.563800000004]], "isOverall": false, "label": "HTTP 요청", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72049244E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 762.0916000000002, "minX": 1.72049244E12, "maxY": 762.0916000000002, "series": [{"data": [[1.72049244E12, 762.0916000000002]], "isOverall": false, "label": "HTTP 요청", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72049244E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 25.0, "minX": 1.72049244E12, "maxY": 4372.0, "series": [{"data": [[1.72049244E12, 4372.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72049244E12, 3796.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72049244E12, 4298.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72049244E12, 3995.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72049244E12, 25.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72049244E12, 2300.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72049244E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 67.0, "minX": 63.0, "maxY": 3785.0, "series": [{"data": [[1236.0, 1072.0], [1330.0, 2854.5], [1348.0, 1671.5], [63.0, 67.0], [1023.0, 3785.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1348.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 66.0, "minX": 63.0, "maxY": 3729.0, "series": [{"data": [[1236.0, 1015.0], [1330.0, 2795.5], [1348.0, 1611.0], [63.0, 66.0], [1023.0, 3729.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1348.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.72049244E12, "maxY": 83.33333333333333, "series": [{"data": [[1.72049244E12, 83.33333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72049244E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.72049244E12, "maxY": 83.33333333333333, "series": [{"data": [[1.72049244E12, 83.33333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72049244E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.72049244E12, "maxY": 83.33333333333333, "series": [{"data": [[1.72049244E12, 83.33333333333333]], "isOverall": false, "label": "HTTP 요청-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72049244E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.72049244E12, "maxY": 83.33333333333333, "series": [{"data": [[1.72049244E12, 83.33333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72049244E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

